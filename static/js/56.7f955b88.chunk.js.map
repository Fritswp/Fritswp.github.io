{"version":3,"file":"static/js/56.7f955b88.chunk.js","mappings":"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","sources":["Chat/LeftColumn.js","Chat/ChatHistory.js","Chat/Contacts.js","Chat/Profile.js","Chat/MiddleColumn.js","Chat/ChatServiceconversation.js","Chat/VideoChatApp.js","Chat/Chatheader.js","Chat/ChatService.js","Chat/RightColumn.js","Chat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { auth } from '../firebase';\n\nconst LeftColumn = ({ handleButtonClick, isLeftColumnVisible }) => {\n  const [activeButton, setActiveButton] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const isMobile = window.innerWidth <= 768;\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user); // Set the current user when authenticated\n      } else {\n        setCurrentUser(null); // Reset the current user if not authenticated\n      }\n    });\n\n    return () => unsubscribe(); // Unsubscribe from the auth state listener\n  }, []);\n\n  const handleButtonClickInternal = (buttonName) => {\n    // Call the parent function passed as a prop\n    handleButtonClick(buttonName);\n    setActiveButton(buttonName);\n  };\n\n  const goBack = () => {\n    window.history.back(); // This will go back one page in the browser history\n  };\n\n    return (\n<div className={`chat-left ${isLeftColumnVisible ? '' : 'hide'}`}>\n        <div className=\"chatleft-column\">\n            <div className=\"d-none d-md-block mb-4\"> \n            <div className=\"avatar-section\">\n            {currentUser && currentUser.photoURL && ( // Check if currentUser and photoURL exist\n              <img\n                src={currentUser.photoURL} // Use currentUser's photoURL\n                alt=\"Avatar\"\n                className=\"w-100 h-auto rounded-circle\"\n                style={{ maxWidth: '12rem' }}\n              />\n            )}\n  </div>\n\n  \n  \n            <hr className=\"avatar-divider\" />\n            </div>\n      \n            <div className=\"LeftColumn-buttons \">\n        <div className=\"chatbutton-container flex-wrap justify-content-center justify-content-md-start gap-2\">\n  \n            <div className=\"button-container\" onClick={() => handleButtonClickInternal('Chat History')}>\n  <button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\" />\n      </svg>\n      \n          </button>\n  \n          {activeButton === 'Chat History' && <div className=\"activated-indicator\"></div>}\n          </div>\n  \n          <div className=\"button-container\" onClick={() => handleButtonClickInternal('Contacts')}>\n          <button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z\" />\n            </svg>\n          </button>\n          {activeButton === 'Contacts' && <div className=\"activated-indicator\"></div>}\n        </div>\n  \n        <div className=\"button-container\" onClick={() => handleButtonClickInternal('Profile')}>\n      <button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z\" />\n      </svg>\n          </button>\n  \n          {activeButton === 'Profile' && <div className=\"activated-indicator\"></div>}\n          </div>\n  \n       <div className=\"button-container\" onClick={() => handleButtonClickInternal('Settings')}>\n      <button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\" />\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n      </svg>\n          </button>\n          {activeButton === 'Settings' && <div className=\"activated-indicator\"></div>}\n          </div>\n          {isMobile && (\n            <div className=\"button-container\" onClick={() => handleButtonClickInternal('Back')}>\n              <button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\" onClick={goBack}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3\" />\n                </svg>\n              </button>\n            </div>\n          )}\n  \n   </div>\n   \n   </div>\n   {!isMobile && (\n   <div className='logout-container '>\n<button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\" onClick={goBack}>\n<svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3\" />\n</svg>\n</button>\n</div>\n   )}\n    \n            </div>\n            </div>\n    );\n  };\n  export default LeftColumn;","import React, { useState, useEffect } from 'react';\nimport { db, collection, doc, getDoc, getDocs, onSnapshot } from '../firebase';\nimport { auth } from '../firebase'; // Import Firebase auth\nimport { deleteDoc } from 'firebase/firestore';\n\nconst ChatHistory = ({ isActive, toggleRightColumnVisibility, updateOtherUserID, otherUserUID }) => {\nconst [showChatHistory, setShowChatHistory] = useState(false);\nconst [currentUserUID, setCurrentUserUID] = useState('');\nconst [otherUserIDs, setOtherUserIDs] = useState([]);\nconst [chatsWithUserData, setChatsWithUserData] = useState([]);\nconst [userProfilesCache, setUserProfilesCache] = useState({});\nconst [hasNewMessages, setHasNewMessages] = useState(false);\nconst [hasNewChats, setHasNewChats] = useState(false);\nconst [unreadMessages, setUnreadMessages] = useState({});\n\nuseEffect(() => {\nconst isMobile = window.matchMedia('(max-width: 768px)').matches;\nif (!isMobile) {\n// Run the updateOtherUserID logic only on desktop\nif (!otherUserUID && chatsWithUserData.length > 0) {\nconst firstChat = chatsWithUserData[0];\nconst firstChatOtherUserID = firstChat?.otherUserID || null;\nupdateOtherUserID(firstChatOtherUserID, currentUserUID);\n}\n}\n}, [chatsWithUserData, otherUserUID, currentUserUID, updateOtherUserID]);\n\nuseEffect(() => {\nconst fetchChatsForCurrentUser = async (authUID) => {\nconst chatsCollection = collection(db, 'chats');\ntry {\nconst querySnapshot = await getDocs(chatsCollection);\nconst chats = [];\nquerySnapshot.forEach((doc) => {\nconst chatID = doc.id;\nconst [fetchedAuthUID, fetchedOtherUserID] = chatID.split('_');\nif (fetchedAuthUID === authUID || fetchedOtherUserID === authUID) {\nconst otherUserID = fetchedAuthUID === authUID ? fetchedOtherUserID : fetchedAuthUID;\nsetOtherUserIDs((prevUserIDs) => [...prevUserIDs, otherUserID]);\nchats.push({ id: doc.id, data: doc.data(), otherUserID });\n}\n});\n// Check if there are new chats or messages\nconst hasNewMessages = chats.some(chat => chat.data.messages);\nconst hasNewChats = chats.length > chatsWithUserData.length;\nif (hasNewMessages) {\nsetHasNewMessages(true);\n}\nif (hasNewChats) {\nsetHasNewChats(true);\n}\nsetChatsWithUserData(chats);\n// Use onSnapshot to listen for real-time updates\nconst unsubscribe = onSnapshot(chatsCollection, (snapshot) => {\nsnapshot.docChanges().forEach((change) => {\nconst chatID = change.doc.id;\nconst [fetchedAuthUID, fetchedOtherUserID] = chatID.split('_');\nconst otherUserID = fetchedAuthUID === authUID ? fetchedOtherUserID : fetchedAuthUID;\n// Check if the change is related to the current user\nif (fetchedAuthUID === authUID || fetchedOtherUserID === authUID) {\n// Handle the change based on the type (added, modified, removed)\nif (change.type === 'added' || change.type === 'modified') {\n// Update the state with the new or modified chat\nsetChatsWithUserData((prevChats) => {\nconst existingChatIndex = prevChats.findIndex((chat) => chat.id === chatID);\nif (existingChatIndex !== -1) {\n// Modify existing chat\nconst updatedChats = [...prevChats];\nupdatedChats[existingChatIndex] = { id: chatID, data: change.doc.data(), otherUserID };\nreturn updatedChats;\n} else {\n// Add new chat\nreturn [...prevChats, { id: chatID, data: change.doc.data(), otherUserID }];\n}\n});\n// Set hasNewMessages or hasNewChats accordingly\nif (change.doc.data().messages) {\nsetHasNewMessages(true);\n} else {\nsetHasNewChats(true);\n}\n} else if (change.type === 'removed') {\n// Handle the removal of a chat\nsetChatsWithUserData((prevChats) => prevChats.filter((chat) => chat.id !== chatID));\n}\n}\n});\n}); \nreturn () => {\nunsubscribe();\n};\n} catch (error) {\nconsole.error('Error fetching chats:', error);\n}\n};\n\nconst unsubscribe = auth.onAuthStateChanged((user) => {\nif (user) {\nconst authUID = user.uid;\nsetCurrentUserUID(authUID);\nfetchChatsForCurrentUser(authUID);\n}\n});\nreturn () => {\nunsubscribe();\n};\n}, []);\n\nconst fetchUserProfiles = async (otherUserID) => {\nif (userProfilesCache[otherUserID]) {\nreturn userProfilesCache[otherUserID];\n}\nconst firestore = db;\nlet userData = {};\ntry {\nconst expertAppsRef = collection(firestore, 'expertApplications');\nconst expertAppDoc = doc(expertAppsRef, otherUserID);\nconst expertDocSnap = await getDoc(expertAppDoc);\nif (expertDocSnap.exists()) {\nconst expertData = expertDocSnap.data();\nuserData = {\nphotoURL: expertData.photoURL || '',\ndisplayName: expertData.displayName || 'Unknown',\n};\n} else {\nconst userProfilesRef = collection(firestore, 'userProfiles');\nconst userProfileDoc = doc(userProfilesRef, otherUserID);\nconst docSnap = await getDoc(userProfileDoc);\n\nif (docSnap.exists()) {\nconst userProfileData = docSnap.data();\nuserData = {\nphotoURL: userProfileData.photoURL || '',\ndisplayName: userProfileData.displayName || 'Unknown',\n};\n}\n}\n\nsetUserProfilesCache(prevCache => ({\n...prevCache,\n[otherUserID]: userData,\n}));\n} catch (error) {\nconsole.error('Error getting user profile:', error);\n}\nreturn userData;\n};\n\nuseEffect(() => {\nconst updateChatsWithUserData = async () => {\nconst updatedChats = await Promise.all(\nchatsWithUserData.map(async (chat) => {\nconst userData = await fetchUserProfiles(chat.otherUserID);\nreturn { ...chat, userData };\n})\n);\nsetChatsWithUserData(updatedChats);\n};\nif (chatsWithUserData.length > 0) {\nupdateChatsWithUserData();\n}\n}, [chatsWithUserData]);\n\nconst getLatestMessageTime = (chat, currentUserId) => {\n};\n\nconst handleDeleteChat = async (chatID, event) => {\nevent.stopPropagation();\ntry {\nawait deleteDoc(doc(db, 'chats', chatID));\nupdateOtherUserID(null, currentUserUID);\nsetChatsWithUserData((prevChats) => prevChats.filter((chat) => chat.id !== chatID));\n} catch (error) {\nconsole.error('Error deleting chat:', error);\n}\n};\n\nconst handleChatButtonClick = (otherUserID, currentUserID) => {\nupdateOtherUserID(otherUserID, currentUserID);\nsetShowChatHistory(true);\ntoggleRightColumnVisibility();\n};\n\nconst hasUnreadMessages = async (chat, currentUserUID) => {\ntry {\nconst chatID = chat.id;\nconst messagesCollectionRef = collection(db, `chats/${chatID}/messages`);\nconst querySnapshot = await getDocs(messagesCollectionRef);\nfor (const doc of querySnapshot.docs) {\nconst message = doc.data();\nif (message.receiver === currentUserUID && !message.isRead) {\nreturn true;\n}\n}\nreturn false;\n} catch (error) {\nconsole.error('Error checking for unread messages:', error);\nreturn false;\n}\n};\nuseEffect(() => {\nconst fetchUnreadMessages = async () => {\nconst unreadMessages = await Promise.all(chatsWithUserData.map(chat => hasUnreadMessages(chat, currentUserUID)));\nsetUnreadMessages(unreadMessages);\n};\n\nfetchUnreadMessages();\n}, [chatsWithUserData, currentUserUID]);\nreturn (\n<div className={isActive ? 'visible' : 'hidden'}>\n<div className=\"p-2 flex flex-col gap-2 h-full\">\n<div className=\" d-flex flex-column gap-2\">\n<div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n<div>\n<h4>Chats</h4>\n</div>\n<div className=\"d-flex \">\n\n<button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 01-.825-.242m9.345-8.334a2.126 2.126 0 00-.476-.095 48.64 48.64 0 00-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0011.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155\" />\n</svg>\n</button> \n<button type=\"button\" className=\"py-3 px-3 gap-4 chat-btn\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 013 19.875v-6.75zM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V8.625zM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V4.125z\" />\n</svg>\n</button>\n</div>\n</div>\n<div className=\"relative flex flex-col\">\n<div>\n</div>\n</div>\n{chatsWithUserData.map((chat, index) => (\n  <div key={index} className=\"relative\">\n    <button\n     className=\"chatbutton-history\"\n      onClick={() => handleChatButtonClick(chat.otherUserID, currentUserUID)}\n    >\n      <div className=\"avatar-wrapper\">\n        <div className={`avatar-inner ${unreadMessages[index] ? 'unread-border-overlay' : ''}`}>\n          <img\n            src={chat.userData?.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`}\n            alt=\"Avatar\"\n            className=\"small-avatar-mobile rounded-circle\"\n          />\n        </div>\n      </div>\n   \n        <p className=\"font-weight-bold mb-0 text-start ms-2\">{chat.userData?.displayName}</p>\n    \n      <div className=''>\n        <button className='delete-button-history' onClick={(event) => handleDeleteChat(chat.id, event)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n          </svg>\n        </button>\n      </div>\n    </button>\n  </div>\n))}\n\n\n\n</div>\n</div>\n</div>\n);\n};\nexport default ChatHistory;\n","import React, { useState, useEffect } from 'react';\nimport { collection, getDocs, getDoc, doc } from 'firebase/firestore';\nimport { Link } from 'react-router-dom'; // Import Link from React Router\nimport { firestore } from '../firebase';\nimport Fuse from 'fuse.js';\n\n\nconst Contacts = ({ toggleRightColumnVisibility }) => {\n  const [showContacts, setShowContacts] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    if (searchQuery.trim() !== '') {\n      const fetchData = async (collectionName) => {\n        const collectionRef = collection(firestore, collectionName);\n        const querySnapshot = await getDocs(collectionRef);\n        const data = [];\n\n        querySnapshot.forEach((doc) => {\n          const item = { ...doc.data(), otherUserUID: doc.id };\n          data.push(item);\n        });\n\n        return data;\n      };\n\n      const fetchExpertData = fetchData('expertApplications');\n      const fetchProfileData = fetchData('userProfiles');\n\n      Promise.all([fetchExpertData, fetchProfileData])\n        .then(([expertsData, profilesData]) => {\n          const combinedData = [...expertsData, ...profilesData];\n\n          const fuseOptions = {\n            keys: ['displayName', 'occupation', 'keywords'],\n            includeScore: true,\n            includeMatches: true,\n            threshold: 0.4,\n          };\n\n          const fuse = new Fuse(combinedData, fuseOptions);\n          const searchResults = fuse.search(searchQuery).map((result) => result.item);\n\n          setSearchResults(searchResults);\n        })\n        .catch((error) => {\n          console.error('Error fetching search results:', error);\n        });\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery]);\n\n  const handleSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSearchKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      toggleRightColumnVisibility();\n    }\n  };\n\n  const handleButtonClick = async (result) => {\n    toggleRightColumnVisibility();\n\n    try {\n      const expertAppsRef = collection(firestore, 'expertApplications');\n      const expertDocSnap = await getDoc(doc(expertAppsRef, result.otherUserUID));\n\n      console.log('Expert Doc Snap:', expertDocSnap.data());\n\n      if (expertDocSnap.exists()) {\n        const customURL = expertDocSnap.data().customURL;\n        console.log('Custom URL:', customURL);\n        window.location.href = `/expert/${customURL}`; // Use React Router's Link path\n      } else {\n        const userProfilesRef = collection(firestore, 'userProfiles');\n        const userDocSnap = await getDoc(doc(userProfilesRef, result.otherUserUID));\n\n        console.log('User Doc Snap:', userDocSnap.data());\n\n        if (userDocSnap.exists()) {\n          const customURL = userDocSnap.data().customURL;\n          console.log('Custom URL:', customURL);\n          window.location.href = `/user/${customURL}`; // Use React Router's Link path\n        } else {\n          console.log('User profile not found for the specified UID.');\n        }\n      }\n    } catch (error) {\n      console.error('Error handling button click:', error.message);\n    }\n  };\n  \n  return (\n    <div className=\"d-flex flex-column gap-2 mt-3\">\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          className=\"chat-search-input\"\n          placeholder=\"Search for Experts\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n          onKeyDown={handleSearchKeyPress}\n        />\n      </div>\n      {searchResults.map((result, index) => (\n          <Link>\n        <button\n          key={index}\n          className=\"py-2 px-2 pe-5 gap-4 chat-btn\"\n          onClick={() => handleButtonClick(result)}\n        >\n          <div className=\"row align-items-center\">\n            <div className=\"col-auto\">\n              <div className=\"small-avatar\">\n                <img\n                  src={result.photoURL || 'avatar.png'}\n                  alt=\"Avatar\"\n                  className=\"w-100 h-auto rounded-circle\"\n                  style={{ maxWidth: '12rem' }}\n                />\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"text-end\">\n                <p className=\"font-weight-bold mb-0\">{result.displayName}</p>\n                <p className=\"text-sm text-muted\">{result.occupation}</p>\n              </div>\n            </div>\n          </div>\n        </button>\n         </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, { useEffect, useState } from 'react';\nimport { auth, firestore } from '../firebase'; \nimport { doc, getDoc } from 'firebase/firestore';\n\nconst Profile = () => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [description, setDescription] = useState('');\n  const [city, setCity] = useState('');\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setCurrentUser(user);\n\n        // Check if user exists in expertApplications collection\n        const expertProfileRef = doc(firestore, 'expertApplications', user.uid);\n        const expertProfileSnapshot = await getDoc(expertProfileRef);\n\n        if (expertProfileSnapshot.exists()) {\n          const expertProfileData = expertProfileSnapshot.data();\n          setDescription(expertProfileData.description || ''); // Set description from expertApplications\n          setCity(expertProfileData.city || ''); // Set city from expertApplications\n        } else {\n          // If user not found in expertApplications, check in userProfiles collection\n          const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n          const userProfileSnapshot = await getDoc(userProfileRef);\n\n          if (userProfileSnapshot.exists()) {\n            const userProfileData = userProfileSnapshot.data();\n            setDescription(userProfileData.description || ''); // Set description from userProfiles\n            setCity(userProfileData.city || ''); // Set city from userProfiles\n          } else {\n            // Handle case where user doesn't exist in either collection\n            setDescription('Description not found');\n            setCity('City not found');\n          }\n        }\n      } else {\n        setCurrentUser(null);\n        setDescription('');\n        setCity('');\n      }\n    });\n\n    return () => unsubscribe(); // Unsubscribe from the auth state listener\n  }, []);\n\n\n  return (\n    <div className=\"d-flex flex-column gap-2 mt-3\">\n      <div className=\"justify-content-center align-items-center px-8\">\n        <div className=\"text-center\">\n          {currentUser && currentUser.photoURL && (\n            <img\n              className=\"medium-avatar mx-auto user-avatar mb-2\"\n              src={currentUser.photoURL}\n              alt=\"User Avatar\"\n            />\n          )}\n          {currentUser && currentUser.displayName && (\n            <>\n              <h4>{currentUser.displayName}</h4>\n              <p className='text-muted'>{description}</p> {/* Display bio here */}\n              <hr className=\"avatar-divider\" />\n            </>\n          )}\n        </div>\n\n\n</div>\n<button\n    className=\"d-flex chat-btn chat-btn-history align-items-center px-4 p-2  w-100  gap-4\"\n      style={{ transform: 'none' }}\n      // Add any additional props you need\n    >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" style={{ paddingRight: '5px' }} fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"30\" width=\"30\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75\" />\n            </svg>\n\n   My Pofile\n    </button>\n    <button\n    className=\"d-flex chat-btn chat-btn-history align-items-center px-4 p-2  gap-4   w-100 \"\n      style={{ transform: 'none' }}\n      // Add any additional props you need\n    >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" style={{ paddingRight: '5px' }} fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"30\" width=\"30\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 10.5a3 3 0 11-6 0 3 3 0 016 0z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z\" />\n            </svg>\n\n            {city}\n    </button>\n</div>\n\n  \n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport ChatHistory from './ChatHistory';\nimport Contacts from './Contacts';\nimport Profile from './Profile';\n\nconst MiddleColumn = ({ selectedMenu, toggleRightColumnVisibility,  updateOtherUserID, isMiddleColumnVisible, setActiveButton, otherUserUID, currentUserUID}) => {\n  const [currentMenu, setCurrentMenu] = useState(selectedMenu);\n  const [isVisible, setIsVisible] = useState(true);\n  const [isChatVisible, setIsChatVisible] = useState(true);\n\n  useEffect(() => {\n    setIsVisible(false);\n    const timeoutId = setTimeout(() => {\n      setCurrentMenu(selectedMenu);\n      setIsVisible(true);\n      setIsChatVisible(selectedMenu === 'Chat History'); // Set Chat visibility based on selectedMenu\n    }, 300);\n\n    return () => clearTimeout(timeoutId);\n  }, [selectedMenu]);\n\n  const switchToChatHistory = (updateActiveButton) => {\n    setCurrentMenu('Chat History');\n    setIsChatVisible(true);\n    updateActiveButton('Chat History'); // Update the active button in the parent component\n  };\n\n  return (\n    <div className={`chat-middle pt-4 ${isMiddleColumnVisible ? '' : 'hide'}`}>\n      <div className={`chat-component ${isVisible && isChatVisible ? 'visible' : 'hidden'}`}>\n        {currentMenu === 'Chat History' && (\n          <ChatHistory otherUserUID={otherUserUID}  updateOtherUserID={updateOtherUserID}  toggleRightColumnVisibility={toggleRightColumnVisibility} currentUserUID={currentUserUID}/>\n        )}\n      </div>\n      <div className={`contacts-component ${isVisible && !isChatVisible ? 'visible' : 'hidden'}`}>\n      {currentMenu === 'Contacts' && (\n          <Contacts switchToChatHistory={switchToChatHistory} setActiveButton={setActiveButton} toggleRightColumnVisibility={toggleRightColumnVisibility}  />\n        )}\n      </div>\n      <div className={`profile-component ${isVisible && currentMenu === 'Profile' ? 'visible' : 'hidden'}`}>\n        {currentMenu === 'Profile' && <Profile />}\n      </div>\n    </div>\n  );\n};\n\nexport default MiddleColumn;\n","import React, { useEffect, useState } from 'react';\nimport { collection, getDocs, query, orderBy, doc, getDoc } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\n\nconst ChatServiceconversation = ({ selectedSession, currentUserUID, otherUserUID, closeShareChat }) => {\n  const [sharedChatData, setSharedChatData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedMessageUID, setSelectedMessageUID] = useState(null);\n\n  useEffect(() => {\n    const determineSelectedMessageUID = async () => {\n      try {\n        const expertAppDocRef = doc(collection(firestore, 'expertApplications'), currentUserUID);\n        const expertAppSnapshot = await getDoc(expertAppDocRef);\n  \n        // Set selectedMessageUID based on the presence of currentUserUID in the expertApplications collection\n        setSelectedMessageUID(expertAppSnapshot.exists() ? otherUserUID : currentUserUID);\n  \n        console.log('Determining selectedMessageUID:', {\n          otherUserUID,\n          currentUserUID,\n          existsInExpertApplications: expertAppSnapshot.exists(),\n          determinedMessageUID: expertAppSnapshot.exists() ? otherUserUID : currentUserUID,\n        });\n      } catch (error) {\n        console.error('Error determining selectedMessageUID:', error);\n      }\n    };\n  \n    determineSelectedMessageUID();\n  }, [currentUserUID, otherUserUID]);\n\n  \n  useEffect(() => {\n    const fetchSharedChatData = async () => {\n      try {\n        if (selectedSession && selectedMessageUID) { // Check if selectedMessageUID is defined\n          const messagesCollectionRef = collection(firestore, 'users', selectedMessageUID, 'discussions', selectedSession, 'messages');\n          console.log('Path for messagesCollectionRef:', messagesCollectionRef.path); // Log the path\n          const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n          const messagesData = messagesSnapshot.docs.map((doc) => {\n            const { prompt, response } = doc.data();\n            return { prompt, response };\n          });\n          setSharedChatData(messagesData);\n          setIsLoading(false); // Set loading to false when data is fetched\n          console.log('Fetched messages for discussionId:', selectedSession, messagesData);\n        }\n      } catch (error) {\n        console.error('Error fetching shared chat messages:', error);\n        setIsLoading(false); // Set loading to false on error\n      }\n    };\n  \n    fetchSharedChatData();\n  }, [selectedSession, selectedMessageUID]); // Include selectedMessageUID in the dependencies array\n  \n\n  if (!selectedMessageUID) {\n    return null; // or render a loading state if needed until selectedMessageUID is determined\n  }\n\n  return (\n   <div className=\"blurred-background\">\n    <div className=\"white-box-chathistory\">\n      <div className=\"go-back-svg go-back-svg-padding\">\n        <button onClick={closeShareChat}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <h2>Share link to Chat</h2>\n      <div className='divider '></div>\n      <p>\n        Messages you send after creating your link won't be shared. Anyone with the URL will be able to view the shared chat.\n      </p>\n      <div className=\"shared-chat scroll-cat\">\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          sharedChatData.map((message, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>\n                <ReactMarkdown>{message.prompt}</ReactMarkdown>\n\n              </strong>\n              <ReactMarkdown>{message.response}</ReactMarkdown>\n              <div className='divider '></div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default ChatServiceconversation;\n","  import React, { useEffect, useRef, useState } from 'react';\n  import { db, auth } from '../firebase';\n  import { collection, doc, setDoc, getDoc, onSnapshot, getDocs, deleteDoc } from 'firebase/firestore';\n\n  const VideoChatApp = ({ currentUserUID, otherUserUID, onClose, userData }) => {\n    const localVideoRef = useRef(null);\n    const remoteVideoRef = useRef(null);\n\n    const [peerConnection, setPeerConnection] = useState(null);\n    const [localStream, setLocalStream] = useState(null);\n    const [remoteStream, setRemoteStream] = useState(null);\n    const [roomId, setRoomId] = useState(null);\n    const [isCreatingRoom, setIsCreatingRoom] = useState(false);\n    const [isJoiningRoom, setIsJoiningRoom] = useState(false);\n    const [roomIdToJoin, setRoomIdToJoin] = useState('');\n\n    const [roomName, setRoomName] = useState('');\n    const [roomExists, setRoomExists] = useState(false);\n    const [showJoinButton, setShowJoinButton] = useState(false);\n    const [callToJoin, setCallToJoin] = useState(false);\n    const [isVideoEnabled, setIsVideoEnabled] = useState(true);\n    const [isAudioEnabled, setIsAudioEnabled] = useState(true);\n    const [inCall, setInCall] = useState(false);\n    const [currentUser, setCurrentUser] = useState(null);\n    \n\n\n    let calleeCandidatesUnsubscribe = null;\n    let callerCandidatesUnsubscribe = null;\n\n    const configuration = {\n      iceServers: [\n        {\n          urls: [\n            'stun:stun.l.google.com:19302',\n            'stun:stun1.l.google.com:19302',\n            'stun:stun2.l.google.com:19302',\n            'stun:stun3.l.google.com:19302',\n            'stun:stun4.l.google.com:19302',\n          ]\n        },\n      ],\n      iceCandidatePoolSize: 10,\n    };\n\n    useEffect(() => {\n      const unsubscribe = auth.onAuthStateChanged((user) => {\n        if (user) {\n          setCurrentUser(user); // Set the current user when authenticated\n        } else {\n          setCurrentUser(null); // Reset the current user if not authenticated\n        }\n      });\n  \n      return () => unsubscribe(); // Unsubscribe from the auth state listener\n    }, []);\n\n    useEffect(() => {\n      const openUserMedia = async () => {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true,\n        });\n        localVideoRef.current.srcObject = stream;\n        setLocalStream(stream);\n        setRemoteStream(new MediaStream());\n        remoteVideoRef.current.srcObject = remoteStream;\n\n        console.log('Stream:', localVideoRef.current.srcObject);\n      };\n\n      openUserMedia();\n\n      // Clean up function\n      return () => {\n        hangUp();\n      };\n    }, [currentUserUID, otherUserUID]);\n\n    \n\n    useEffect(() => {\n      const checkRoomExists = async () => {\n        const roomRef = doc(collection(db, 'rooms'), roomIdToJoin);\n        const roomSnapshot = await getDoc(roomRef);\n        setRoomExists(roomSnapshot.exists());\n      };\n    \n      if (roomIdToJoin) {\n        checkRoomExists();\n      }\n    }, [roomIdToJoin]);\n\n    useEffect(() => {\n      // Listen for room creation on the callee side\n      const roomsCollection = collection(db, 'rooms');\n      const unsubscribe = onSnapshot(roomsCollection, (snapshot) => {\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'added') {\n            const roomData = change.doc.data();\n            const roomId = change.doc.id;\n            const swappedRoomId = `${currentUserUID}_${otherUserUID}`;\n            if (roomId === swappedRoomId) {\n              setShowJoinButton(true);\n              setRoomId(roomId);\n              setCallToJoin(true);\n            }\n          }\n        });\n      });\n\n      // Clean up the listener on component unmount\n      return () => unsubscribe();\n    }, [currentUserUID, otherUserUID]);\n\n    const createRoom = async () => {\n      // Set the room ID to otherUserUID_currentUserUID\n      const roomId = `${otherUserUID}_${currentUserUID}`;\n\n      setIsCreatingRoom(true);\n      const roomRef = doc(collection(db, 'rooms'), roomId);\n\n      const newPeerConnection = new RTCPeerConnection(configuration);\n      setPeerConnection(newPeerConnection);\n\n      registerPeerConnectionListeners(newPeerConnection);\n\n      localStream.getTracks().forEach(track => {\n        newPeerConnection.addTrack(track, localStream);\n      });\n\n      // Code for collecting ICE candidates\n      const callerCandidatesCollection = collection(db, 'rooms', roomRef.id, 'callerCandidates');\n\n      newPeerConnection.addEventListener('icecandidate', event => {\n        if (!event.candidate) {\n          console.log('Got final candidate!');\n          return;\n        }\n        console.log('Got candidate: ', event.candidate);\n        if (newPeerConnection.signalingState !== 'closed') {\n          setDoc(doc(callerCandidatesCollection), event.candidate.toJSON());\n        }\n      });\n\n      // Code for creating a room\n      const offer = await newPeerConnection.createOffer();\n      await newPeerConnection.setLocalDescription(offer);\n      console.log('Created offer:', offer);\n\n      const roomWithOffer = {\n        'offer': {\n          type: offer.type,\n          sdp: offer.sdp,\n        },\n        'name': roomName, // Add the room name to the room data\n      };\n      await setDoc(roomRef, roomWithOffer);\n      setRoomId(roomRef.id);\n      console.log(`New room created with SDP offer. Room ID: ${roomRef.id}`);\n\n      // Set remote stream as the srcObject of the remote video element\n      remoteVideoRef.current.srcObject = remoteStream;\n\n      newPeerConnection.addEventListener('track', event => {\n        console.log('Got remote track:', event.streams[0]);\n        event.streams[0].getTracks().forEach(track => {\n          console.log('Add a track to the remoteStream:', track);\n          remoteStream.addTrack(track);\n        });\n      });\n\n      // Listening for remote session description\n      onSnapshot(roomRef, async snapshot => {\n        const data = snapshot.data();\n        if (!newPeerConnection.currentRemoteDescription && data && data.answer) {\n          console.log('Got remote description: ', data.answer);\n          const rtcSessionDescription = new RTCSessionDescription(data.answer);\n          await newPeerConnection.setRemoteDescription(rtcSessionDescription);\n        }\n      });\n\n      // Listen for remote ICE candidates\n      calleeCandidatesUnsubscribe = onSnapshot(collection(db, 'rooms', roomRef.id, 'calleeCandidates'), snapshot => {\n        snapshot.docChanges().forEach(async change => {\n          if (change.type === 'added') {\n            let data = change.doc.data();\n            console.log(`Got new remote ICE candidate: ${JSON.stringify(data)}`);\n            if (newPeerConnection.signalingState !== 'closed') {\n              await newPeerConnection.addIceCandidate(new RTCIceCandidate(data));\n            }\n          }\n        });\n      });\n      setInCall(true);\n    };\n\n    const joinRoom = async () => {\n      // Set the room ID to currentUserUID_otherUserUID\n      const roomId = `${currentUserUID}_${otherUserUID}`;\n\n      if (roomId) {\n        setIsJoiningRoom(true);\n        const roomRef = doc(collection(db, 'rooms'), roomId);\n        const roomSnapshot = await getDoc(roomRef);\n\n        if (roomSnapshot.exists()) {\n          console.log('Got room:', roomSnapshot.data());\n          console.log('Create PeerConnection with configuration: ', configuration);\n          const newPeerConnection = new RTCPeerConnection(configuration);\n          setPeerConnection(newPeerConnection);\n          registerPeerConnectionListeners(newPeerConnection);\n          localStream.getTracks().forEach(track => {\n            newPeerConnection.addTrack(track, localStream);\n          });\n\n          // Code for collecting ICE candidates\n          const calleeCandidatesCollection = collection(db, 'rooms', roomId, 'calleeCandidates');\n          newPeerConnection.addEventListener('icecandidate', event => {\n            if (!event.candidate) {\n              console.log('Got final candidate!');\n              return;\n            }\n            console.log('Got candidate: ', event.candidate);\n            setDoc(doc(calleeCandidatesCollection), event.candidate.toJSON());\n          });\n\n          // Set remote stream as the srcObject of the remote video element\n          remoteVideoRef.current.srcObject = remoteStream;\n\n          newPeerConnection.addEventListener('track', event => {\n            console.log('Got remote track:', event.streams[0]);\n            event.streams[0].getTracks().forEach(track => {\n              console.log('Add a track to the remoteStream:', track);\n              remoteStream.addTrack(track);\n            });\n          });\n\n          // Code for creating SDP answer\n          const offer = roomSnapshot.data().offer;\n          console.log('Got offer:', offer);\n          await newPeerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n          const answer = await newPeerConnection.createAnswer();\n          console.log('Created answer:', answer);\n          await newPeerConnection.setLocalDescription(answer);\n\n          const roomWithAnswer = {\n            answer: {\n              type: answer.type,\n              sdp: answer.sdp,\n            },\n          };\n          await setDoc(roomRef, roomWithAnswer, { merge: true });\n\n          // Listening for remote ICE candidates\n          const callerCandidatesCollection = collection(db, 'rooms', roomId, 'callerCandidates');\n          onSnapshot(callerCandidatesCollection, snapshot => {\n            snapshot.docChanges().forEach(async change => {\n              if (change.type === 'added') {\n                let data = change.doc.data();\n                console.log(`Got new remote ICE candidate: ${JSON.stringify(data)}`);\n                if (newPeerConnection.signalingState !== 'closed') {\n                  await newPeerConnection.addIceCandidate(new RTCIceCandidate(data));\n                }\n              }\n            });\n          });\n\n          // Hide the join room button\n          setShowJoinButton(false);\n        } else {\n          console.log('Room not found');\n          setIsJoiningRoom(false);\n        }\n      } else {\n        console.error('Invalid room ID');\n      }\n      setInCall(true);\n    };\n\n    \n    \n\n    const hangUp = async () => {\n      if (localStream) {\n        const tracks = localStream.getTracks();\n        tracks.forEach(track => {\n          track.stop();\n        });\n      }\n    \n      if (remoteStream) {\n        remoteStream.getTracks().forEach(track => track.stop());\n      }\n    \n      // Delete room on hangup\n      if (roomId) {\n        const calleeCandidates = await getDocs(collection(db, 'rooms', roomId, 'calleeCandidates'));\n        calleeCandidates.forEach(async candidate => {\n          await deleteDoc(candidate.ref);\n        });\n    \n        const callerCandidates = await getDocs(collection(db, 'rooms', roomId, 'callerCandidates'));\n        callerCandidates.forEach(async candidate => {\n          await deleteDoc(candidate.ref);\n        });\n    \n        const roomRef = doc(collection(db, 'rooms'), roomId);\n        await deleteDoc(roomRef);\n      }\n    \n      if (peerConnection) {\n        peerConnection.close();\n      }\n    \n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = null;\n      }\n    \n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = null;\n      }\n    \n      // Remove the listeners\n      if (calleeCandidatesUnsubscribe) {\n        calleeCandidatesUnsubscribe();\n      }\n    \n      if (callerCandidatesUnsubscribe) {\n        callerCandidatesUnsubscribe();\n      }\n    \n      setIsCreatingRoom(false);\n      setIsJoiningRoom(false);\n      setRoomId(null);\n      setRoomIdToJoin('');\n    };\n    \n\n    const registerPeerConnectionListeners = (pc) => {\n      pc.addEventListener('icegatheringstatechange', () => {\n        console.log(`ICE gathering state changed: ${pc.iceGatheringState}`);\n      });\n\n      pc.addEventListener('connectionstatechange', () => {\n        console.log(`Connection state change: ${pc.connectionState}`);\n      });\n\n      pc.addEventListener('signalingstatechange', () => {\n        console.log(`Signaling state change: ${pc.signalingState}`);\n      });\n\n      pc.addEventListener('iceconnectionstatechange ', () => {\n        console.log(`ICE connection state change: ${pc.iceConnectionState}`);\n      });\n    };\n\n    const handleMuteAudio = () => {\n      if (localStream) {\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled;\n        setIsAudioEnabled(!isAudioEnabled);\n      }\n    };\n\n    const handleStopVideo = () => {\n      if (localStream) {\n        localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled;\n        setIsVideoEnabled(!isVideoEnabled);\n      }\n    };\n\n    const isMobile = window.innerWidth <= 768;\n\n    return (\n      <div className=\"video-chat-wrapper\">\n     \n        <div className=\"video-chat-header d-none-mobile\">\n     \n        <h2 className=\"fw-bold lead mb-3\" style={{ fontSize: '2rem' }}>{userData.displayName}</h2>\n           <div className=\"video-go-back-svg\">\n          <button onClick={onClose}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5}  stroke=\"currentColor\" className=\"w-6 h-6\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        </div>\n        <div className=\"video-chat-container\">\n          \n  <div className=\"video-row\">\n  {isMobile && (\n             <div className=\"mobile-go-back-svg\">\n       <svg     onClick={onClose} xmlns=\"http://www.w3.org/2000/svg\" color= '#212529'  fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={3} stroke=\"white\" height=\"45\" width=\"25\" style={{ margin: '5px' }}>\n       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\" />\n        </svg>\n\n\n</div>\n        )}\n    <video\n      className=\"local-video\"\n      ref={localVideoRef}\n      muted\n      autoPlay\n      playsInline\n    />\n    <video\n      className=\"remote-video\"\n      ref={remoteVideoRef}\n      autoPlay\n      playsInline\n    />\n  </div>\n  <div className=\"name-row d-none-mobile \">\n    <p>{userData.displayName}</p>\n    <p>{currentUser?.displayName}</p>\n  </div>\n</div>\n{!isMobile && (\n        <div className=\"video-chat-footer\">\n          <div className=\"video-input-container\">\n            <button className=\"settings-button\" onClick={handleMuteAudio}>\n              {isAudioEnabled ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"/>\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"/>\n                </svg>\n              )}\n            </button>\n            <button className=\"settings-button \" onClick={handleStopVideo}>\n              {isVideoEnabled ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"/>\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"/>\n                </svg>\n              )}\n            </button>\n            {!inCall && !callToJoin && !roomId && (\n              <button\n                className=\"create-room-button\"\n                onClick={() => {\n                  if (localStream) {\n                    createRoom();\n                  }\n                }}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                <path d=\"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"/>\n                </svg>\n              </button>\n            )}\n    \n            {!inCall && showJoinButton && (\n              <button className=\"join-room-button\" onClick={joinRoom}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M23.71 16.67C20.66 13.78 16.54 12 12 12 7.46 12 3.34 13.78.29 16.67c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2.48 2.48c.18.18.43.29.71.29.27 0 .52-.11.7-.28.79-.74 1.69-1.36 2.66-1.85.33-.16.56-.5.56-.9v-3.1c1.45-.48 3-.73 4.6-.73s3.15.25 4.6.72v3.1c0 .39.23.74.56.9.98.49 1.87 1.12 2.66 1.85.18.18.43.28.7.28.28 0 .53-.11.71-.29l2.48-2.48c.18-.18.29-.43.29-.71 0-.27-.11-.52-.29-.7zM21.16 6.26l-1.41-1.41-3.56 3.55 1.41 1.41s3.45-3.52 3.56-3.55zM13 2h-2v5h2V2zM6.4 9.81L7.81 8.4 4.26 4.84 2.84 6.26c.11.03 3.56 3.55 3.56 3.55z\"/>\n                </svg>\n              </button>\n            )}\n    \n            {inCall && peerConnection && (\n              <button className=\"hang-up-button\" onClick={hangUp}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M12 9c-1.6 0-3.15.25-4.6.72v3.1c0 .39-.23.74-.56.9-.98.49-1.87 1.12-2.66 1.85-.18.18-.43.28-.7.28-.28 0-.53-.11-.71-.29L.29 13.08c-.18-.17-.29-.42-.29-.7 0-.28.11-.53.29-.71C3.34 8.78 7.46 7 12 7s8.66 1.78 11.71 4.67c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2.48 2.48c-.18.18-.43.29-.71.29-.27 0-.52-.11-.7-.28-.79-.74-1.69-1.36-2.67-1.85-.33-.16-.56-.5-.56-.9v-3.1C15.15 9.25 13.6 9 12 9z\"/>\n                </svg>\n              </button>\n            )}\n  \n          </div>\n     \n        </div>\n             )}\n               {isMobile && (\n      <div className=\"video-chat-footer-mobile\">\n     <div className=\"video-chat-footer\">\n          <div className=\"video-input-container\">\n          <button className=\"settings-button \" onClick={handleStopVideo}>\n              {isVideoEnabled ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"/>\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"/>\n                </svg>\n              )}\n            </button>\n        \n            {!inCall && !callToJoin && !roomId && (\n              <button\n                className=\"create-room-button\"\n                onClick={() => {\n                  if (localStream) {\n                    createRoom();\n                  }\n                }}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                <path d=\"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"/>\n                </svg>\n              </button>\n            )}\n    \n            {!inCall && showJoinButton && (\n              <button className=\"join-room-button\" onClick={joinRoom}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M23.71 16.67C20.66 13.78 16.54 12 12 12 7.46 12 3.34 13.78.29 16.67c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2.48 2.48c.18.18.43.29.71.29.27 0 .52-.11.7-.28.79-.74 1.69-1.36 2.66-1.85.33-.16.56-.5.56-.9v-3.1c1.45-.48 3-.73 4.6-.73s3.15.25 4.6.72v3.1c0 .39.23.74.56.9.98.49 1.87 1.12 2.66 1.85.18.18.43.28.7.28.28 0 .53-.11.71-.29l2.48-2.48c.18-.18.29-.43.29-.71 0-.27-.11-.52-.29-.7zM21.16 6.26l-1.41-1.41-3.56 3.55 1.41 1.41s3.45-3.52 3.56-3.55zM13 2h-2v5h2V2zM6.4 9.81L7.81 8.4 4.26 4.84 2.84 6.26c.11.03 3.56 3.55 3.56 3.55z\"/>\n                </svg>\n              </button>\n            )}\n    \n            {inCall && peerConnection && (\n              <button className=\"hang-up-button\" onClick={hangUp}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M12 9c-1.6 0-3.15.25-4.6.72v3.1c0 .39-.23.74-.56.9-.98.49-1.87 1.12-2.66 1.85-.18.18-.43.28-.7.28-.28 0-.53-.11-.71-.29L.29 13.08c-.18-.17-.29-.42-.29-.7 0-.28.11-.53.29-.71C3.34 8.78 7.46 7 12 7s8.66 1.78 11.71 4.67c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2.48 2.48c-.18.18-.43.29-.71.29-.27 0-.52-.11-.7-.28-.79-.74-1.69-1.36-2.67-1.85-.33-.16-.56-.5-.56-.9v-3.1C15.15 9.25 13.6 9 12 9z\"/>\n                </svg>\n              </button>\n            )}\n                 <button className=\"settings-button\" onClick={handleMuteAudio}>\n              {isAudioEnabled ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"/>\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"32px\" viewBox=\"0 0 24 24\" width=\"32px\" fill=\"white\">\n                  <path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"/>\n                </svg>\n              )}\n            </button>\n   \n          </div>\n     \n        </div>\n      </div>\n         )}\n      </div>\n    );\n    \n\n  };\n  export default VideoChatApp;","import React, { useState, useEffect } from 'react';\nimport { db, auth } from '../firebase'; // Import your Firebase instance\nimport { collection, doc, getDoc, setDoc, where, query, onSnapshot } from 'firebase/firestore';\nimport ChatServiceconversation from './ChatServiceconversation';\nimport VideoChatApp from './VideoChatApp'; \n\n\nconst ChatHeader = ({ toggleColumns, otherUserUID, currentUserUID }) => {\n  const [userData, setUserData] = useState({\n    isMobile: false,\n    photoURL: null,\n    displayName: '',\n    occupation: '',\n    isShareChatOpen: false,\n    selectedSession: null,\n    selectedMessageUID: null,\n  });\n\n  const [showVideoCall, setShowVideoCall] = useState(false);\n  const [incomingCall, setIncomingCall] = useState(null);\n\n  const toggleVideoCall = () => {\n    setShowVideoCall(prevState => !prevState);\n  };\n\n  const handleVideoChatClose = () => {\n    setShowVideoCall(false);\n  };\n\n  useEffect(() => {\n    if (currentUserUID && otherUserUID) {\n      const roomId = `${currentUserUID}_${otherUserUID}`;\n    const roomRef = doc(collection(db, 'rooms'), roomId);\n    \n    const unsubscribe = onSnapshot(roomRef, (snapshot) => {\n    if (snapshot.exists()) {\n    setIncomingCall({\n    roomId: snapshot.id,\n    offer: snapshot.data().offer,\n    });\n    } else {\n    setIncomingCall(null);\n    }\n    });\n    \n    return () => unsubscribe();\n    }\n    }, [currentUserUID, otherUserUID]);\n  \n\n\n    useEffect(() => {\n      const mediaQuery = window.matchMedia('(max-width: 768px)');\n      setUserData((prevUserData) => ({ ...prevUserData, isMobile: mediaQuery.matches }));\n  \n      const handleResize = () => {\n        setUserData((prevUserData) => ({ ...prevUserData, isMobile: mediaQuery.matches }));\n      };\n  \n      mediaQuery.addListener(handleResize);\n  \n      return () => {\n        mediaQuery.removeListener(handleResize);\n      };\n    }, []);\n  \n    const fetchUserData = async (userTypeRef) => {\n      try {\n        const userDocSnap = await getDoc(doc(userTypeRef, otherUserUID));\n  \n        if (userDocSnap.exists()) {\n          const userData = userDocSnap.data();\n          if (userData) {\n            setUserData((prevUserData) => ({\n              ...prevUserData,\n              photoURL: userData.photoURL,\n              displayName: userData.displayName ?? '',\n              occupation: userData.occupation ?? '',\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          if (otherUserUID) {\n            const firestore = db;\n            const expertAppsRef = collection(firestore, 'expertApplications');\n            const expertDocSnap = await getDoc(doc(expertAppsRef, otherUserUID));\n  \n            if (expertDocSnap.exists()) {\n              fetchUserData(expertAppsRef);\n            } else {\n              const userProfilesRef = collection(firestore, 'userProfiles');\n              fetchUserData(userProfilesRef);\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      };\n  \n      fetchData();\n    }, [otherUserUID]);\n  \n    useEffect(() => {\n      const fetchSessionAndUpdate = async () => {\n        try {\n          if (otherUserUID && currentUserUID) {\n            const firestore = db;\n            const conversationsCollectionRef = collection(firestore, 'sharedConversations');\n            let discussionID;\n  \n            const expertAppsRef = collection(firestore, 'expertApplications');\n            const expertDocSnap = await getDoc(doc(expertAppsRef, currentUserUID));\n  \n            if (expertDocSnap.exists()) {\n              discussionID = `${otherUserUID}_${currentUserUID}`;\n            } else {\n              discussionID = `${currentUserUID}_${otherUserUID}`;\n            }\n  \n            const conversationRef = doc(conversationsCollectionRef, discussionID);\n            const conversationSnapshot = await getDoc(conversationRef);\n  \n            if (conversationSnapshot.exists()) {\n              const selectedSession = conversationSnapshot.data().selectedSession;\n              setUserData((prevUserData) => ({\n                ...prevUserData,\n                selectedSession: selectedSession,\n              }));\n            } else {\n            }\n          } else {\n            setUserData((prevUserData) => ({\n              ...prevUserData,\n              selectedMessageUID: null,\n              selectedSession: null,\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching and updating session:', error);\n        }\n      };\n  \n      fetchSessionAndUpdate();\n    }, [otherUserUID, currentUserUID]);\n  \n    const closeShareChat = () => {\n      setUserData((prevUserData) => ({ ...prevUserData, isShareChatOpen: false }));\n    };\n\n    const renderCustomSVG = () => {\n      if (userData.selectedSession) {\n        return (\n          <svg\n          className='render-chat'\n            xmlns=\"http://www.w3.org/2000/svg\"\n            color=\"#212529\"\n            fill={'none'}\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1}\n            stroke=\"currentColor\"\n            height=\"25\"\n            width=\"25\"\n            onClick={() => {\n              setUserData((prevUserData) => ({ ...prevUserData, isShareChatOpen: true }));\n            }}\n          >\n        <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z\"\n        />\n          </svg>\n      );\n    } else {\n      return null;\n    }\n  };\n  \n    const handleImageClick = async () => {\n      try {\n        if (!otherUserUID) {\n          throw new Error('otherUserUID is undefined or null');\n        }\n  \n        const firestore = db;\n        const expertAppsRef = collection(firestore, 'expertApplications');\n        const expertDocSnap = await getDoc(doc(expertAppsRef, otherUserUID));\n  \n        if (expertDocSnap.exists()) {\n          const customURL = expertDocSnap.data().customURL;\n          window.location.href = `https://www.tioassist.io/expert/${customURL}`;\n        } else {\n          const userProfilesRef = collection(firestore, 'userProfiles');\n          const userDocSnap = await getDoc(doc(userProfilesRef, otherUserUID));\n  \n          if (userDocSnap.exists()) {\n            const customURL = userDocSnap.data().customURL;\n            window.location.href = `https://www.tioassist.io/user/${customURL}`;\n          } else {\n          }\n        }\n      } catch (error) {\n        console.error('Error handling image click:', error.message);\n      }\n    };\n  \n    return (\n      <div className=\"chat-header\" >\n        <div className='chat-header-one'>\n        {userData.isMobile && (\n          <svg\n            onClick={toggleColumns}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            color=\"#212529\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1}\n            stroke=\"currentColor\"\n            height=\"25\"\n            width=\"25\"\n            style={{ marginRight: '8px' }}\n          >\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3\" />\n          </svg>\n        )}\n  \n        <div className=\"small-avatar-mobile\" onClick={handleImageClick}>\n          <img\n            className=\"small-avatar-mobile \"\n            src={userData.photoURL}\n            alt=\"Custom 404 Image\"\n          />\n        </div>\n        <div className=\"user-info\">\n          <div>\n            <p className=\"font-weight-bold mb-0\">{userData.displayName}</p>\n            <p className=\"text-sm text-muted\">{userData.occupation}</p>\n          </div>\n        </div>\n        </div>\n        <div className='chat-header-two'>\n  \n        <svg    \n            xmlns=\"http://www.w3.org/2000/svg\"\n            color=\"#212529\"\n            fill={'none'}\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1}\n            stroke=\"currentColor\"\n            height=\"25\"\n            id=\"call\"\n            width=\"25\">\n            \n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z\" />\n</svg>\n<div className={`svg-wrapper ${incomingCall ? 'unread-svg-border' : ''}`}    onClick={toggleVideoCall}>\n<svg    \n            xmlns=\"http://www.w3.org/2000/svg\"\n            color=\"#212529\"\n            fill={'none'}\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1}\n            stroke=\"currentColor\"\n            height=\"25\" width=\"25\" style={{ margin: '5px' }}\n            id=\"videocall\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m15.75 10.5 4.72-4.72a.75.75 0 0 1 1.28.53v11.38a.75.75 0 0 1-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25h-9A2.25 2.25 0 0 0 2.25 7.5v9a2.25 2.25 0 0 0 2.25 2.25Z\" />\n</svg>\n</div>\n{renderCustomSVG()}\n  \n        {userData.isShareChatOpen && (\n          <ChatServiceconversation\n            currentUserUID={currentUserUID}\n            selectedSession={userData.selectedSession}\n            otherUserUID={otherUserUID}\n            closeShareChat={closeShareChat}\n          />\n        )}\n\n        </div>\n       {showVideoCall && (\n        <VideoChatApp\n          currentUserUID={currentUserUID}\n          otherUserUID={otherUserUID}\n          onClose={handleVideoChatClose}\n          userData={userData}  // Pass onClose function to VideoChatApp\n        />\n      )}\n    </div>\n    );\n  };\n  \n  export default ChatHeader;","import { db, collection, doc, onSnapshot, setDoc, serverTimestamp, updateDoc, getDocs, query, where, addDoc } from '../firebase';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\n\nconst storage = getStorage(); \n\nconst chatsCollection = collection(db, 'chats');\n\nconst createChatID = (currentUserUID, otherUserUID) => {\n  return currentUserUID < otherUserUID\n    ? `${currentUserUID}_${otherUserUID}`\n    : `${otherUserUID}_${currentUserUID}`;\n};\n\nconst sendMessage = async (currentUserUID, otherUserUID, messageText, selectedFile) => {\n  try {\n    const chatID = createChatID(currentUserUID, otherUserUID);\n    const chatDocRef = doc(chatsCollection, chatID);\n\n    // First, create the parent chat document\n    await setDoc(chatDocRef, { /* Chat document data */ });\n\n    // Construct message data\n    const messageObject = {\n      text: messageText,\n      sender: currentUserUID,\n      receiver: otherUserUID,\n      timestamp: serverTimestamp(),\n      isRead: false,\n    };\n\n    // Then add the message to the 'messages' subcollection\n    const messagesCollectionRef = collection(chatDocRef, 'messages');\n    await addDoc(messagesCollectionRef, messageObject);\n\n    return true;\n  } catch (error) {\n    console.error('Error sending message:', error);\n    return false;\n  }\n};\n\nconst getMessages = (currentUserUID, otherUserUID, callback) => {\n  try {\n    const chatID = createChatID(currentUserUID, otherUserUID);\n    const chatDocRef = doc(chatsCollection, chatID);\n    const messagesCollectionRef = collection(chatDocRef, 'messages');\n\n    onSnapshot(messagesCollectionRef, (snapshot) => {\n      try {\n        const messages = snapshot.docs.map((doc) => {\n          return { id: doc.id, ...doc.data() };\n        });\n        const allMessages = messages.sort((a, b) => b.timestamp - a.timestamp);\n        const reversedMessages = allMessages.reverse();\n        callback(reversedMessages);\n      } catch (error) {\n        console.error('Error getting messages:', error);\n        callback([]); // Handle errors by returning an empty array or taking appropriate action\n      }\n    });\n  } catch (error) {\n    console.error('Error getting messages:', error);\n    callback([]); // Handle errors by returning an empty array or taking appropriate action\n  }\n};\n\nconst markMessageAsRead = async (currentUserUID, otherUserUID, messages) => {\n  try {\n    const chatID = createChatID(currentUserUID, otherUserUID);\n    const chatDocRef = doc(chatsCollection, chatID);\n    const messagesCollectionRef = collection(chatDocRef, 'messages');\n\n    // Loop through each message\n    messages.forEach(async (message) => {\n      // Check if the message has already been marked as read\n      if (!message.isRead && message.receiver === currentUserUID) {\n        // If the current user is the receiver and the message is unread, mark it as read\n        const messageDocRef = doc(messagesCollectionRef, message.id);\n        await updateDoc(messageDocRef, { isRead: true });\n        console.log('Message marked as read:', message.id);\n      }\n    });\n  } catch (error) {\n    console.error('Error marking messages as read:', error);\n  }\n};\n\nexport { sendMessage, getMessages, markMessageAsRead };\n","import React, { useState, useEffect, useRef } from 'react';\nimport ChatHeader from './Chatheader';\nimport { sendMessage, getMessages, markMessageAsRead } from './ChatService';\nimport { auth, onAuthStateChanged, db } from '../firebase';\nimport { onSnapshot, collection, getDocs } from 'firebase/firestore';\n\n\nconst RightColumn = ({ isRightColumnVisible, toggleColumns, otherUserUID }) => {\n  const [messages, setMessages] = useState([]);\n  const chatBoxRef = useRef(null);\n  const messageInputRef = useRef(null);\n  const [inputValue, setInputValue] = useState('');\n  const [currentUserUID, setCurrentUserUID] = useState(null);\n  const [isChattingWithSelf, setIsChattingWithSelf] = useState(false);\n  const [textareaHeight, setTextareaHeight] = useState('28px');\n  const maxTextareaHeight = 200;\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const fileInputRef = useRef(null);\n  const [selectedFilePreview, setSelectedFilePreview] = useState(null);\n  const [lastSeenMessageId, setLastSeenMessageId] = useState(null);\n\n  const [initialLoad, setInitialLoad] = useState(true);\n\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setCurrentUserUID(user.uid);\n      } else {\n        setCurrentUserUID(null);\n      }\n    });\n    return () => unsubscribe(); // Clean up the listener\n  }, []);\n\n  useEffect(() => {\n    setIsChattingWithSelf(currentUserUID === otherUserUID);\n  }, [currentUserUID, otherUserUID]);\n\n  useEffect(() => {\n    if (currentUserUID && otherUserUID) {\n      getMessages(currentUserUID, otherUserUID, (newMessages) => {\n        // Reverse the messages here and then set them in the state\n        const reversedMessages = newMessages.slice(0).reverse();\n        setMessages(reversedMessages);\n\n        // Scroll to bottom when new messages are fetched\n        scrollToBottom();\n      });\n    }\n  }, [currentUserUID, otherUserUID]);\n\n  useEffect(() => {\n    markMessageAsRead(currentUserUID, otherUserUID);\n  }, [currentUserUID, otherUserUID]);\n  \n\n  const isMobile = window.innerWidth <= 767; // Adjust the width threshold as needed\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n\n      // Display a preview of the image\n      if (file.type && file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          // Update the React state to show the image preview\n          setSelectedFilePreview(event.target.result);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (selectedFile && selectedFile.type && selectedFile.type.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setSelectedFilePreview(event.target.result);\n      };\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setSelectedFilePreview(null);\n    }\n  }, [selectedFile]);\n  \n\n  const handleMessageSend = async () => {\n    try {\n      if (isChattingWithSelf) {\n        console.error(\"Cannot send messages to yourself.\");\n        console.log('currentUserUID:', currentUserUID);\n        console.log('otherUserUID:', otherUserUID);\n        return;\n      }\n  \n      if (inputValue.trim() === '' && !selectedFile) {\n        return;\n      }\n  \n      if (currentUserUID && otherUserUID) {\n        const success = await sendMessage(currentUserUID, otherUserUID, inputValue, selectedFile);\n        if (success) {\n          setInputValue('');\n          setSelectedFile(null);\n          // Clear the image preview in the userui-input\n          setSelectedFilePreview(null);\n  \n          if (!isMobile) {\n            messageInputRef.current.focus();\n          }\n        }\n      } else {\n        console.error('currentUserUID or otherUserUID is undefined');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  \n  \n  const scrollToBottom = () => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  };\n  \n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleTextareaResize = () => {\n    const textarea = messageInputRef.current;\n    if (textarea) {\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      setTextareaHeight(`${newHeight}px`);\n    }\n  };\n  \n  \n  \n  useEffect(() => {\n    handleTextareaResize();\n  }, []);\n  \n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n    handleTextareaResize();\n  };\n\n  useEffect(() => {\n    handleTextareaResize();\n  }, []);\n\n  useEffect(() => {\n    if (inputValue === '') {\n      setTextareaHeight('28px');\n    }\n  }, [inputValue]);\n\n  const formatTimestamp = (timestamp) => {\n    if (timestamp) {\n      const date = timestamp.toDate();\n      const hours = date.getHours().toString().padStart(2, '0'); // Get hours in 24-hour format\n      const minutes = date.getMinutes().toString().padStart(2, '0'); // Get minutes\n      return `${hours}:${minutes}`; // Format to HH:MM\n    }\n    return ''; // Return an empty string if the timestamp is not available\n  };\n\n  const handleScroll = () => {\n    // Calculate the last seen message based on scroll position\n    if (chatBoxRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = chatBoxRef.current;\n      const lastVisibleMessageIndex = Math.floor(scrollTop / clientHeight);\n      if (lastVisibleMessageIndex >= 0 && lastVisibleMessageIndex < messages.length) {\n        const lastSeenMessage = messages[lastVisibleMessageIndex];\n        setLastSeenMessageId(lastSeenMessage.id);\n      }\n    }\n  };\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.addEventListener('scroll', handleScroll);\n    }\n    return () => {\n      if (chatBoxRef.current) {\n        chatBoxRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, [chatBoxRef, messages]); // Add messages to dependency array\n\n\n\n  \n\n  useEffect(() => {\n    if (currentUserUID && otherUserUID) {\n      getMessages(currentUserUID, otherUserUID, (newMessages) => {\n        const reversedMessages = newMessages.slice(0).reverse();\n        setMessages(reversedMessages);\n        scrollToBottom();\n      });\n    }\n  }, [currentUserUID, otherUserUID]);\n\n  \n\n  useEffect(() => {\n    markMessageAsRead(currentUserUID, otherUserUID, messages, lastSeenMessageId); // Pass lastSeenMessageId\n  }, [messages, currentUserUID, otherUserUID, lastSeenMessageId]);\n\n  useEffect(() => {\n    if (isRightColumnVisible && initialLoad) {\n      setInitialLoad(false);\n    }\n  }, [isRightColumnVisible, initialLoad]);\n\n\n  return (\n    <div className={`chat-right ${isRightColumnVisible && !initialLoad ? 'slide-in' : ''}`}>\n      <ChatHeader toggleColumns={toggleColumns} otherUserUID={otherUserUID} currentUserUID={currentUserUID} />\n      <div className=\"chat-column\">\n        <div className=\"chat-box\" ref={chatBoxRef}>\n        {Array.isArray(messages) && messages.length > 0 ? (\n            messages.map((message, index) =>\n              message.timestamp ? (\n                <div\n                  key={index}\n                  className={message.sender === currentUserUID ? 'chat-bubble user-sent' : 'chat-bubble'}\n                >\n                  <div className=\"message\">\n                    {message.file && message.file.type && message.file.type.startsWith('image/') ? (\n                      <img\n                        src={message.file.url}\n                        alt=\"Image\"\n                      className=\"rounded-image\" \n                      />\n                    ) : (\n                      message.file && (\n                        <a\n                          href={message.file.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Download File\n                        </a>\n                      )\n                    )}\n                        {message.text && <p>{message.text}</p>}\n                  </div>\n                  <div\n                    className={`timestamp small-timestamp ${\n                      message.sender === currentUserUID ? 'user-sent-timestamp' : 'other-sent-timestamp'\n                    }`}\n                  >\n                    {formatTimestamp(message.timestamp)}\n                  </div>\n                </div>\n              ) : null\n            )\n          ) : (\n            <div>No messages yet.</div>\n)}\n\n        </div>\n        <div className=\"chatui-container\">\n    \n            <input\n              type=\"file\"\n              onChange={(e) => handleFileUpload(e)}\n              style={{ display: 'none' }}\n              ref={fileInputRef}\n            />\n            <button className=\"userui-left-button\" onClick={() => fileInputRef.current.click()}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                color=\"#212529\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1}\n                stroke=\"currentColor\"\n                height=\"25\"\n                width=\"25\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13\"\n                />\n              </svg>\n            </button>\n            <button\n              aria-label=\"Send Message\"\n              onClick={handleMessageSend}\n              className=\" userui-right-button \"\n            >\n              <i className=\"fas fa-paper-plane\"></i>\n            </button>\n            <div id=\"messageInputContainer\">\n            {selectedFile && (\n              <div className=\"image-preview-container\">\n                <img\n                  src={URL.createObjectURL(new Blob([selectedFile], { type: selectedFile.type }))}\n                  alt=\"Image Preview\"\n                  style={{ maxWidth: '70%', height: 'auto' }}\n                />\n              </div>\n            )}\n            </div>\n            <textarea\n  type=\"text\"\n  placeholder=\"Type a message...\"\n  ref={messageInputRef}\n  style={{ height: textareaHeight }}  // <-- Use the style attribute\n  value={inputValue}\n  onChange={handleInputChange}\n  onKeyDown={(e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleMessageSend();\n    }\n  }}\n  className=\"message-input scroll-col\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n/>\n\n          </div>\n          \n          </div>\n        </div>\n  \n  );\n};\n\nexport default RightColumn;\n","import React, { useState, useEffect } from 'react';\nimport LeftColumn from './LeftColumn';\nimport MiddleColumn from './MiddleColumn';\nimport RightColumn from './RightColumn';\nimport ChatHistory from './ChatHistory';\nimport Contacts from './Contacts';\nimport Profile from './Profile';\nimport { useLocation } from 'react-router-dom';\n\nconst Chat = () => {\n  const [isActive, setIsActive] = useState(false);\n  const [selectedMenu, setSelectedMenu] = useState('');\n  const [isRightColumnVisible, setIsRightColumnVisible] = useState(true);\n  const [isMiddleColumnVisible, setIsMiddleColumnVisible] = useState(true);\n  const [isLeftColumnVisible, setIsLeftColumnVisible] = useState(true);\n  const [activeButton, setActiveButton] = useState(null);\n\n  const location = useLocation();\n  const { state: locationState } = location;\n  const { currentUserUID, otherUserUID: locationOtherUserUID } = locationState || {};\n\n  const [otherUserUID, setOtherUserUID] = useState(locationOtherUserUID || null);\n\n  const updateOtherUserID = (newOtherUserID, currentUserID) => {\n    setOtherUserUID(newOtherUserID);\n    console.log('Current User ID:', currentUserID); // Log the current user ID\n  };\n\n  useEffect(() => {\n    if (locationState) {\n      // Update otherUserUID if available in the location state\n      setOtherUserUID(locationState.otherUserUID || null);\n      console.log('Other User ID:', locationState.otherUserUID); // Log the other user ID\n    }\n  }, [locationState]);\n\n  \n  // useEffect to set 'Chat History' after component mounts\n  useEffect(() => {\n    setSelectedMenu('Chat History');\n    // Check if the device is a mobile device and hide the right column initially\n    const isMobile = window.matchMedia('(max-width: 768px)').matches;\n    setIsRightColumnVisible(!isMobile);\n  }, []);\n\n  const handleButtonClick = (menu) => {\n    setIsActive(!isActive);\n    setSelectedMenu(menu);\n    setIsLeftColumnVisible(true);\n    setActiveButton(menu);  // Show the left column when a menu is selected\n  };\n\n\n\n  const toggleRightColumnVisibility = () => {\n    setIsRightColumnVisible((prevVisibility) => !prevVisibility);\n    setIsMiddleColumnVisible(false);\n    setIsLeftColumnVisible(false); // Toggle the left column visibility\n  };\n\n  useEffect(() => {\n    const isMobile = window.matchMedia('(max-width: 768px)').matches;\n    if (isMobile && otherUserUID) {\n      setIsLeftColumnVisible(false);\n      setIsMiddleColumnVisible(false);\n      setIsRightColumnVisible(true);\n    }\n  }, [otherUserUID]);\n  \n  const toggleColumns = () => {\n    setIsRightColumnVisible((prevVisibility) => !prevVisibility);\n    setIsMiddleColumnVisible(true); // Show the middle column\n    setIsLeftColumnVisible(true); // Show the left column\n  };\n\n  useEffect(() => {\n    const isMobile = window.matchMedia('(max-width: 768px)').matches;\n\n    if (isMobile) {\n      document.body.style.overflow = 'hidden';\n\n      return () => {\n        document.body.style.overflow = 'auto';\n      };\n    }\n  }, []);\n\n\n\n  return (\n    <div className=\"chatcontainer\">\n      <LeftColumn handleButtonClick={handleButtonClick} isActive={isActive} \n              toggleRightColumnVisibility={toggleRightColumnVisibility}\n              isLeftColumnVisible={isLeftColumnVisible} \n              activeButton={activeButton} // Pass activeButton state\n              setActiveButton={setActiveButton} \n              otherUserUID={otherUserUID} \n              currentUserUID={currentUserUID} \n      />\n      <MiddleColumn\n        isActive={isActive}\n        selectedMenu={selectedMenu}\n        toggleRightColumnVisibility={toggleRightColumnVisibility}\n        isMiddleColumnVisible={isMiddleColumnVisible} \n        activeButton={activeButton} // Pass activeButton state\n        setActiveButton={setActiveButton} \n        currentUserUID={currentUserUID}\n        updateOtherUserID={updateOtherUserID}\n        otherUserUID={otherUserUID}\n      >\n        {selectedMenu === 'Chat History' && <ChatHistory isActive={isActive} selectedMenu={selectedMenu} />}\n        {selectedMenu === 'Contacts' && <Contacts isActive={isActive} selectedMenu={selectedMenu} />}\n        {selectedMenu === 'Profile' && <Profile isActive={isActive} selectedMenu={selectedMenu} />}\n        {/* Add conditions for other menu options here */}\n      </MiddleColumn>\n      {otherUserUID && (\n      <RightColumn\n        isRightColumnVisible={isRightColumnVisible}\n        toggleColumns={toggleColumns}\n        otherUserUID={otherUserUID}\n      />\n    )}\n  </div>\n\n  );\n};\n\nexport default Chat;"],"names":["_ref","handleButtonClick","isLeftColumnVisible","_useState","useState","_useState2","_slicedToArray","activeButton","setActiveButton","_useState3","_useState4","currentUser","setCurrentUser","isMobile","window","innerWidth","useEffect","unsubscribe","auth","onAuthStateChanged","user","handleButtonClickInternal","buttonName","goBack","history","back","_jsx","className","concat","children","_jsxs","photoURL","src","alt","style","maxWidth","onClick","type","xmlns","color","fill","viewBox","strokeWidth","stroke","height","width","strokeLinecap","strokeLinejoin","d","isActive","toggleRightColumnVisibility","updateOtherUserID","otherUserUID","setShowChatHistory","currentUserUID","setCurrentUserUID","_useState5","_useState6","setOtherUserIDs","_useState7","_useState8","chatsWithUserData","setChatsWithUserData","_useState9","_useState10","userProfilesCache","setUserProfilesCache","_useState11","_useState12","setHasNewMessages","_useState13","_useState14","setHasNewChats","_useState15","_useState16","unreadMessages","setUnreadMessages","matchMedia","matches","length","firstChat","firstChatOtherUserID","otherUserID","fetchChatsForCurrentUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUID","chatsCollection","querySnapshot","chats","_hasNewMessages","_hasNewChats","_unsubscribe","wrap","_context","prev","next","collection","db","getDocs","sent","forEach","doc","_chatID$split","id","split","_chatID$split2","fetchedAuthUID","fetchedOtherUserID","prevUserIDs","_toConsumableArray","push","data","hasNewMessages","some","chat","messages","hasNewChats","onSnapshot","snapshot","docChanges","change","chatID","_chatID$split3","_chatID$split4","prevChats","existingChatIndex","findIndex","updatedChats","filter","abrupt","t0","console","error","stop","_x","apply","arguments","uid","fetchUserProfiles","_ref3","_callee2","firestore","userData","expertAppsRef","expertAppDoc","expertDocSnap","expertData","userProfilesRef","userProfileDoc","docSnap","userProfileData","_context2","getDoc","exists","displayName","prevCache","_objectSpread","_defineProperty","_x2","updateChatsWithUserData","_ref4","_callee4","_context4","Promise","all","map","_ref5","_callee3","_context3","_x3","handleDeleteChat","_ref6","_callee5","event","_context5","stopPropagation","deleteDoc","_x4","_x5","hasUnreadMessages","_ref7","_callee6","messagesCollectionRef","_iterator","_step","_doc","message","_context6","_createForOfIteratorHelper","docs","s","n","done","value","receiver","isRead","e","f","finish","t1","_x6","_x7","fetchUnreadMessages","_ref8","_callee7","_context7","display","justifyContent","alignItems","index","_chat$userData","_chat$userData2","process","searchQuery","setSearchQuery","searchResults","setSearchResults","trim","fetchData","collectionName","collectionRef","item","fetchExpertData","fetchProfileData","then","expertsData","profilesData","combinedData","Fuse","keys","includeScore","includeMatches","threshold","search","result","catch","customURL","userDocSnap","_customURL","log","location","href","placeholder","onChange","target","onKeyDown","key","Link","occupation","description","setDescription","city","setCity","expertProfileRef","expertProfileSnapshot","expertProfileData","userProfileRef","userProfileSnapshot","_Fragment","transform","paddingRight","selectedMenu","isMiddleColumnVisible","currentMenu","setCurrentMenu","isVisible","setIsVisible","isChatVisible","setIsChatVisible","timeoutId","setTimeout","clearTimeout","ChatHistory","Contacts","switchToChatHistory","updateActiveButton","Profile","selectedSession","closeShareChat","sharedChatData","setSharedChatData","isLoading","setIsLoading","selectedMessageUID","setSelectedMessageUID","determineSelectedMessageUID","expertAppDocRef","expertAppSnapshot","existsInExpertApplications","determinedMessageUID","fetchSharedChatData","messagesSnapshot","messagesData","path","query","orderBy","_doc$data","prompt","response","LoadingCircle","ReactMarkdown","onClose","localVideoRef","useRef","remoteVideoRef","peerConnection","setPeerConnection","localStream","setLocalStream","remoteStream","setRemoteStream","roomId","setRoomId","setIsCreatingRoom","setIsJoiningRoom","roomIdToJoin","setRoomIdToJoin","roomName","_useState17","_useState18","setRoomExists","_useState19","_useState20","showJoinButton","setShowJoinButton","_useState21","_useState22","callToJoin","setCallToJoin","_useState23","_useState24","isVideoEnabled","setIsVideoEnabled","_useState25","_useState26","isAudioEnabled","setIsAudioEnabled","_useState27","_useState28","inCall","setInCall","_useState29","_useState30","calleeCandidatesUnsubscribe","configuration","iceServers","urls","iceCandidatePoolSize","openUserMedia","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","MediaStream","hangUp","checkRoomExists","roomRef","roomSnapshot","roomsCollection","createRoom","newPeerConnection","callerCandidatesCollection","offer","roomWithOffer","RTCPeerConnection","registerPeerConnectionListeners","getTracks","track","addTrack","addEventListener","candidate","signalingState","setDoc","toJSON","createOffer","setLocalDescription","sdp","streams","rtcSessionDescription","currentRemoteDescription","answer","RTCSessionDescription","setRemoteDescription","JSON","stringify","addIceCandidate","RTCIceCandidate","joinRoom","calleeCandidatesCollection","roomWithAnswer","createAnswer","merge","_ref9","_callee10","_context10","_ref10","_callee8","_context8","ref","_ref11","_callee9","_context9","close","pc","iceGatheringState","connectionState","iceConnectionState","handleMuteAudio","getAudioTracks","enabled","handleStopVideo","getVideoTracks","fontSize","margin","muted","autoPlay","playsInline","toggleColumns","isShareChatOpen","setUserData","showVideoCall","setShowVideoCall","incomingCall","setIncomingCall","mediaQuery","prevUserData","handleResize","addListener","removeListener","fetchUserData","userTypeRef","_userData","_userData$displayName","_userData$occupation","fetchSessionAndUpdate","conversationsCollectionRef","discussionID","conversationRef","conversationSnapshot","handleImageClick","Error","marginRight","prevState","ChatServiceconversation","VideoChatApp","getStorage","createChatID","sendMessage","messageText","selectedFile","chatDocRef","messageObject","text","sender","timestamp","serverTimestamp","addDoc","getMessages","callback","reversedMessages","sort","a","b","reverse","markMessageAsRead","messageDocRef","updateDoc","_x8","isRightColumnVisible","setMessages","chatBoxRef","messageInputRef","inputValue","setInputValue","isChattingWithSelf","setIsChattingWithSelf","textareaHeight","setTextareaHeight","setSelectedFile","fileInputRef","setSelectedFilePreview","lastSeenMessageId","setLastSeenMessageId","initialLoad","setInitialLoad","newMessages","slice","scrollToBottom","startsWith","reader","FileReader","onload","readAsDataURL","handleMessageSend","focus","scrollTop","scrollHeight","handleTextareaResize","textarea","newHeight","Math","min","formatTimestamp","date","toDate","hours","getHours","toString","padStart","minutes","getMinutes","handleScroll","_chatBoxRef$current","clientHeight","lastVisibleMessageIndex","floor","lastSeenMessage","removeEventListener","ChatHeader","Array","isArray","file","url","rel","files","handleFileUpload","click","URL","createObjectURL","Blob","preventDefault","autoComplete","inputMode","setIsActive","setSelectedMenu","setIsRightColumnVisible","setIsMiddleColumnVisible","setIsLeftColumnVisible","locationState","useLocation","state","locationOtherUserUID","setOtherUserUID","prevVisibility","document","body","overflow","LeftColumn","menu","MiddleColumn","newOtherUserID","currentUserID","RightColumn"],"sourceRoot":""}