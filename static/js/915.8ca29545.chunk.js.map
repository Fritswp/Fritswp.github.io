{"version":3,"file":"static/js/915.8ca29545.chunk.js","mappings":"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","sources":["Users/ExpertProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, deleteDoc, ollection, query, where, getDocs, setDoc } from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\n\nconst [isCropperOpen, setIsCropperOpen] = useState(false);\nconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [showUpdateMessage, setShowUpdateMessage] = useState(false);\nconst [removedKeywordIndices, setRemovedKeywordIndices] = useState([]);\n\n\n\nuseEffect(() => {\nconst unsubscribe = auth.onAuthStateChanged(async (authUser) => {\nif (authUser) {\nsetUser(authUser);\n\nconst userDocRef = doc(firestore, 'expertApplications', authUser.uid);\nconst userDocSnapshot = await getDoc(userDocRef);\nif (userDocSnapshot.exists()) {\nconst userData = userDocSnapshot.data();\nif (userData.photoURL) {\nsetPhotoURL(userData.photoURL);\n} else {\nsetPhotoURL(authUser.photoURL);\n}\nsetFirstName(userData.first_name || authUser.displayName.split(' ')[0] || '');\nsetLastName(userData.last_name || authUser.displayName.split(' ')[1] || '');\nsetAddress(userData.address || '');\nsetCity(userData.city || '');\nsetCounty(userData.county || '');\nsetPostcode(userData.postcode || '');\nsetMobileNumber(userData.mobileNumber || '');\nsetRole(userData.occupation || '');\nsetEmail(authUser.email); // Set email from authUser\nsetDescription(userData.description)\n} else {\nsetPhotoURL(authUser.photoURL);\n}\n} else {\nsetAddress('');\nsetCity('');\nsetCounty('');\nsetPostcode('');\nsetMobileNumber('');\nsetPhotoURL(null);\nsetEmail(''); // Clear email\nsetRole('');\nsetDescription('')\n}\n});\n\nreturn () => {\nunsubscribe();\n};\n}, []);\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n\n  // Update Firestore document with new photoURL\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n\n  updateProfile(user, { photoURL: downloadURL })\n  .then(() => {\n    // Profile updated successfully\n    console.log('Profile photo updated successfully');\n  })\n  .catch((error) => {\n    // Handle error while updating profile\n    console.error('Error updating profile photo:', error);\n  });\n};\n\n\n\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n  \n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n  \n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; // Preserve the approved status\n        const customURLStatus = userData.customURL || false;\n  \n        // Get the existing points from the document\n        const existingPoints = userData.points || 0;\n  \n        // Delete the old userProfiles UID if it exists\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n  \n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n  \n        // Update Firestore document with new user data and preserve the points\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus, // Preserve the approved field\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints, // Preserve the points field\n        });\n  \n        // Clear the previousPhotoRef state\n        setPreviousPhotoRef(null);\n  \n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n  \n        // Clear the message after 3 seconds\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      // Set the error message\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n  \n      // Clear the error message after 3 seconds\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n  \n        // Assuming 'expertApplications' is the collection containing user data\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n  \n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n        }\n      }\n    });\n  \n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n\n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 5) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    \n    // Function to remove a keyword from the keywords array\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n\n    const MAX_KEYWORDS_LIMIT = 5; \n    \n    const handleImageClick = () => {\n      console.log('Image clicked'); // Check if this message appears in the console\n      setIsModalOpen(true);\n    };\n\n    \n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const openModal = () => {\n      setIsModalOpen(true);\n      disableScroll(); // Disable scrolling when the modal is open\n    };\n  \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n      // Function to disable scrolling\n  const disableScroll = () => {\n    document.body.style.overflow = 'hidden';\n  };\n\n  // Function to enable scrolling\n  const enableScroll = () => {\n    document.body.style.overflow = '';\n  };\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"profile-intro-section\">\n<div className=\"container\">\n\n</div>\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      {/* Plus symbol */}\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n\n      </div>\n \n    </div>\n  )}\n\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n      </div>\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n\n\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n     \n\n    </div>\n\n    <div className=\"\">\n    <h3>My Profile</h3>\n    <hr />\n    </div>\n    <form className=\"file-upload\">\n    \n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-8 col-12\">\n    <div className=\"\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <h4 className=\"mb-4\">General information</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">First Name *</label>\n    <input\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"\"\n    aria-label=\"First name\"\n    value={firstName} // Display user's first name here\n    onChange={(e) => setFirstName(e.target.value)}\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Last Name *</label>\n    <input\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"\"\n    aria-label=\"Last name\"\n    value={lastName} // Display user's last name here\n    onChange={(e) => setLastName(e.target.value)}\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n    <input\n    type=\"email\"\n    className=\"form-control form-control-lg\"\n    id=\"inputEmail4\"\n    value={user ? user.email : ''} // Display user's email here\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Mobile number *</label>\n    <input\n    id=\"inputMobileNumber\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your Phone number\"\n    aria-label=\"Phone number\"\n    value={mobileNumber} // Display user's mobile number here\n    onChange={(e) => setMobileNumber(e.target.value)}\n    />\n    </div>\n\n<div className=\"col-md-12\">\n  <label className=\"form-label\">Role/Expertise *</label>\n  <input\n    id=\"inputExpertise\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your role/expertise\"\n    aria-label=\"your Role\"\n    value={occupation} // Use setRole here\n    onChange={(e) => setRole(e.target.value)} // Use setRole here\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n  />\n</div>\n\n\n    <div className=\"col-md-12\">\n    <label className=\"form-label\">Description of Expertise</label>\n    <textarea\n    id=\"inputDescription\"\n    type=\"text\"\n    className=\"form-control\"\n    rows=\"4\"\n    placeholder=\"Enter a brief description of your expertise or how you can help\"\n    value={description} // Create a 'description' state and update it accordingly\n    onChange={(e) => setDescription(e.target.value)}\n    style={{ resize: 'none' }}\n    />\n    </div>\n    </div>\n    <div className=\"pt-5 rounded mt-4\">\n    <div className=\"row g-3\">\n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    \n    </div>\n    </div>\n\n    </div>\n    </div>\n    </div>\n    \n    <div className=\"col-xl-4 col-12\">\n    <div className=\"\">\n    </div>\n    \n    <div className=\"\">\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n  \n \n    <div className=\"me-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n\n    \n\n    </div>\n   \n  \n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n  \n\n    </div>\n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    \n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    \n    </div>\n    </div>\n\n    <div>\n\n    \n    </div>\n    </div>\n\n    </form>\n    </div>\n    </div>\n    \n    </div>\n    {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modalcrop \">\n          <ImageCropper\n              setPhotoURL={setPhotoURL}\n              setImageLoadError={setImageLoadError}\n              closeModal={closeModal}\n              photoURL={photoURL}\n              handleImageUpload={handleImageUpload}\n              handleImageError={handleImageError}\n              user={user}\n              collectionName=\"expertApplications\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n    );\n    }\n    \n\nexport default ExpertProfile;\n\n","import React, { useState, useRef, useEffect } from 'react'; // Import React and useState\nimport { CropperRef, Cropper, CircleStencil } from 'react-advanced-cropper';\nimport 'react-advanced-cropper/dist/style.css';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { doc, getDoc, updateDoc, deleteField, setDoc, onSnapshot } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\n\nfunction ImageCropper({\n  closeModal,\n  photoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n}) {\n  const [image, setImage] = useState(photoURL);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDeleteConfirmed, setIsDeleteConfirmed] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null); // Added local state for the document reference\n  const cropperRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [isUploadSuccess, setIsUploadSuccess] = useState(false);\n\n  const CustomCheckmark = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n);\n\nuseEffect(() => {\n  document.body.classList.add('modal-open');\n\n  // Cleanup: Remove 'modal-open' class when the modal is closed\n  return () => {\n    document.body.classList.remove('modal-open');\n  };\n}, []);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file); // Update the selectedFile state with the file\n  \n    if (file) {\n      setSelectedFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImage(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleNewPhoto = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleUpload = async () => {\n    const canvas = cropperRef.current?.getCanvas();\n    if (canvas) {\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg'));\n  \n      if (blob) {\n        const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n        const metadata = { contentType: 'image/jpeg' };\n  \n        const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n  \n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            // Handle upload progress here\n          },\n          (error) => {\n            // Handle upload error here\n          },\n          () => {\n            // Handle upload success here\n            getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n              if (downloadURL) {\n                // Update the Firestore document immediately before handling the upload success\n                await updateDoc(docRef, { photoURL: downloadURL });\n                handleImageUpload(downloadURL);\n                setIsUploadSuccess(true);\n                setTimeout(() => {\n                  setIsUploadSuccess(false);\n                }, 3000);\n              }\n            });\n          }\n        );\n      }\n    }\n  };\n  \n\n  const handleDeletePhoto = async () => {\n    if (user && user.uid) {\n      const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n      await updateDoc(docRef, { photoURL: defaultImageURL });\n      setPhotoURL(defaultImageURL);\n      setIsDeleteConfirmed(false);\n    }\n  };\n  \n\n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'image/*';\n    fileInputRef.current.addEventListener('change', handleFileUpload);\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef); // Set the local state for document reference\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n  \n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.photoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n  \n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n  \n\n  return (\n    <div className=\"modalimage align-items-center\">\n      <div className=\"top-section\">\n        <div style={{ marginRight: '10px' }}>Profile image</div>\n        <button className=\"btn-crop\" onClick={closeModal}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div className='centerimage'>\n      <div className=\"croppers-wizard__body\">\n        <div className='default-cropper croppers-wizard__cropper'>\n\n       \n          {image ? (\n            <Cropper\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n                handlers: {\n                  eastNorth: true,\n                  north: false,\n                  westNorth: true,\n                  west: false,\n                  westSouth: true,\n                  south: false,\n                  eastSouth: true,\n                  east: false,\n              }\n              }}\n         \n            />\n          ) : null}\n</div>\n\n</div>\n\n      </div>\n      \n      <div className=\"button-section with-divider\">\n  <button className=\"btn-crop\" onClick={handleNewPhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42\" />\n      </svg>\n      New Photo\n    </div>\n  </button>\n\n  <button className=\"btn-crop\" onClick={handleUpload}>\n        <div className=\"button-content\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n          </svg>\n          Upload Photo\n        </div>\n      </button>\n\n      {isUploadSuccess && (\n  <div className=\"upload-success-icon\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n    </svg>\n  </div>\n)}\n\n \n\n  <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n      </svg>\n      Delete Photo\n    </div>\n  </button>\n</div>\n\n\n\n    </div>\n  );\n}\n\nexport default ImageCropper;\n"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","_useState45","_useState46","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","stop","_x","apply","arguments","handleImageUpload","_ref2","_callee2","downloadURL","_context2","updateDoc","updateProfile","then","console","log","catch","error","_x2","clearUpdateMessage","updateProfileInfo","_ref3","_callee3","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context3","abrupt","approved","points","deleteDoc","currentUser","setDoc","concat","document","getElementById","value","setTimeout","t0","_ref4","_callee4","_context4","_x3","handleRemoveKeyword","index","updatedKeywords","_toConsumableArray","splice","removeKeyword","handleImageClick","enableScroll","body","style","overflow","_jsxs","className","children","_jsx","src","alt","onError","onClick","cursor","xmlns","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","process","color","placeholder","onChange","e","target","readOnly","pointerEvents","htmlFor","id","rows","resize","window","innerWidth","onKeyDown","key","trim","preventDefault","length","handleAddKeyword","disabled","map","keyword","fill","height","width","marginLeft","ImageCropper","closeModal","handleImageError","collectionName","image","setImage","setSelectedFile","setIsDeleteConfirmed","selectedFileName","setSelectedFileName","docRef","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","classList","add","remove","handleFileUpload","file","files","name","reader","FileReader","onload","event","result","readAsDataURL","handleUpload","_cropperRef$current","canvas","blob","storageRef","metadata","uploadTask","current","getCanvas","Promise","resolve","toBlob","ref","storage","contentType","uploadBytesResumable","on","snapshot","getDownloadURL","handleDeletePhoto","defaultImageURL","createElement","accept","addEventListener","onSnapshot","_doc$data","handlePhotoURLChange","marginRight","Cropper","stencilComponent","CircleStencil","stencilProps","grid","handlers","eastNorth","north","westNorth","west","westSouth","south","eastSouth","east","click"],"sourceRoot":""}