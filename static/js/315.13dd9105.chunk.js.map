{"version":3,"file":"static/js/315.13dd9105.chunk.js","mappings":"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","sources":["Typeform/FullPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SectionsContainer, Section, ScrollToTopOnMount } from 'react-fullpage';\nimport swal from 'sweetalert';\nimport { doc, setDoc, getDoc, collection } from 'firebase/firestore';\nimport { isAndroid } from 'react-device-detect';\nimport { getStorage, ref, uploadString, getDownloadURL } from 'firebase/storage';\nimport { Input, Button,  } from 'antd';\nimport { auth, firestore } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\n\nconst data = [\n{\ntitle: 'Welcome to the Survey!',\nid: 'introduction',\nlink: 'first_name',\ni: 0\n},\n{\ntitle: 'lets start with your first name? *',\nid: 'first_name',\nlink: 'last_name',\ni: 1\n},\n{\ntitle: 'and your last name? *',\nid: 'last_name',\nlink: 'email',\ni: 2\n},\n{\ntitle: 'Email *',\nsubtext: 'Please use the email you signed up with',\nid: 'email',\nlink: 'occupation',\ni: 3\n},\n{\ntitle: 'Expertise? *',\nsubtext: 'Please list all your areas of expertise',\nid: 'occupation',\nlink: 'evidence',\ni: 4\n},\n{\ntitle: 'Certifications? *',\nsubtext: 'Please provide the name of certificates to support your expertise',\nid: 'evidence',\nlink: 'cv_upload',\ni: 5\n},\n{\ntitle: 'Upload Certificate, Cv etc. (PDF or Word Document) ',\nsubtext: 'Please provide relevant documentation to support your expertise',\nid: 'cv_upload',\nlink: 'websites',\ntype: 'file',\ni: 6\n},\n{\ntitle: 'Personal Website/Linkedin? ',\nsubtext: 'Optional: If you think it would support your application, please provide relevant links',\nid: 'websites',\nlink: 'final',\ntype: 'text',\ni: 7\n},\n{\ntitle: 'Additional Information? ',\nsubtext: 'Feel free to add any further information or thoughts that you believe will support your application',\nid: 'final',\nlink: '',\ntype: 'textarea',\ni: 8\n}\n];\n\nconst anchorFunc = (anchor_data) => {\nreturn anchor_data.map((item) => item.id);\n};\n\nconst FullPage = (props) => {\nconst [allFieldsFilled, setAllFieldsFilled] = useState(false);\nconst [submitButtonEnabled, setSubmitButtonEnabled] = useState(false);\nconst [emailValid, setEmailValid] = useState(true);\nconst [cvFile, setCvFile] = useState([]);\nconst [cvDownloadURL, setCvDownloadURL] = useState('');\nconst [obj, setObj] = useState({});\nconst [loading, setLoading] = useState(false);\nconst inputRef = useRef(null);\nconst storageRef = getStorage();\nconst [showAndroidMessage, setShowAndroidMessage] = useState(false);\nconst [showIntroduction, setShowIntroduction] = useState(true);\nconst [inputCharCount, setInputCharCount] = useState({});\nconst [textareaCharCount, setTextareaCharCount] = useState(0); \nconst navigate = useNavigate()\nconst [isApproved, setIsApproved] = useState(false);\nconst [showPendingPopup, setShowPendingPopup] = useState(false);\n\nconst [isDragging, setIsDragging] = useState(false);\n\n\nconst handleDragEnter = (e) => {\n  e.preventDefault();\n  setIsDragging(true);\n};\n\nconst handleDragLeave = (e) => {\n  e.preventDefault();\n  setIsDragging(false);\n};\n\nconst handleDrop = (e) => {\n  e.preventDefault();\n  setIsDragging(false);\n  const files = e.dataTransfer.files;\n  handleFileUpload(files);\n};\n\n\nconst isMobile = () => {\n  return window.innerWidth <= 768; // Adjust the width threshold as needed\n};\n\nconst checkApplicationStatus = async () => {\n  const user = auth.currentUser;\n  if (!user) {\n    return;\n  }\n  const currentUserUID = user.uid;\n\n  const docRef = doc(firestore, 'expertApplications', currentUserUID);\n  try {\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      const data = docSnap.data();\n      const approvalStatus = data.approved;\n      setIsApproved(approvalStatus); // Set isApproved based on retrieved data\n      if (!approvalStatus) {\n        setShowPendingPopup(true);\n      }\n    }\n  } catch (error) {\n}\n};\nuseEffect(() => {\ncheckApplicationStatus();\n}, []); \n\nuseEffect(() => {\nif (!showIntroduction) {\nconst firstInput = document.getElementById('1');\nif (firstInput) {\nfirstInput.focus();\n}\n}\n}, [showIntroduction]);\n\nuseEffect(() => {\nif (isAndroid) {\nsetShowAndroidMessage(true);\n\nsetTimeout(() => {\nsetShowAndroidMessage(false);\n}, 5000);\n}\n}, []);\n\n\n\nconst handleFileUpload = (files) => {\n  if (files && files.length) {\n    setCvFile([...cvFile, ...files]);\n  }\n};\n\nconst removeFile = (index) => {\nconst updatedFiles = [...cvFile];\nupdatedFiles.splice(index, 1);\nsetCvFile(updatedFiles);\n};\nconst checkAllFieldsFilled = (data) => {\nconst requiredFields = ['first_name', 'last_name', 'email', 'occupation', 'evidence'];\nconst allFilled = requiredFields.every((field) => obj[field] !== undefined && obj[field] !== '');\nsetAllFieldsFilled(allFilled);\nsetSubmitButtonEnabled(allFilled || (cvFile.length > 0));\n};\n\nuseEffect(() => {\ncheckAllFieldsFilled(data);\n}, [obj, cvFile]);\n\nconst submitHandler = async () => {\ncheckAllFieldsFilled();\nif (showPendingPopup) {\nreturn;\n}\n\nif (allFieldsFilled && emailValid) {\nif (cvFile) {\nsetLoading(true);\n\nconst uploadFiles = async () => {\ntry {\nconst storageRef = getStorage();\nconst cvRefs = cvFile.map((file) => ref(storageRef, `user_uploads/${file.name}`));\nconst dataURLs = [];\n\nfor (const file of cvFile) {\nconst dataURL = await new Promise((resolve, reject) => {\nconst reader = new FileReader();\nreader.onload = (e) => {\nresolve(e.target.result);\n};\nreader.onerror = (error) => {\nreject(error);\n};\nreader.readAsDataURL(file);\n});\ndataURLs.push(dataURL);\n}\n\nconst uploadTasks = dataURLs.map((dataURL, index) => {\nreturn uploadString(cvRefs[index], dataURL, 'data_url');\n});\nawait Promise.all(uploadTasks);\n\nconst downloadURLs = await Promise.all(cvRefs.map((cvRef) => getDownloadURL(cvRef)));\nsetCvDownloadURL(downloadURLs);\nconst user = auth.currentUser;\nif (user) {\nconst applicationData = {\n...obj,\ncv_download_urls: downloadURLs,\napproved: false,\n};\n\nconst createApplication = async () => {\n  try {\n    const userProfilesCollection = collection(firestore, 'userProfiles');\n    const userProfileDoc = doc(userProfilesCollection, user.uid);\n    const userProfileData = (await getDoc(userProfileDoc)).data();\n    if (userProfileData) {\n      const currentPoints = userProfileData.points;\n      const customURL = userProfileData.customURL;\n      const address = userProfileData.address;\n      const city = userProfileData.city;\n      const county = userProfileData.county;\n      const mobileNumber = userProfileData.mobileNumber;\n      const postcode = userProfileData.postcode;\n      const photoURL = userProfileData.photoURL;\n      const referralCode = userProfileData.referralCode\n      const applicationData = {\n        ...obj,\n        cv_download_urls: downloadURLs,\n        approved: false,\n        points: currentPoints + 50,\n        customURL: customURL,\n        address: userProfileData.address || null, // Add address conditionally\n        city: userProfileData.city || null, // Add city conditionally\n        county: userProfileData.county || null, // Add county conditionally\n        mobileNumber: userProfileData.mobileNumber || null, // Add mobileNumber conditionally\n        postcode: userProfileData.postcode || null, // Add postcode conditionally\n        photoURL: userProfileData.photoURL || null,\n        referralCode: userProfileData.referralCode || null,\n      };\n      const docRef = await setDoc(doc(firestore, 'expertApplications', user.uid), applicationData);\n      await setDoc(userProfileDoc, { points: currentPoints }, { merge: true });\n      swal({\n        title: '',\n        text: 'Thanks for completing the survey. We will reach out as soon as we have made a decision!',\n        icon: 'success',\n        dangerMode: false,\n      }).then(() => {\n        navigate('/');\n      });\n    }\n  } catch (error) {\n  }\n};\n\ncreateApplication();\n}\n} catch (error) {\n} finally {\nsetLoading(false);\n}\n};\n\nawait uploadFiles();\n} else {\nconst user = auth.currentUser;\nif (user) {\nconst applicationData = {\n...obj,\ncv_download_urls: [],\napproved: false,\n};\n\nconst createApplication = async () => {\ntry {\nconst docRef = await setDoc(doc(firestore, 'expertApplications', user.uid), applicationData);\nswal({\ntitle: '',\ntext: 'Thanks for completing the survey. We will reach out as soon as we have made a decision!',\nicon: 'success',\ndangerMode: false,\n}).then(() => {\n// Use navigate for navigation in Gatsby\nnavigate('/');\n});\n} catch (error) {\n}\n};\n\ncreateApplication();\n}\n}\n} else {\nif (!allFieldsFilled) {\nswal({\ntitle: 'Error',\ntext: 'Please fill out all the required fields before submitting.',\nicon: 'error',\ndangerMode: true,\n});\n}\nif (!emailValid) {\nswal({\ntitle: 'Error',\ntext: 'Please provide a valid email address.',\nicon: 'error',\ndangerMode: true,\n});\n}\n}\n};\n\n\n  const inputHandler = (e) => {\n    setObj({\n    ...obj,\n    [e.target.name]: e.target.value,\n    });\n    if (e.target.name === 'email') {\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n    setEmailValid(emailRegex.test(e.target.value));\n    }\n    checkAllFieldsFilled(data);\n    if (e.target.name === 'final') {\n    const charCount = e.target.value.length;\n    setInputCharCount(charCount);\n    setTextareaCharCount(charCount); // Update the character count for the textarea\n    }\n    if (e.key === 'Enter' && isMobile()) {\n      const focusedInput = document.activeElement; // Get the currently focused element\n      focusedInput.blur(); // Remove the focus from the current input field\n    }\n  \n    };\n\n    const handleEnterPress = (e) => {\n      if (e.key === 'Enter') {\n        if (!isMobile()) {\n          e.preventDefault();\n          e.stopPropagation();\n          const currentIndex = data.findIndex((item) => item.id === e.target.name);\n          focusOnNextInput(currentIndex);\n        } else {\n          const focusedInput = document.activeElement; // Get the currently focused element\n          focusedInput.blur(); // Remove the focus from the current input field\n        }\n      }\n    };\n\n    const focusOnNextInput = (currentIndex) => {\n      if (currentIndex < data.length - 1) {\n        const newIndex = currentIndex + 1;\n        const newAnchor = data[newIndex].id;\n        location.href = `#${newAnchor}`;\n        const targetElement = document.getElementById((newIndex + 1).toString());\n        if (targetElement) {\n          setTimeout(() => {\n            targetElement.focus();\n          }, 1000);\n        }\n      }\n    };\n    \n    const handleNavigation = (action, currentIndex) => {\n      let newIndex;\n      if (action === 'next' && currentIndex < data.length - 1) {\n        newIndex = currentIndex + 1;\n      } else if (action === 'previous' && currentIndex > 0) {\n        newIndex = currentIndex - 1;\n      } else {\n        return;\n      }\n      const newAnchor = data[newIndex].id;\n      location.href = `#${newAnchor}`;\n      const targetElement = document.getElementById((newIndex + 1).toString());\n      if (targetElement) {\n        setTimeout(() => {\n          targetElement.focus();\n        }, 1000);\n      }\n    };\n  \n    const returnHome = async () => {\n      try {\n        await navigate('/'); // Wait for the navigation operation to complete\n      } catch (error) {\n        console.error('Error navigating to home:', error);\n      }\n    };\n    \n\n\n    \nreturn (\n<div>\n<ScrollToTopOnMount />\n\n{showPendingPopup && (\n  <div className=\"blurred-background\">\n    <div className=\"pending-application-popup\">\n      <p>Your application is pending. Please wait for approval.</p>\n      <a\n  onClick={returnHome}\n  className=\"dropdown-item\"\n  style={{ marginRight: 0, marginLeft: 0, cursor: 'pointer' }}\n>\n  Return Home\n</a>\n   </div>\n  </div>\n)}\n{!showPendingPopup && isApproved && (\n  <div className=\"blurred-background\">\n     <div className=\"pending-application-popup\">\n      <p>Congratulations! You are already an approved expert.</p>\n      <p>If you wish to add another expertise, please send an email to tio@expertapplication.com</p>\n      <a\n  onClick={returnHome}\n  className=\"dropdown-item\"\n  style={{ marginRight: 0, marginLeft: 0, cursor: 'pointer' }}\n>\n  Return Home\n</a>\n   </div>\n  </div>\n)}\n<SectionsContainer\n  sectionClassName=\"section\"\n  anchors={anchorFunc(data)}\n  scrollBar={false}\n  navigation={true}\n  verticalAlign={false}\n  sectionPaddingTop=\"50px\"\n  sectionPaddingBottom=\"50px\"\n  arrowNavigation={false}\n>\n  {data.map((item, i) => (\n    <Section key={i}>\n      {i === 0 ? (\n        // Render the introduction section for i: 0\n        <div className=\"introduction-page\">\n          <div className=\"row\">\n            <div className=\"formintroduction col-md-6\">\n              <h1>Ready to become an Expert?</h1>\n              <div>\n                <span className=\"introductiontext\">\n                  Welcome to our Expert Network, a distinguished community where verified experts in various fields provide valuable insights to users seeking reliable answers. Our experts have undergone a rigorous vetting process, ensuring top-tier expertise.\n                  <br></br>\n                  <br></br>\n                  If you're passionate about sharing your knowledge and helping our users, please complete the application form below. We'll review your qualifications, and if you meet our criteria, you'll have the opportunity to join our platform and assist those seeking expert guidance.\n                </span>\n              </div>\n              <div>\n              <Button className=\"formintroductionbtn mt-3 mb-3\" id=\"start-survey-btn\" onClick={() => handleNavigation('next', 0)}>\n  Start Survey\n</Button>\n                <div className=\"introductiontime\" style={{ display: 'flex', alignItems: 'center' }}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginRight: '3px' }}>\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.75-13a.75.75 0 00-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 000-1.5h-3.25V5z\" clipRule=\"evenodd\" />\n                  </svg>\n                  Takes 5 minutes\n                </div>\n              </div>\n            </div>\n<div className=\"col-md-6 d-flex justify-content-center align-items-center\">     \n       <img src={`${process.env.PUBLIC_URL}/images/Tios/Learning-Tio.webp`} alt=\"TIO illustration\" className=\"img-fluid-Typeform\" />\n            </div>\n          </div>\n        </div>\n      ) : (\n        // Render other sections for i > 0\n        <header className=\"App-header\">\n        <div className=\"questionContainer\">\n          <div className=\"title\">\n            <h2>\n              <span className=\"count\">{i} &nbsp;</span>&nbsp;\n              <span className=\"page1-block h3\">{item.title}</span>\n            </h2>\n            {item.subtext && (\n              <p className=\"subtext\">{item.subtext}</p>\n            )}\n          </div>\n{item.type === 'file' ? (\n\n<div\n  className={`uploadcontainer${isDragging ? ' drag-over' : ''}`}\n  onDragEnter={handleDragEnter}\n  onDragLeave={handleDragLeave}\n  onDrop={handleDrop}\n  onDragOver={handleDragEnter} // This line is crucial for triggering the drag enter event\n>\n  <label htmlFor=\"file-upload-profile\" className=\"upload-label-profile\">\n    <input\n      className=\"upload-field-profile\"\n      type=\"file\"\n      accept=\".pdf, .doc, .docx\"\n      onChange={(e) => handleFileUpload(e.target.files)}\n      multiple\n    />\n  \n    <div className=\"upload-icon-profile\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n      </svg>\n    </div>\n    <div className=\"upload-text-profile\">\n      <div>\n      <div className=\"choosefile mt-2\">\n        Choose file \n      </div>\n      {' '}\n      or{' '}\n      </div>\n      <div className=\"draghere\">\n        drag here\n      </div>\n    </div>\n  </label>\n\n  {cvFile.map((file, index) => (\n    <div key={index}>\n      <p>Uploaded File {index + 1}: {file.name} <span onClick={() => removeFile(index)} style={{ marginLeft: '5px', cursor: 'pointer' }}>❌</span></p>\n    </div>\n  ))}\n</div>\n\n) : item.type === 'textarea' ? (\n<div>\n<Input.TextArea\n  placeholder=\"Type your answer here...\"\n  name={item.id}\n  id={i + 1}\n  className=\"inputtypearea\"\n  onChange={inputHandler}\n  autoSize={{ minRows: 3, maxRows: 6 }}\n/>\n<div className=\"char-count\" style={{ color: textareaCharCount > 200 ? 'red' : 'inherit' }}>\n  {textareaCharCount}/200 characters\n</div>\n</div>\n) : (\n<Input\n  ref={inputRef} // Assign the ref here\n  placeholder=\"Type your answer here...\"\n  name={item.id}\n  id={i + 1}\n  className=\"inputtypeform\"\n  type=\"text\"\n  onKeyUp={(e) => handleEnterPress(e)}\n  onChange={inputHandler}\n/>\n)}\n<br />\n<div id=\"submit-box\">\n{i === data.length - 1 ? (\n<Button\nid=\"submit-btn\"\nonClick={submitHandler}\ndisabled={textareaCharCount > 200} \nclassName={textareaCharCount > 200 ? 'disabled-button' : ''}\nloading={loading}\nstyle={{ width: '100px' }}\n>\n{loading ? '' : 'SUBMIT'}\n</Button>\n) : (\n<div style={{ display: 'flex', alignItems: 'center' }}>\n<button id=\"enter-btn\" type=\"submit\" onClick={() => handleNavigation('next', item.i)}>\n  OK\n</button>\n{!isMobile && (\n<span className=\"press-enter\">\npress <span className=\"bold\">ENTER</span>\n</span>\n)}\n\n<div className=\"next-previous-buttons\">\n<Button className=\"next-btn\" onClick={() => handleNavigation('next', item.i)} style={{ marginRight: '10px' }}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#ffffff\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"100%\" width=\"100%\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n</svg>\n  </Button>\n  <Button className=\"next-btn\" onClick={() => handleNavigation('previous', item.i)}>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#ffffff\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"100%\" width=\"100%\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 15.75l7.5-7.5 7.5 7.5\" />\n  </svg>\n</Button>\n</div>\n</div>\n)}\n</div>\n</div>\n        </header>\n      )}\n    </Section>\n  ))}\n</SectionsContainer>\n</div>\n);\n};\nexport default React.memo(FullPage);"],"names":["data","title","id","link","i","subtext","type","FullPage","props","_useState","useState","_useState2","_slicedToArray","allFieldsFilled","setAllFieldsFilled","_useState3","_useState4","setSubmitButtonEnabled","_useState5","_useState6","emailValid","setEmailValid","_useState7","_useState8","cvFile","setCvFile","_useState9","_useState10","setCvDownloadURL","_useState11","_useState12","obj","setObj","_useState13","_useState14","loading","setLoading","inputRef","useRef","_useState15","getStorage","_useState16","setShowAndroidMessage","_useState17","_useState18","showIntroduction","_useState19","_useState20","setInputCharCount","_useState21","_useState22","textareaCharCount","setTextareaCharCount","navigate","useNavigate","_useState23","_useState24","isApproved","setIsApproved","_useState25","_useState26","showPendingPopup","setShowPendingPopup","_useState27","_useState28","isDragging","setIsDragging","handleDragEnter","e","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","handleFileUpload","isMobile","window","innerWidth","checkApplicationStatus","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","currentUserUID","docRef","docSnap","_data","approvalStatus","wrap","_context","prev","next","auth","currentUser","abrupt","uid","doc","firestore","getDoc","sent","exists","approved","t0","stop","apply","arguments","useEffect","firstInput","document","getElementById","focus","isAndroid","setTimeout","length","concat","_toConsumableArray","checkAllFieldsFilled","allFilled","every","field","undefined","anchor_data","submitHandler","_ref2","_callee5","uploadFiles","applicationData","createApplication","_context6","_ref3","_callee3","_storageRef","cvRefs","dataURLs","_iterator","_step","_loop","uploadTasks","downloadURLs","_context4","storageRef","map","file","ref","name","_createForOfIteratorHelper","dataURL","_context3","value","Promise","resolve","reject","reader","FileReader","onload","target","result","onerror","error","readAsDataURL","push","s","n","done","delegateYield","t1","f","finish","index","uploadString","all","cvRef","getDownloadURL","_objectSpread","cv_download_urls","_ref4","_callee2","userProfilesCollection","userProfileDoc","userProfileData","currentPoints","customURL","_applicationData","_context2","collection","points","address","city","county","mobileNumber","postcode","photoURL","referralCode","setDoc","merge","swal","text","icon","dangerMode","then","t2","_ref5","_callee4","_context5","inputHandler","_defineProperty","test","charCount","key","activeElement","blur","focusOnNextInput","currentIndex","newIndex","newAnchor","location","href","targetElement","toString","handleNavigation","action","returnHome","_ref6","_callee6","_context7","console","_jsxs","children","_jsx","ScrollToTopOnMount","className","onClick","style","marginRight","marginLeft","cursor","SectionsContainer","sectionClassName","anchors","item","scrollBar","navigation","verticalAlign","sectionPaddingTop","sectionPaddingBottom","arrowNavigation","Section","Button","display","alignItems","xmlns","color","fill","viewBox","strokeWidth","stroke","height","width","fillRule","d","clipRule","src","process","alt","onDragEnter","onDragLeave","onDrop","onDragOver","htmlFor","accept","onChange","multiple","strokeLinecap","strokeLinejoin","updatedFiles","splice","removeFile","Input","TextArea","placeholder","autoSize","minRows","maxRows","onKeyUp","stopPropagation","findIndex","handleEnterPress","disabled","React"],"sourceRoot":""}