{"version":3,"file":"static/js/351.43816ee7.chunk.js","mappings":"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","sources":["ChatBot/ChatHistory.js","ChatBot/ExpertBox.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, collection, query, where, getDocs } from 'firebase/firestore';\n\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick, resetChatMessages }) => {\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n\n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n  \n        const q = query(collection(firestore, 'users', userUid, 'discussions'));\n  \n        const snapshot = await getDocs(q);\n        const sessionData = snapshot.docs.map((doc) => doc.id);\n        setSessions(sessionData);\n  \n        console.log('Fetched sessions:', sessionData);\n      } else {\n        console.error('User not authenticated');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions from Firestore:', error);\n    }\n  };\n\n  const startNewChat = () => {\n    // Perform actions to start a new chat\n    setSelectedSession(null); // Set selectedSession to null for an undefined session\n    resetChatMessages(); // Reset chat messages in ChatInterface\n    console.log('Discussion set to undefined');\n  };\n  \n  \n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen);\n\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatHistoryRef.current && !chatHistoryRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n    if (lastDiscussionId) {\n      setSelectedSession(lastDiscussionId);\n    }\n  }, []); \n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isDropdownOpen && (\n  <div className='chatbot-previous'>\n    <div style={{ display: 'flex' }}>\n    <button\n              className=\"chat-history-btn\"\n              onClick={() => {\n                startNewChat();\n                if (window.innerWidth <= 768) {\n                  toggleDropdown();\n                }\n              }}\n            >\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n          <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n        </div>\n        <div className='ms-auto'>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n          </svg>\n        </div>\n      </button>\n    </div>\n    <p className=\"text-sm text-muted mt-3\">Sessions:</p>\n    {sessions.length > 0 && (\n  <ul className=\"fade-ulist no-scroll\">\n    {sessions.map((session) => (\n      <li\n        className={`fade-list${session === selectedSession ? ' selected-session' : ''}`}\n        key={session}\n        onClick={() => {\n          setSelectedSession(session);\n          onSessionClick(session);\n          if (window.innerWidth <= 768) {\n            toggleDropdown();\n          }\n        }}\n      >\n        <span>{session}</span>\n        <div className=\"svg-chathistory-container\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"19\" cy=\"12\" r=\"1\"></circle><circle cx=\"5\" cy=\"12\" r=\"1\"></circle></svg>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n          </svg>\n        </div>\n      </li>\n    ))}\n  </ul>\n)}\n\n  </div>\n\n)}\n\n    </div>\n  );\n};\n\nexport default ChatHistory;","import React, { useEffect,useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst ExpertBox = ({ isHovered, displayName, photoURL, skills, description, otherUserUID, occupation, onClose }) => {\n\n    const navigate = useNavigate();\n\n\n  const handleChatButtonClick = () => {\n    try {\n      if (!otherUserUID) {\n        throw new Error('otherUserUID is undefined or null');\n      }\n      navigate('/chat', {\n        state: {\n          otherUserUID,\n        },\n      });\n    } catch (error) {\n      console.error('Error handling chat button click:', error.message);\n    }\n  };\n\n  const handleEscapeKey = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isHovered) {\n      document.addEventListener('keydown', handleEscapeKey);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [isHovered]);\n\n  return (\n    isHovered && (\n      \n<div className=\"white-box\" >\n        <div className=\"go-back-svg\">\n    <button onClick={onClose}>                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n\n          <h5 className=\"card-title\"> {displayName}</h5>\n  \n          <h5 className=\"card-title\">Expertise: {occupation}</h5>\n          \n  <div href={photoURL} className=\"d-md-inline\">\n    <img\n      src={photoURL}\n      alt=\"Profile Photo\"\n      className=\"searchimage card-img user-avatar large-avatar rounded-circle mb-2 mx-md-auto mx-0 \" \n    />\n  </div>\n  \n\n          <div className=\"about-container\">\n          <h5 className=\"card-title\"   style={{ display: 'inline' }}>About: </h5> \n<p style={{ display: 'inline' }}>{description}</p>\n</div>\n         \n\n          <div style={{ marginBottom: '0.4rem', marginTop: '0.4rem' }}>\n     \n          <p className=\"font-weight-bold mb-0\">Skills: {skills.join(', ')}</p>\n  {skills && skills.map((skills) => (\n    <button\n      key={skills}\n      type=\"button\"\n      className=\" containerhover keyword-container mb-2 mx-1 pb-1\"\n    >\n      {skills}\n    </button>\n  ))}\n\n</div>\n\n        <div>\n       \n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Link to=\"/chat\" state={{ otherUserUID }}  onClick={handleChatButtonClick}>\n            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"me-2\">Message</span> \n            </button>\n            </Link>\n            <button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n              </svg>\n             <span className=\"me-2\">Connect</span> \n           </button>\n           \n        \n          </div>\n      </div>\n\n\n\n   \n    )\n  );\n};\n\nexport default ExpertBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, query, where, getDocs } from \"../firebase\"; \nimport ExpertBox from './ExpertBox'\n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic, firstUserMessage }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [showExpertBox, setShowExpertBox] = useState(false);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n\n  const handleExpertBoxClose = () => {\n    setShowExpertBox(false);\n    setButtonClicked(false); // Reset buttonClicked state\n    setIsHovered(null);\n  };\n\n  const handleMouseEnter = (index) => {\n    setIsHovered(index);\n  };\n\n  const handleButtonClick = (expertInfo, index) => {\n    if (index === isHovered) {\n      setSelectedExpert(expertInfo);\n      setButtonClicked(!buttonClicked); // Toggle buttonClicked state\n      setShowExpertBox(true); // Always show ExpertBox on button click\n    }\n  };\n\n\n  const handleMouseLeave = () => {\n    if (!buttonClicked && !showExpertBox) {\n      setShowExpertBox(false);\n      setIsHovered(null);\n    }\n  };\n\n  \n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen(); // Toggle ChatExperts\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          let experts;\n\n          if (selectedTopic) {\n            console.log(\"Fetching experts for selected topic:\", selectedTopic);\n            experts = await getMatchingExpertsForTopic(selectedTopic);\n          } else if (firstUserMessage) {\n            console.log(\"Fetching experts for firstUserMessage:\", firstUserMessage);\n            experts = await getMatchingExperts(null, firstUserMessage);\n          }\n\n          console.log(\"Matching experts:\", experts);\n\n          setMatchingExperts(experts || []);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        }\n      }\n    };\n\n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic, firstUserMessage]);\n\n  const getMatchingExperts = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n\n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n\n          if (\n            (!firstUserMessage || fieldsToCheck.some(field => data[field] && typeof data[field] === 'string' && data[field].toLowerCase().includes(firstUserMessage.toLowerCase()))) &&\n            (!selectedTopic || expertInfo.skills.includes(selectedTopic.id))\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n\n      console.log(\"Matching experts:\", matchingExperts);\n\n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts:\", error);\n      return [];\n    }\n  };\n\n  const getMatchingExpertsForTopic = async (selectedTopic) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n  \n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n  \n          // Check if the selected topic is present in the 'labels' field\n          if (data.labels && data.labels.includes(selectedTopic.name)) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n  \n      console.log(\"Matching experts for selected topic:\", matchingExperts);\n  \n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected topic:\", error);\n      return [];\n    }\n  };\n  \n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      <div>\n        <h4>Experts</h4>\n      </div>\n      {matchingExperts.map((expertInfo, index) => (\n        <div key={index}>\n        <button\n          className={`chat-btn expert-btn text-left ${showExpertBox && index === isHovered ? 'open-expert-box' : ''}`}\n          onMouseEnter={() => handleMouseEnter(index)}\n          onMouseLeave={handleMouseLeave}\n          onClick={() => handleButtonClick(expertInfo, index)}\n        >\n      <div className='d-flex flex-column'>\n        <div className='d-flex align-items-center justify-content-between'>\n          <img\n            src={expertInfo.photoURL}\n            alt=\"Avatar\"\n            className=\"very-small-avatar rounded-circle\"\n          />\n          <div className=\"ml-2\">\n            <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n          </div>\n        </div>\n        {expertInfo.skills && (\n          <div className=\"text-start mt-2\">\n            <p className=\"font-weight-bold mb-0\">Skills: {expertInfo.skills.join(', ')}</p>\n          </div>\n        )}\n      </div>\n      {/* Render the ExpertBox component with isHovered prop */}\n \n          </button>\n          <ExpertBox\n              isHovered={index === isHovered}\n              displayName={expertInfo.name}\n              photoURL={expertInfo.photoURL}\n              skills={expertInfo.skills}\n              description={expertInfo.description}\n              city={expertInfo.city}\n              occupation={expertInfo.occupation}\n              otherUserUID={expertInfo.otherUserUID}\n              onClose={handleExpertBoxClose} // Pass the onClose callback\n            \n            />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatExperts;","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ isDropdownOpen, handleDropdownToggle, onSelectTopic }) => {\n  const dropdownRef = useRef(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    onSelectTopic(topic);\n    handleDropdownToggle();\n  };\n  \n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const pickModelDiv = document.querySelector('.pick-model');\n      if (\n        isDropdownOpen &&\n        dropdownRef.current &&\n        !pickModelDiv.contains(event.target)\n      ) {\n        // Clicked outside the entire pick-model, close the dropdown\n        handleDropdownToggle();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, handleDropdownToggle, isDropdownOpen]);\n  \n  return (\n    <div className=\"pick-model\">\n      <h4\n        onClick={handleDropdownToggle}\n        className={`pointer-cursor ${isDropdownOpen ? 'h4-dropdown-open' : ''}`}\n      >\n        {selectedTopic ? `Topic: ${selectedTopic.name}` : 'Pick a Topic'}\n      </h4>\n      <span\n        className={`svg-chatbot-model pointer-cursor ${isDropdownOpen ? 'svg-chatbot-model-rotate-icon' : ''}`}\n        aria-hidden=\"true\"\n        onClick={handleDropdownToggle}\n      >\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      <div ref={dropdownRef} className={`chat-dropdown-model ${isDropdownOpen ? 'show scroll-cat' : ''}`}>\n        {categories && categories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleDropdownToggle={handleDropdownToggle}\n            handleTopicSelection={handleTopicSelection}\n          />\n        ))}\n      </div>\n    </div>\n  );\n  \n  \n};\n  \n  const TopicLabel = ({ category, handleDropdownToggle, handleTopicSelection }) => {\n    const handleRadioChange = () => {\n      handleTopicSelection(category);\n      handleDropdownToggle();\n    };\n  \n    return (\n      <label className=\"chat-dropdown-model-button \" htmlFor={category.id}>\n        {category.svg} \n        <div className=\"d-flex align-items-center\">\n          <div className=\"d-flex flex-column align-items-start ps-3\">\n            <h5 className=\"m-0\">{category.name}</h5>\n            <h6 className=\"text-muted text-start m-0\">{category.description}</h6>\n          </div>\n        </div>\n        <div className=\"flex-grow-1 d-flex justify-content-end\">\n          <input\n            type=\"radio\"\n            className=\"form-check-input listboxes\"\n            id={category.id}\n            name=\"jobSuccess\"\n            onChange={handleRadioChange}\n          />\n          <label className=\"form-check-label label-with-svg\" htmlFor={category.id}></label>\n        </div>\n      </label>\n    );\n  };\n  \n    const categories = [\n        {\n        id: 'computerOption',\n        name: 'Computer',\n        description: 'All your IT solutions',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'sportOption',\n        name: 'Sport',\n        description: \"Let Tio help you become fit\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M9.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M6.44 3.752A.75.75 0 0 1 7 3.5h1.445c.742 0 1.32.643 1.243 1.38l-.43 4.083a1.8 1.8 0 0 1-.088.395l-.318.906.213.242a.8.8 0 0 1 .114.175l2 4.25a.75.75 0 1 1-1.357.638l-1.956-4.154-1.68-1.921A.75.75 0 0 1 6 8.96l.138-2.613-.435.489-.464 2.786a.75.75 0 1 1-1.48-.246l.5-3a.75.75 0 0 1 .18-.375l2-2.25Z\"/>\n            <path d=\"M6.25 11.745v-1.418l1.204 1.375.261.524a.8.8 0 0 1-.12.231l-2.5 3.25a.75.75 0 1 1-1.19-.914zm4.22-4.215-.494-.494.205-1.843.006-.067 1.124 1.124h1.44a.75.75 0 0 1 0 1.5H11a.75.75 0 0 1-.531-.22Z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'foodCategory',\n        name: 'Food',\n        description: 'Ready to become head-chef?',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"/>\n            <path d=\"M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'healthCategory',\n        name: 'Health',\n        description: 'Here to help',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.121 1.879a3 3 0 0 0-4.242 0L8.733 3.026l4.261 4.26 1.127-1.165a3 3 0 0 0 0-4.242M12.293 8 8.027 3.734 3.738 8.031 8 12.293zm-5.006 4.994L3.03 8.737 1.879 9.88a3 3 0 0 0 4.241 4.24l.006-.006 1.16-1.121ZM2.679 7.676l6.492-6.504a4 4 0 0 1 5.66 5.653l-1.477 1.529-5.006 5.006-1.523 1.472a4 4 0 0 1-5.653-5.66l.001-.002 1.505-1.492z\"/>\n            <path d=\"M5.56 7.646a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707Zm1.415-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707M8.39 4.818a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707Zm0 5.657a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707ZM9.803 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707Zm1.414-1.414a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707ZM6.975 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707ZM8.39 7.646a.5.5 0 1 1-.708.708.5.5 0 0 1 .707-.708Zm1.413-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'workCategory',\n        name: 'Work',\n        description: 'New Job or career advice',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'hobbiesCategory',\n        name: 'Hobbies',\n        description: \"Discover what's possible\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3\"/>\n            <path d=\"M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8m-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7\"/>\n            </svg>\n        ),\n        },\n    ];\n    \n    export default TopicPicker;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('52px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n  const [firstUserMessage, setFirstUserMessage] = useState(null);\n\n  const fetchMessages = async (userUid, discussionId) => {\n    console.log('Fetching messages for userUid:', userUid, 'and discussionId:', discussionId);\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: prompt, user: 'user' },\n          { text: response, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n      console.log('Fetched messages for discussionId:', discussionId);\n    } catch (error) {\n      console.error('Error fetching messages from Firestore:', error);\n    }\n  };\n  const handleSessionClick = async (discussionId) => {\n    console.log('Clicked session:', discussionId);\n    setSelectedSession(discussionId);\n    \n    // Store the selected session in sessionStorage\n    sessionStorage.setItem('lastDiscussionId', discussionId);\n  \n    await fetchMessages(auth.currentUser.uid, discussionId);\n  };\n  \nconst handleSendMessage = async () => {\n  setIsBotResponding(true);\n\n  if (message.trim() !== '') {\n    const uid = auth.currentUser.uid;\n\n    try {\n      let sessionToUse = selectedSession;\n\n      if (!sessionToUse) {\n        sessionToUse = message.split(' ')[0];\n        await setDoc(doc(db, `users/${uid}`), {});\n        const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n        const discussionsSnapshot = await getDoc(userDocRef);\n\n        if (!discussionsSnapshot.exists()) {\n          await setDoc(userDocRef, {});\n        }\n\n        setSelectedSession(sessionToUse);\n        setFirstUserMessage(message);\n\n        // Log the first user message\n        console.log('First user message:', message);\n      }\n\n      const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n      const messagesCollectionRef = collection(userDocRef, 'messages');\n      const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message });\n\n      setMessage('');\n      handleTextareaResize();\n\n      setChatMessages((prevChatMessages) => [\n        ...prevChatMessages,\n        { text: message, user: 'user' },\n        { text: '', user: 'bot', isTyping: true },\n      ]);\n\n      const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n        const rawBotResponse = docSnapshot.data()?.response;\n\n        if (rawBotResponse) {\n          unsubscribe();\n\n          const initialTypingSpeed = 20;\n          const speedIncreaseRate = 0.1;\n          const formattedBotResponse = rawBotResponse;\n\n          for (let i = 0; i < formattedBotResponse.length; i++) {\n            const currentTypingSpeed = Math.max(5, initialTypingSpeed - i * speedIncreaseRate);\n\n            await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n\n            setChatMessages((prevChatMessages) => [\n              ...prevChatMessages.slice(0, -1),\n              {\n                text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                user: 'bot',\n              },\n            ]);\n          }\n\n          setIsBotResponding(false);\n\n          if (window.innerWidth < 768 && textareaRef.current) {\n            textareaRef.current.blur();\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error handling and sending message:', error);\n    }\n  }\n};\n\n  \n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    const fetchLastDiscussionId = async () => {\n      try {\n        // Check if auth.currentUser is available\n        if (auth.currentUser) {\n          // Retrieve the last discussion ID from local storage\n          const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n    \n          if (lastDiscussionId) {\n            // Fetch messages for the last discussion ID\n            await fetchMessages(auth.currentUser.uid, lastDiscussionId);\n            setSelectedSession(lastDiscussionId);\n          } else {\n            // If there is no lastDiscussionId, you can handle this case accordingly\n            console.log('No last discussion ID found.');\n          }\n        } else {\n          // Handle the case when auth.currentUser is not available\n          console.log('No user authenticated.');\n        }\n      } catch (error) {\n        console.error('Error fetching last discussion ID:', error);\n      }\n    };\n  \n    fetchLastDiscussionId(); // Call the new function to fetch the last discussion ID\n  \n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n  \n  \n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    console.log('Selected Topic:', topic); \n  };\n  \n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '52px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  const handleDropdownToggle = () => {\n    console.log('Dropdown toggled');\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('52px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n   const resetChatMessages = () => {\n    setChatMessages([]);\n  };\n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} onSessionClick={handleSessionClick} resetChatMessages={resetChatMessages}/>\n<div className='chat-display'>\n<TopicPicker isDropdownOpen={isDropdownOpen} handleDropdownToggle={handleDropdownToggle} onSelectTopic={handleTopicSelection} />\n        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\"  ref={chatContainerRef}>\n  {chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {chatMessage.isTyping ? (\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n    {chatMessage.user !== 'bot' && <div className=\"chat-text\">{chatMessage.text}</div>}\n  </div>\n))}\n\n      </div>\n      <div className=\"chatui-container\">\n        <div className=\"userui-input\" >\n        <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col textarea-chat\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  }}\n  disabled={isBotResponding} \n/>\n          <button\n          aria-label=\"Send Message\"\n          className=\"svg-container send-btn\"\n          disabled={isBotResponding}\nonClick={() => handleSendMessage(selectedSession)}\n        >\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n        <ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} firstUserMessage={firstUserMessage} />\n      </div>\n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","isOpen","toggleOpen","onSessionClick","resetChatMessages","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","_useState3","_useState4","setIsIconRotated","chatHistoryRef","useRef","_useState5","_useState6","sessions","setSessions","_useState7","_useState8","selectedSession","setSelectedSession","_useState9","_useState10","fetchSessions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","userUid","q","snapshot","sessionData","wrap","_context","prev","next","auth","currentUser","uid","query","collection","firestore","getDocs","sent","docs","map","doc","id","console","log","error","t0","stop","apply","arguments","useEffect","toggleDropdown","handleClickOutside","event","current","contains","target","isMobile","window","innerWidth","document","addEventListener","removeEventListener","lastDiscussionId","sessionStorage","getItem","_jsxs","ref","className","concat","children","_jsx","onClick","width","height","viewBox","d","style","display","alignItems","src","process","alt","color","marginLeft","xmlns","fill","strokeWidth","stroke","strokeLinecap","strokeLinejoin","length","session","cx","cy","r","isHovered","displayName","photoURL","skills","description","otherUserUID","occupation","onClose","navigate","useNavigate","handleEscapeKey","key","href","marginBottom","marginTop","join","type","Link","to","state","Error","message","fillRule","clipRule","selectedTopic","firstUserMessage","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","setIsHovered","showExpertBox","setShowExpertBox","_useState11","_useState12","setSelectedExpert","_useState13","_useState14","buttonClicked","setButtonClicked","handleExpertBoxClose","handleMouseLeave","fetchMatchingExperts","experts","getMatchingExpertsForTopic","getMatchingExperts","_ref3","_callee2","expertsCollection","querySnapshot","_matchingExperts","_context2","forEach","data","expertInfo","name","keywords","city","some","field","toLowerCase","includes","push","abrupt","_x","_x2","_ref4","_callee3","_matchingExperts2","_context3","labels","_x3","index","onMouseEnter","handleMouseEnter","onMouseLeave","handleButtonClick","ExpertBox","TopicLabel","category","handleDropdownToggle","handleTopicSelection","htmlFor","svg","onChange","categories","onSelectTopic","dropdownRef","setSelectedTopic","topic","pickModelDiv","querySelector","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","isHistoryOpen","setIsHistoryOpen","isExpertsOpen","setIsExpertsOpen","chatContainerRef","isBotResponding","setIsBotResponding","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","setFirstUserMessage","fetchMessages","discussionId","messagesCollectionRef","messagesSnapshot","messagesData","orderBy","_doc$data","text","prompt","response","isTyping","flat","handleSessionClick","setItem","handleSendMessage","_callee4","sessionToUse","_userDocRef","userDocRef","botMessageDocRef","unsubscribe","_context5","trim","split","setDoc","db","getDoc","exists","addDoc","handleTextareaResize","prevChatMessages","_toConsumableArray","onSnapshot","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","_context4","currentTypingSpeed","Math","max","Promise","resolve","setTimeout","slice","ReactMarkdown","delegateYield","blur","_x4","removeItem","fetchLastDiscussionId","_ref5","_callee5","_context6","textarea","newHeight","min","scrollHeight","handleKeyDown","shiftKey","preventDefault","textareaElement","scrollTop","ChatHistory","TopicPicker","chatMessage","LoadingCircle","value","e","placeholder","autoComplete","inputMode","onKeyDown","disabled","ChatExperts"],"sourceRoot":""}