{"version":3,"file":"static/js/915.ececb646.chunk.js","mappings":"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","sources":["Users/ExpertProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, firestore, storage } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteDoc, setDoc, collection, getDocs, addDoc,   } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL,deleteObject } from \"firebase/storage\";\nimport { updateProfile } from 'firebase/auth';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \nimport { FaFile, FaFilePdf, FaFileWord, FaFileExcel, FaFilePowerpoint } from 'react-icons/fa';\n\n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\nconst [selectedLabel, setSelectedLabel] = useState('');\nconst [isModalOpen, setIsModalOpen] = useState(false);\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [gallery, setGallery] = useState([]);\n\n\nuseEffect(() => {\n  const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      setUser(authUser);\n\n      const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        if (userData.photoURL) {\n          setPhotoURL(userData.photoURL);\n        } else {\n          setPhotoURL(authUser.photoURL);\n        }\n        setFirstName(userData.first_name || authUser.displayName.split(' ')[0] || '');\n        setLastName(userData.last_name || authUser.displayName.split(' ')[1] || '');\n        setAddress(userData.address || '');\n        setCity(userData.city || '');\n        setCounty(userData.county || '');\n        setPostcode(userData.postcode || '');\n        setMobileNumber(userData.mobileNumber || '');\n        setRole(userData.occupation || '');\n        setEmail(authUser.email); // Set email from authUser\n        setDescription(userData.description)\n        setSelectedLabel(userData.labels || '');\n      } else {\n        setPhotoURL(authUser.photoURL);\n      }\n      const userImagesCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/files`);\n      try {\n        const querySnapshot = await getDocs(userImagesCollectionRef);\n        const galleryList = querySnapshot.docs.map((doc) => {\n          const data = doc.data();\n          // Check if the file URL ends with an image extension\n          const isImage = /\\.(jpeg|jpg|gif|png|svg)$/i.test(data.url.split('?')[0]);\n          const title = data.title || ''; // Get title from Firestore data or set to empty string if not available\n        \n          console.log('File URL:', data.url); // Add this log statement\n          return { id: doc.id, url: data.url, description: data.description, title, isImage };\n        });\n        \n        \n        console.log('Gallery List:', galleryList); // Log galleryList\n        setGallery(galleryList);\n      } catch (error) {\n        console.error('Error fetching gallery images:', error);\n      }\n      \n    } else {\n      setAddress('');\n      setCity('');\n      setCounty('');\n      setPostcode('');\n      setMobileNumber('');\n      setPhotoURL(null);\n      setEmail(''); // Clear email\n      setRole('');\n      setDescription('')\n    }\n  });\n\n  return () => {\n    unsubscribe();\n  };\n}, []);\n\nuseEffect(() => {\n  console.log('Gallery State:', gallery); // Log the gallery state to check photo URLs\n}, [gallery]);\n\n\nconst handleFileUpload = async (files, title) => {\n  const file = files[0];\n  const description = \"\"; // Replace with actual description or user input\n  const fileName = title || file.name; // Use title as filename if provided, otherwise use the original filename\n  const userFilesCollectionRef = collection(firestore, `expertApplications/${user.uid}/files`);\n  try {\n    const scaledFile = file.size > 1 * 1024 * 1024 ? await scaledFile(file) : file;\n    const downloadURL = await uploadFile(scaledFile, description, fileName, userFilesCollectionRef); // Pass title and file name\n    console.log('Download URL:', downloadURL); // Add this log statement\n  } catch (error) {\n    console.error('Error processing file:', error);\n  }\n};\n\nconst uploadFile = async (file, description, fileName, collectionRef) => {\n  const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`); // Use image name for storage reference\n  \n  try {\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    const snapshot = await uploadTask; // Await completion of upload\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    const uploadedFiles = { id: fileName, url: downloadURL, description, title: fileName }; \n    setGallery(prevGallery => [...prevGallery, uploadedFiles]); \n    const docRef = doc(collectionRef, fileName); \n    await setDoc(docRef, { url: downloadURL, description, title: fileName });\n\n    console.log(\"Files uploaded and stored successfully\");\n    return downloadURL; // Return the downloadURL\n  } catch (error) {\n    console.error('Error uploading Files:', error);\n  }\n};\n\n\n\n\nconst handleRemovePhoto = async (index) => {\n  try {\n    console.log('Gallery before removal:', gallery); // Log entire gallery array\n    const files = gallery[index];\n    console.log(' object:', files); \n    if (!files) {\n      console.error('Error removing photo:  not found in gallery');\n      return;\n    }\n    const fileName = files.id;\n    console.log(' name:', fileName); \n    const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n    await deleteObject(storageRef);\n    console.log(' removed successfully from Storage');\n    const docPath = `expertApplications/${user.uid}/files/${fileName}`;\n    console.log('Firestore document path:', docPath); // Log Firestore document path\n    const docRef = doc(firestore, docPath);\n    await deleteDoc(docRef);\n    console.log('Document removed successfully from Firestore');\n    const updatedGallery = gallery.filter((_, i) => i !== index);\n    console.log('Updated gallery:', updatedGallery); // Log updated gallery\n    setGallery(updatedGallery);\n  } catch (error) {\n    console.error('Error removing photo:', error);\n  }\n};\n\nconst handleTitleChange = (title, index) => {\n  const updatedGallery = [...gallery];\n  updatedGallery[index].title = title;\n  setGallery(updatedGallery);\n};\n\nconst handleDescriptionChange = (description, index) => {\n  const updatedGallery = [...gallery];\n  updatedGallery[index].description = description;\n  setGallery(updatedGallery);\n};\n\nconst handleUploadDescription = async (index) => {\n  const photo = gallery[index];\n  const docRef = doc(collection(firestore, `expertApplications/${user.uid}/files`), photo.id); // Use photo.id (image name) as document ID\n  try {\n    await Promise.all([\n      updateDoc(docRef, { description: photo.description, title: photo.title }), // Update both description and title\n    ]);\n    console.log(\"Description and title updated successfully in Firestore\");\n  } catch (error) {\n    console.error('Error updating description and title:', error);\n  }\n};\n\n\n\nconst getFileIcon = (fileName) => {\n  if (!fileName) return null;\n\n  const fileNameWithoutParams = fileName.split('?')[0];\n  const extension = fileNameWithoutParams.split('.').pop().toLowerCase();\n\n  switch (extension) {\n    case 'pdf':\n      return <svg style={{ color: \"red\" }}xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 14 16\"> <path d=\"M5.523 12.424c.14-.082.293-.162.459-.238a7.878 7.878 0 0 1-.45.606c-.28.337-.498.516-.635.572a.266.266 0 0 1-.035.012.282.282 0 0 1-.026-.044c-.056-.11-.054-.216.04-.36.106-.165.319-.354.647-.548zm2.455-1.647c-.119.025-.237.05-.356.078a21.148 21.148 0 0 0 .5-1.05 12.045 12.045 0 0 0 .51.858c-.217.032-.436.07-.654.114zm2.525.939a3.881 3.881 0 0 1-.435-.41c.228.005.434.022.612.054.317.057.466.147.518.209a.095.095 0 0 1 .026.064.436.436 0 0 1-.06.2.307.307 0 0 1-.094.124.107.107 0 0 1-.069.015c-.09-.003-.258-.066-.498-.256zM8.278 6.97c-.04.244-.108.524-.2.829a4.86 4.86 0 0 1-.089-.346c-.076-.353-.087-.63-.046-.822.038-.177.11-.248.196-.283a.517.517 0 0 1 .145-.04c.013.03.028.092.032.198.005.122-.007.277-.038.465z\" fill=\"red\"></path> <path fill-rule=\"evenodd\" d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3zM4.165 13.668c.09.18.23.343.438.419.207.075.412.04.58-.03.318-.13.635-.436.926-.786.333-.401.683-.927 1.021-1.51a11.651 11.651 0 0 1 1.997-.406c.3.383.61.713.91.95.28.22.603.403.934.417a.856.856 0 0 0 .51-.138c.155-.101.27-.247.354-.416.09-.181.145-.37.138-.563a.844.844 0 0 0-.2-.518c-.226-.27-.596-.4-.96-.465a5.76 5.76 0 0 0-1.335-.05 10.954 10.954 0 0 1-.98-1.686c.25-.66.437-1.284.52-1.794.036-.218.055-.426.048-.614a1.238 1.238 0 0 0-.127-.538.7.7 0 0 0-.477-.365c-.202-.043-.41 0-.601.077-.377.15-.576.47-.651.823-.073.34-.04.736.046 1.136.088.406.238.848.43 1.295a19.697 19.697 0 0 1-1.062 2.227 7.662 7.662 0 0 0-1.482.645c-.37.22-.699.48-.897.787-.21.326-.275.714-.08 1.103z\" fill=\"red\"></path> </svg>\n          case 'doc':\n    case 'docx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 110.031 107.5\"><path d=\"M57.505 0h7.475v10c13.375.075 26.738-.138 40.101.075 2.85-.288 5.087 1.925 4.825 4.775.212 24.625-.05 49.262.125 73.887-.125 2.525.25 5.325-1.213 7.562-1.825 1.3-4.188 1.138-6.312 1.237-12.514-.061-25.014-.036-37.526-.036v10h-7.812c-19.024-3.475-38.1-6.662-57.162-10-.013-29.162 0-58.325 0-87.475C19.167 6.675 38.343 3.413 57.506 0z\" fill=\"#2a5699\"/><path d=\"M64.98 13.75h41.25v80H64.98v-10h32.5v-5h-32.5V72.5h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V50h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V27.5h32.5v-5h-32.5v-8.75zM25.83 35.837c2.375-.137 4.75-.237 7.125-.362 1.662 8.438 3.362 16.862 5.162 25.262 1.413-8.675 2.976-17.325 4.487-25.987 2.5-.087 5-.225 7.488-.375-2.825 12.112-5.3 24.325-8.388 36.362-2.088 1.088-5.213-.05-7.688.125-1.663-8.274-3.6-16.5-5.088-24.812-1.462 8.075-3.362 16.075-5.037 24.101-2.4-.125-4.812-.275-7.226-.438-2.074-11-4.512-21.925-6.449-32.95 2.137-.1 4.287-.188 6.425-.263 1.287 7.962 2.75 15.888 3.875 23.862 1.765-8.174 3.564-16.349 5.314-24.525z\" fill=\"#fff\"/></svg>;\n    case 'xls':\n    case 'xlsx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.037 107.5\"><path d=\"M57.55 0h7.425v10c12.513 0 25.025.025 37.537-.038 2.113.087 4.438-.062 6.275 1.2 1.287 1.85 1.138 4.2 1.225 6.325-.062 21.7-.037 43.388-.024 65.075-.062 3.638.337 7.35-.425 10.938-.5 2.6-3.625 2.662-5.713 2.75-12.95.037-25.912-.025-38.875 0v11.25h-7.763c-19.05-3.463-38.138-6.662-57.212-10V10.013C19.188 6.675 38.375 3.388 57.55 0z\" fill=\"#207245\"/><path d=\"M64.975 13.75h41.25V92.5h-41.25V85h10v-8.75h-10v-5h10V62.5h-10v-5h10v-8.75h-10v-5h10V35h-10v-5h10v-8.75h-10v-7.5z\" fill=\"#fff\"/><path d=\"M79.975 21.25h17.5V30h-17.5v-8.75z\" fill=\"#207245\"/><path d=\"M37.025 32.962c2.825-.2 5.663-.375 8.5-.512a2607.344 2607.344 0 0 1-10.087 20.487c3.438 7 6.949 13.95 10.399 20.95a716.28 716.28 0 0 1-9.024-.575c-2.125-5.213-4.713-10.25-6.238-15.7-1.699 5.075-4.125 9.862-6.074 14.838-2.738-.038-5.476-.15-8.213-.263C19.5 65.9 22.6 59.562 25.912 53.312c-2.812-6.438-5.9-12.75-8.8-19.15 2.75-.163 5.5-.325 8.25-.475 1.862 4.888 3.899 9.712 5.438 14.725 1.649-5.312 4.112-10.312 6.225-15.45z\" fill=\"#fff\"/><path d=\"M79.975 35h17.5v8.75h-17.5V35zM79.975 48.75h17.5v8.75h-17.5v-8.75zM79.975 62.5h17.5v8.75h-17.5V62.5zM79.975 76.25h17.5V85h-17.5v-8.75z\" fill=\"#207245\"/></svg>;\n    case 'ppt':\n    case 'pptx':\n      return<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.031 107.5\"><path d=\"M57.893 0h7.087v11.25c13.363.075 26.738-.138 40.088.062 2.875-.275 5.125 1.962 4.838 4.837.212 23.35-.05 46.712.125 70.075-.125 2.525.25 5.325-1.2 7.562-1.825 1.325-4.2 1.15-6.338 1.25-12.5-.062-25-.037-37.513-.037v12.5h-7.774c-19.05-3.475-38.138-6.65-57.2-10-.013-29.162 0-58.325 0-87.475C19.292 6.688 38.58 3.288 57.893 0z\" fill=\"#d24625\"/><path d=\"M64.98 15h41.25v76.25H64.98v-10h30v-5h-30V70h30v-5H64.993c-.013-2.45-.013-4.9-.024-7.35 4.95 1.537 10.587 1.5 15.012-1.476 4.788-2.837 7.288-8.25 7.7-13.65-5.487-.038-10.975-.025-16.45-.025-.012-5.438.062-10.875-.112-16.3-2.05.4-4.1.825-6.138 1.262V15z\" fill=\"#fff\"/><path d=\"M73.743 23.587c8.688.4 15.987 7.712 16.45 16.375-5.488.063-10.975.038-16.463.038 0-5.475-.012-10.95.013-16.413z\" fill=\"#d24625\"/><path d=\"M20.055 33.025c6.788.325 15.013-2.688 20.638 2.4 5.388 6.538 3.963 18.562-4.025 22.476-2.837 1.449-6.087 1.25-9.175 1.149-.013 4.888-.024 9.775-.013 14.663a1323.27 1323.27 0 0 0-7.438-.625c-.112-13.351-.136-26.713.013-40.063z\" fill=\"#fff\"/><path d=\"M27.48 39.788c2.463-.113 5.513-.562 7.176 1.75 1.425 2.45 1.35 5.675.162 8.2-1.425 2.575-4.65 2.325-7.138 2.625-.263-4.188-.237-8.376-.2-12.575z\" fill=\"#d24625\"/></svg>;\n    default:\n      return <FaFile />;\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n  updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      console.error('Error updating profile photo:', error);\n    });\n};\n\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; \n        const customURLStatus = userData.customURL || false;\n        const existingPoints = userData.points || 0;\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus,\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints,\n          labels: selectedLabel, \n        });\n        setPreviousPhotoRef(null);\n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n          setSelectedLabel(userData.labels || '');\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 6  ) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n    const MAX_KEYWORDS_LIMIT = 5; \n    const handleImageClick = () => {\n      console.log('Image clicked');\n      setIsModalOpen(true);\n    };\n\n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n  const enableScroll = () => {\n    document.body.style.overflow = '';\n  };\n\n  \n\n  \n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n      </div>\n    </div>\n  )}\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n      </div>\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n    </div>\n    <h3>My Profile</h3>\n    <hr />\n    <form className=\"file-upload\">\n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-12 col-12\">\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <div className=\"col-md-8\">\n        <h4 className=\"mb-4\">General information</h4>\n        <div className=\"col-md-12\">\n    <div className=\"row g-3\">\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">First Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"First name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Last Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"Last name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n            <input\n                type=\"email\"\n                className=\"form-control form-control-lg\"\n                id=\"inputEmail4\"\n                value={user ? user.email : ''}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Mobile number *</label>\n            <input\n                id=\"inputMobileNumber\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your Phone number\"\n                aria-label=\"Phone number\"\n                value={mobileNumber}\n                onChange={(e) => setMobileNumber(e.target.value)}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Role/Expertise *</label>\n            <input\n                id=\"inputExpertise\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your role/expertise\"\n                aria-label=\"your Role\"\n                value={occupation}\n                onChange={(e) => setRole(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Description of Expertise</label>\n            <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                className=\"form-control\"\n                rows=\"4\"\n                placeholder=\"Enter a brief description of your expertise or how you can help\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ resize: 'none' }}\n            />\n        </div>\n\n        \n \n  \n\n\n\n\n\n\n\n\n\n    </div>\n</div>\n</div>\n<div className=\"col-md-4\">\n<div className=\"form-group\">\n<label className=\"form-label\">Categories</label>\n  <ul className=\"listcard expert-listcard\">\n  <li className=\"form-check expert-form-check \">\n      <input type=\"radio\" className=\"form-check-input listboxes \" id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Computer')}\n         checked={selectedLabel === 'Computer'} \n      />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Computer\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Sport'}   onChange={() => setSelectedLabel('Sport')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Sport\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Food'} \n         onChange={() => setSelectedLabel('Food')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Food\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Health'} \n      name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Health')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Health\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Work'} \n      name=\"jobSuccess\"\n         onChange={() => setSelectedLabel('Work')} />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Work\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\"\n          checked={selectedLabel === 'Hobbies'} \n      id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Hobbies')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Hobbies\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n  </ul>\n</div>\n    </div>\n</div>\n    \n    </div>\n   \n    </div>\n\n    <div className=\"card-body card-profile\">\n  <h4>File Gallery</h4>\n  <div className=\"uploadcontainer\">\n    <input\n      className=\"uploadfile\"\n      type=\"file\"\n      onChange={(e) => handleFileUpload(e.target.files)}\n      multiple\n    />\n    <div className=\"documentupload\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n      </svg>\n      <div>\n        <div className=\"choosefile mt-2\">\n          Choose file\n        </div>\n        {' '}\n        or{' '}\n        <div className=\"draghere\">\n          drag here\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div>\n<div className=\"gallery\">\n  <div className=\"gallery-container\">\n    {gallery.map((photo, index) => (\n      <div key={index} className=\"gallery-item\">\n     <input\n  type=\"text\"\n  placeholder=\"Enter title\"\n  className=\"form-control form-control-lg borderradius\"\n  value={photo.title} // Show the current title in the input field\n  onChange={(e) => handleTitleChange(e.target.value, index)} // Update title on change\n  onKeyDown={(e) => {\n    if (e.key === 'Enter') { // Check if the Enter key is pressed\n      e.preventDefault(); // Prevent default behavior (form submission)\n      handleUploadDescription(index); // Call handleUploadDescription function\n    }\n  }}\n/>\n\n        {photo.isImage ? (\n          <div className=\"image-container\">\n            <img src={photo.url} alt={`Gallery ${index + 1}`} className=\"gallery-image\" />\n          </div>\n        ) : (\n          <div className=\"file-container\">\n              <div className=\"file-icon\">{getFileIcon(photo.url)}</div>\n          <div className=\"file-name\">{photo.title}</div> {/* Display title above the icon */}\n        \n        </div>\n        \n        )}\n        <textarea\n          type=\"text\"\n          placeholder=\"Enter description\"\n          className=\"form-control form-control-lg borderradius\"\n          value={photo.description} // Show the current description in the textarea\n          onChange={(e) => handleDescriptionChange(e.target.value, index)}\n        />\n        <div className='d-flex'>\n          <button className=\"btn btn-primary\" onClick={(e) => { e.preventDefault(); handleUploadDescription(index); }}>Upload Description</button>\n          <button className=\"btn btn-secondary\" onClick={(e) => { e.preventDefault(); handleRemovePhoto(index); }}>❌ Remove</button>\n        </div>\n      </div>\n    ))}\n  </div>\n</div>\n\n</div>\n\n \n    <div className=\"col-xl-12 col-12\">\n   \n    <div className=\"pt-5 rounded\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    \n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n   \n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n    <div className=\"me-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n    </div>\n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n    </div>\n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    </div>\n    </div>\n   \n    </div>\n    </form>\n    </div>\n    </div>\n    </div>\n    {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modalcrop \">\n          <ImageCropper\n              setPhotoURL={setPhotoURL}\n              setImageLoadError={setImageLoadError}\n              closeModal={closeModal}\n              photoURL={photoURL}\n              handleImageUpload={handleImageUpload}\n              handleImageError={handleImageError}\n              user={user}\n              collectionName=\"expertApplications\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n    );\n    }\nexport default ExpertProfile;\n","import React, { useState, useRef, useEffect } from 'react'; // Import React and useState\nimport { CropperRef, Cropper, CircleStencil } from 'react-advanced-cropper';\nimport 'react-advanced-cropper/dist/style.css';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { doc, getDoc, updateDoc, deleteField, setDoc, onSnapshot } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\n\nfunction ImageCropper({\n  closeModal,\n  photoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n}) {\n  const [image, setImage] = useState(photoURL);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDeleteConfirmed, setIsDeleteConfirmed] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null); // Added local state for the document reference\n  const cropperRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [isUploadSuccess, setIsUploadSuccess] = useState(false);\n\n  const CustomCheckmark = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n);\n\nuseEffect(() => {\n  document.body.classList.add('modal-open');\n\n  // Cleanup: Remove 'modal-open' class when the modal is closed\n  return () => {\n    document.body.classList.remove('modal-open');\n  };\n}, []);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file); // Update the selectedFile state with the file\n  \n    if (file) {\n      setSelectedFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImage(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleNewPhoto = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleUpload = async () => {\n    const canvas = cropperRef.current?.getCanvas();\n    if (canvas) {\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg'));\n  \n      if (blob) {\n        const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n        const metadata = { contentType: 'image/jpeg' };\n  \n        const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n  \n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            // Handle upload progress here\n          },\n          (error) => {\n            // Handle upload error here\n          },\n          () => {\n            // Handle upload success here\n            getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n              if (downloadURL) {\n                // Update the Firestore document immediately before handling the upload success\n                await updateDoc(docRef, { photoURL: downloadURL });\n                handleImageUpload(downloadURL);\n                setIsUploadSuccess(true);\n                setTimeout(() => {\n                  setIsUploadSuccess(false);\n                }, 3000);\n              }\n            });\n          }\n        );\n      }\n    }\n  };\n  \n\n  const handleDeletePhoto = async () => {\n    if (user && user.uid) {\n      const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n      await updateDoc(docRef, { photoURL: defaultImageURL });\n      setPhotoURL(defaultImageURL);\n      setIsDeleteConfirmed(false);\n    }\n  };\n  \n\n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'image/*';\n    fileInputRef.current.addEventListener('change', handleFileUpload);\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef); // Set the local state for document reference\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n  \n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.photoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n  \n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n  \n\n  return (\n    <div className=\"modalimage align-items-center\">\n      <div className=\"top-section\">\n        <div style={{ marginRight: '10px' }}>Profile image</div>\n        <button className=\"btn-crop\" onClick={closeModal}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div className='centerimage'>\n      <div className=\"croppers-wizard__body\">\n        <div className='default-cropper croppers-wizard__cropper'>\n\n       \n          {image ? (\n            <Cropper\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n                handlers: {\n                  eastNorth: true,\n                  north: false,\n                  westNorth: true,\n                  west: false,\n                  westSouth: true,\n                  south: false,\n                  eastSouth: true,\n                  east: false,\n              }\n              }}\n         \n            />\n          ) : null}\n</div>\n\n</div>\n\n      </div>\n      \n      <div className=\"button-section with-divider\">\n  <button className=\"btn-crop\" onClick={handleNewPhoto}>\n    <div className=\"button-content\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n          </svg>\n      New Photo\n    </div>\n  </button>\n\n  <button className=\"btn-crop\" onClick={handleUpload}>\n        <div className=\"button-content\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\n          </svg>\n          Upload Photo\n        </div>\n      </button>\n\n\n\n      {isUploadSuccess && (\n  <div className=\"upload-success-icon\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n    </svg>\n  </div>\n)}\n\n \n\n  <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n      </svg>\n      Delete Photo\n    </div>\n  </button>\n</div>\n\n\n\n    </div>\n  );\n}\n\nexport default ImageCropper;"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","selectedLabel","setSelectedLabel","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","gallery","setGallery","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","userImagesCollectionRef","querySnapshot","galleryList","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","labels","collection","concat","getDocs","docs","map","isImage","test","url","title","console","log","id","t0","error","stop","_x","apply","arguments","handleFileUpload","_ref2","_callee2","files","file","fileName","userFilesCollectionRef","scaledFile","downloadURL","_context2","name","size","uploadFile","t1","_x2","_x3","_ref3","_callee3","collectionRef","storageRef","uploadTask","snapshot","uploadedFiles","docRef","_context3","ref","storage","uploadBytesResumable","getDownloadURL","prevGallery","_toConsumableArray","setDoc","abrupt","_x4","_x5","_x6","_x7","handleRemovePhoto","_ref4","_callee4","index","docPath","updatedGallery","_context4","deleteObject","deleteDoc","filter","_","i","_x8","handleUploadDescription","_ref5","_callee5","photo","_context5","Promise","all","updateDoc","_x9","getFileIcon","pop","toLowerCase","_jsxs","style","color","xmlns","width","height","viewBox","children","_jsx","d","fill","FaFile","handleImageUpload","_ref6","_callee6","_context6","updateProfile","then","catch","_x10","clearUpdateMessage","updateProfileInfo","_ref7","_callee7","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context7","approved","points","currentUser","document","getElementById","value","setTimeout","_ref8","_callee8","_context8","_x11","handleRemoveKeyword","updatedKeywords","splice","removeKeyword","handleImageClick","enableScroll","body","overflow","className","src","alt","onError","onClick","cursor","strokeWidth","stroke","strokeLinecap","strokeLinejoin","process","placeholder","onChange","e","target","readOnly","pointerEvents","htmlFor","rows","resize","checked","multiple","handleTitleChange","onKeyDown","key","preventDefault","handleDescriptionChange","window","innerWidth","trim","length","handleAddKeyword","disabled","keyword","marginLeft","ImageCropper","closeModal","handleImageError","collectionName","image","setImage","setSelectedFile","setIsDeleteConfirmed","selectedFileName","setSelectedFileName","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","classList","add","remove","reader","FileReader","onload","event","result","readAsDataURL","handleUpload","_cropperRef$current","canvas","blob","metadata","current","getCanvas","resolve","toBlob","contentType","on","handleDeletePhoto","defaultImageURL","createElement","accept","addEventListener","onSnapshot","_doc$data","handlePhotoURLChange","marginRight","Cropper","stencilComponent","CircleStencil","stencilProps","grid","handlers","eastNorth","north","westNorth","west","westSouth","south","eastSouth","east","click"],"sourceRoot":""}