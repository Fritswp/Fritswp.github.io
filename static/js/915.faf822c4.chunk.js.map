{"version":3,"file":"static/js/915.faf822c4.chunk.js","mappings":"gRAsiCA,UAzhCA,YACsBA,EAAAA,EAAAA,MAAdC,UAAR,IACAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgDjB,EAAAA,EAAAA,UAAS,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAArCE,GAAFD,EAAA,GAAqBA,EAAA,IAC5CE,GAA8BpB,EAAAA,EAAAA,UAAS,CAAEqB,KAAM,GAAIC,KAAM,KAAKC,GAAArB,EAAAA,EAAAA,GAAAkB,EAAA,GAAvDI,EAAOD,EAAA,GACdE,GAD0BF,EAAA,IACgBvB,EAAAA,EAAAA,UAAS,CAAEqB,KAAM,GAAIC,KAAM,MAAKI,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAnEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA4C7B,EAAAA,EAAAA,WAAS,GAAM8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA8BjC,EAAAA,EAAAA,UAAS,IAAGkC,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwBrC,EAAAA,EAAAA,UAAS,IAAGsC,GAAApC,EAAAA,EAAAA,GAAAmC,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BzC,EAAAA,EAAAA,UAAS,IAAG0C,IAAAxC,EAAAA,EAAAA,GAAAuC,EAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAgC7C,EAAAA,EAAAA,UAAS,IAAG8C,IAAA5C,EAAAA,EAAAA,GAAA2C,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAAwCjD,EAAAA,EAAAA,UAAS,IAAGkD,IAAAhD,EAAAA,EAAAA,GAAA+C,GAAA,GAA7CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAA8BrD,EAAAA,EAAAA,UAAS,IAAGsD,IAAApD,EAAAA,EAAAA,GAAAmD,GAAA,GAAnCE,GAAUD,GAAA,GAAEE,GAAOF,GAAA,GAC1BG,IAA0BzD,EAAAA,EAAAA,UAAS,IAAG0D,IAAAxD,EAAAA,EAAAA,GAAAuD,GAAA,GAAxBE,IAAFD,GAAA,GAAUA,GAAA,IACtBE,IAAsC5D,EAAAA,EAAAA,UAAS,IAAG6D,IAAA3D,EAAAA,EAAAA,GAAA0D,GAAA,GAA3CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAA4ChE,EAAAA,EAAAA,UAAS,IAAGiE,IAAA/D,EAAAA,EAAAA,GAAA8D,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAAgCpE,EAAAA,EAAAA,UAAS,IAAGqE,IAAAnE,EAAAA,EAAAA,GAAAkE,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAA0CxE,EAAAA,EAAAA,UAAS,IAAGyE,IAAAvE,EAAAA,EAAAA,GAAAsE,GAAA,GAA/CE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAsC5E,EAAAA,EAAAA,WAAS,GAAM6E,IAAA3E,EAAAA,EAAAA,GAAA0E,GAAA,GAA9CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAA8ChF,EAAAA,EAAAA,UAAS,IAAGiF,IAAA/E,EAAAA,EAAAA,GAAA8E,GAAA,GAAnDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,IAA8BpF,EAAAA,EAAAA,UAAS,IAAGqF,IAAAnF,EAAAA,EAAAA,GAAAkF,GAAA,GAAnCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAC1BG,IAAgDxF,EAAAA,EAAAA,WAAS,GAAMyF,IAAAvF,EAAAA,EAAAA,GAAAsF,GAAA,GAAxDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAkD5F,EAAAA,EAAAA,WAAS,GAAM6F,IAAA3F,EAAAA,EAAAA,GAAA0F,GAAA,GAAvCE,IAAFD,GAAA,GAAsBA,GAAA,IAC9CE,IAA4C/F,EAAAA,EAAAA,WAAS,GAAMgG,IAAA9F,EAAAA,EAAAA,GAAA6F,GAAA,GAApDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAAwCnG,EAAAA,EAAAA,UAAS,MAAKoG,IAAAlG,EAAAA,EAAAA,GAAAiG,GAAA,GAA/CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAEpCG,IAAgDvG,EAAAA,EAAAA,UAAS,MAAKwG,IAAAtG,EAAAA,EAAAA,GAAAqG,GAAA,GAAvDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAE5CG,IAA8B3G,EAAAA,EAAAA,UAAS,IAAG4G,IAAA1G,EAAAA,EAAAA,GAAAyG,GAAA,GAAnCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAC1BG,IAA0B/G,EAAAA,EAAAA,UAAS,IAAGgH,IAAA9G,EAAAA,EAAAA,GAAA6G,GAAA,GAA/BE,GAAKD,GAAA,GAAEE,GAAQF,GAAA,GACtBG,IAA4CnH,EAAAA,EAAAA,WAAS,GAAMoH,IAAAlH,EAAAA,EAAAA,GAAAiH,GAAA,GAApCE,IAAFD,GAAA,GAAmBA,GAAA,IACxCE,IAA8CtH,EAAAA,EAAAA,UAAS,IAAGuH,IAAArH,EAAAA,EAAAA,GAAAoH,GAAA,GAAnDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,IAE1CG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcC,EAAAA,GAAKC,mBAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAX,EAAAA,EAAAA,KAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACrDZ,EAAS,CAADU,EAAAE,KAAA,SAG2D,OAFrE3I,EAAQ+H,GAEFC,GAAaY,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsBd,EAASe,KAAIL,EAAAE,KAAA,GACvCI,EAAAA,EAAAA,IAAOf,GAAY,KAAD,EAkCgD,OAlC1FC,EAAeQ,EAAAO,MAEDC,UACZf,EAAWD,EAAgBiB,OACjCtI,EAAYsH,EAASvH,UAAYoH,EAASpH,UAC1CP,EAAa8H,EAASiB,aAAepB,EAASqB,YAAcrB,EAASqB,YAAYC,MAAM,KAAK,GAAK,KACjG7I,EAAY0H,EAASoB,YAAcvB,EAASqB,YAAcrB,EAASqB,YAAYC,MAAM,KAAK,GAAK,KAC/FrH,EAAWkG,EAASnG,SAAW,IAC/BK,EAAQ8F,EAAS/F,MAAQ,IACzBK,GAAU0F,EAAS3F,QAAU,IAC7BK,GAAYsF,EAASvF,UAAY,IACjCK,GAAgBkF,EAASnF,cAAgB,IACzCK,GAAQ8E,EAAS/E,YAAc,IAC/BI,GAASwE,EAASwB,OAClB5F,GAAeuE,EAASxE,aAAe,IACvCa,GAAiB2D,EAASsB,QAAU,KAEpC5I,EAAYmH,EAASpH,UAGjBwH,GAA0BsB,EAAAA,EAAAA,IAAWZ,EAAAA,GAAU,sBAADa,OAAwB3B,EAASe,IAAG,WAElFV,GAAsBuB,EAAAA,EAAAA,IAAWxB,GAAyB,SAACyB,GAC/D,IAAMC,EAAcD,EAAcE,KAAKC,KAAI,SAACnB,GAC1C,IAAMM,EAAON,EAAIM,OACXc,EAAU,kCAAkCC,KAAKf,EAAKgB,IAAIb,MAAM,KAAK,IAC3E,MAAO,CAAEc,GAAIvB,EAAIuB,GAAID,IAAKhB,EAAKgB,IAAKxG,YAAawF,EAAKxF,aAAe,GAAI0G,MAAOlB,EAAKkB,OAAS,GAAIJ,QAAAA,EACpG,IAEAK,QAAQC,IAAI,gBAAiBT,GAC7B1E,GAAW0E,EACb,IAGMxB,GAAyBoB,EAAAA,EAAAA,IAAWZ,EAAAA,GAAU,sBAADa,OAAwB3B,EAASe,IAAG,WAASL,EAAAE,KAAA,IACpE4B,EAAAA,EAAAA,IAAQlC,GAAwB,KAAD,GAOvC,OAPdC,EAAaG,EAAAO,KAEbT,EAAYD,EAAcwB,KAAKC,KAAI,SAACnB,GACxC,IAAMM,EAAON,EAAIM,OACjB,MAAO,CAAEiB,GAAIvB,EAAIuB,GAAID,IAAKhB,EAAKgB,IAAKxG,YAAawF,EAAKxF,YACxD,IAEAoD,GAASyB,GAAWE,EAAA+B,OAAA,UAEb,WACLpC,GACF,IAAC,QAEDpG,EAAW,IACXI,EAAQ,IACRI,GAAU,IACVI,GAAY,IACZI,GAAgB,IAChBpC,EAAY,MACZ2C,GAAS,IACTH,GAAQ,IACRO,GAAe,IACfmD,GAAS,IAAK,yBAAA2B,EAAAgC,OAAA,GAAA3C,EAAA,KAEjB,gBAAA4C,GAAA,OAAAhD,EAAAiD,MAAA,KAAAC,UAAE,CAAF,CAhE0C,IAkE3C,OAAOrD,CACT,GAAG,IAGH,IAAMsD,GAAgB,eAAAC,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,EAAOC,EAAOZ,GAAK,IAAAa,EAAAvH,EAAAwH,EAAAC,EAAAC,EAAAC,EAAA,OAAAzD,EAAAA,EAAAA,KAAAY,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAK1C,GAJMsC,EAAOD,EAAM,GACbtH,EAAc,GACdwH,EAAWd,GAASa,EAAKM,KACzBJ,GAAyB1B,EAAAA,EAAAA,IAAWZ,EAAAA,GAAU,sBAADa,OAAwB3J,EAAK+I,IAAG,aAE/EmC,EAAKO,KAAO,SAAe,CAAAF,EAAA3C,KAAA,QACqD,OAAlFzC,GAAgB,CAAEhF,KAAM,QAASE,QAAS,uCAAwCkK,EAAAd,OAAA,oBAAAc,EAAA5C,KAAA,IAI/DuC,EAAKO,KAAO,SAAe,CAAAF,EAAA3C,KAAA,gBAAA2C,EAAA3C,KAAA,GAASyC,EAAWH,GAAK,QAAAK,EAAAG,GAAAH,EAAAtC,KAAAsC,EAAA3C,KAAA,iBAAA2C,EAAAG,GAAGR,EAAK,KAAD,GAA9D,OAAVG,EAAUE,EAAAG,GAAAH,EAAA3C,KAAA,GACU+C,GAAWN,EAAY1H,EAAawH,EAAUC,GAAwB,KAAD,GAAzFE,EAAWC,EAAAtC,KACjBqB,QAAQC,IAAI,gBAAiBe,GAC7BnF,GAAgB,CAAEhF,KAAM,UAAWE,QAAS,gCAAiCkK,EAAA3C,KAAA,iBAAA2C,EAAA5C,KAAA,GAAA4C,EAAAK,GAAAL,EAAA,SAE7EjB,QAAQuB,MAAM,yBAAwBN,EAAAK,IACtCzF,GAAgB,CAAEhF,KAAM,QAASE,QAAS,4CAA6C,QAIzFyK,YAAW,WACT3F,GAAgB,KAClB,GAAG,KAAM,yBAAAoF,EAAAb,OAAA,GAAAM,EAAA,mBACV,gBAxBqBe,EAAAC,GAAA,OAAAjB,EAAAH,MAAA,KAAAC,UAAA,KA0BhBc,GAAU,eAAAM,GAAArE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoE,EAAOhB,EAAMvH,EAAawH,EAAUgB,GAAa,IAAAC,EAAAC,EAAAC,EAAAhB,EAAAiB,EAAAC,EAAA,OAAA3E,EAAAA,EAAAA,KAAAY,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OAIP,OAHrDwD,GAAaM,EAAAA,EAAAA,IAAIC,EAAAA,GAAQ,eAADhD,OAAiB3J,EAAK+I,IAAG,KAAAY,OAAIwB,IAAWsB,EAAA9D,KAAA,EAG9D0D,GAAaO,EAAAA,EAAAA,IAAqBR,EAAYlB,GAAKuB,EAAA7D,KAAA,EAClCyD,EAAW,KAAD,EAAnB,OAARC,EAAQG,EAAAxD,KAAAwD,EAAA7D,KAAA,GACYiE,EAAAA,EAAAA,IAAeP,EAASI,KAAK,KAAD,EAGX,OAHrCpB,EAAWmB,EAAAxD,KACXsD,EAAgB,CAAEnC,GAAIe,EAAUhB,IAAKmB,EAAa3H,YAAAA,EAAa0G,MAAO,IAC5EjF,IAAW,SAAA0H,GAAW,SAAAnD,QAAAoD,EAAAA,EAAAA,GAAQD,GAAW,CAAEP,GAAgB,IACrDC,GAAS3D,EAAAA,EAAAA,IAAIsD,EAAehB,GAASsB,EAAA7D,KAAA,IACrCoE,EAAAA,EAAAA,IAAOR,EAAQ,CAAErC,IAAKmB,EAAa3H,YAAAA,EAAa0G,MAAO,KAAM,KAAD,GAEZ,OAAtDC,QAAQC,IAAI,0CAA0CkC,EAAAhC,OAAA,SAC/Ca,GAAW,QAAAmB,EAAA9D,KAAA,GAAA8D,EAAAf,GAAAe,EAAA,SAElBnC,QAAQuB,MAAM,yBAAwBY,EAAAf,IAAS,yBAAAe,EAAA/B,OAAA,GAAAwB,EAAA,mBAElD,gBAjBee,EAAAC,EAAAC,EAAAC,GAAA,OAAAnB,EAAArB,MAAA,KAAAC,UAAA,KAoBVwC,GAAiB,eAAAC,GAAA1F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyF,EAAOC,EAAOC,GAAK,IAAAxC,EAAAE,EAAAiB,EAAAsB,EAAAlB,EAAAmB,EAAA,OAAA9F,EAAAA,EAAAA,KAAAY,MAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,OAIV,GAJUgF,EAAAjF,KAAA,EAEzC2B,QAAQC,IAAI,0BAA2BpF,IACjC8F,EAAQ9F,GAAQqI,GACtBlD,QAAQC,IAAI,WAAYU,GACnBA,EAAM,CAAD2C,EAAAhF,KAAA,QACqD,OAA7D0B,QAAQuB,MAAM,+CAA+C+B,EAAAnD,OAAA,iBAKO,OAFhEU,EAAWF,EAAMb,GACvBE,QAAQC,IAAI,SAAUY,GAChBiB,GAAaM,EAAAA,EAAAA,IAAIC,EAAAA,GAAQ,eAADhD,OAAiB3J,EAAK+I,IAAG,KAAAY,OAAIwB,IAAWyC,EAAAhF,KAAA,IAChEiF,EAAAA,EAAAA,IAAazB,GAAY,KAAD,GAIQ,OAHtC9B,QAAQC,IAAI,sCACNmD,EAAO,sBAAA/D,OAAyB3J,EAAK+I,IAAG,WAAAY,OAAUwB,GACxDb,QAAQC,IAAI,2BAA4BmD,GAClClB,GAAS3D,EAAAA,EAAAA,IAAIC,EAAAA,GAAW4E,GAAQE,EAAAhF,KAAA,IAChCkF,EAAAA,EAAAA,IAAUtB,GAAQ,KAAD,GACvBlC,QAAQC,IAAI,gDACNoD,EAAiBxI,GAAQ4I,QAAO,SAACC,EAAGC,GAAC,OAAKA,IAAMT,CAAK,IAC3DlD,QAAQC,IAAI,mBAAoBoD,GAChCvI,GAAWuI,GAAgBC,EAAAhF,KAAA,iBAAAgF,EAAAjF,KAAA,GAAAiF,EAAAlC,GAAAkC,EAAA,SAE3BtD,QAAQuB,MAAM,wBAAuB+B,EAAAlC,IAAS,yBAAAkC,EAAAlD,OAAA,GAAA6C,EAAA,mBAEjD,gBAzBsBW,EAAAC,GAAA,OAAAb,EAAA1C,MAAA,KAAAC,UAAA,KA2BjBuD,GAAoB,SAACC,EAAOC,GAChC,IAAMX,EAAiBxI,GAAQ6E,KAAI,SAAAuE,GACjC,OAAIA,EAAMnE,KAAOkE,GACfE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAK,IAAElE,MAAOgE,IAErBE,CACT,IACAnJ,GAAWuI,EACb,EAEMc,GAA0B,SAACJ,EAAOC,GACtC,IAAMX,EAAiBxI,GAAQ6E,KAAI,SAAAuE,GACjC,OAAIA,EAAMnE,KAAOkE,GACfE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAK,IAAE5K,YAAa0K,IAE3BE,CACT,IACAnJ,GAAWuI,EACb,EAEMe,GAAuB,eAAAC,GAAA/G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8G,EAAOpB,GAAK,IAAAe,EAAA/B,EAAA,OAAA3E,EAAAA,EAAAA,KAAAY,MAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,OAEmD,OADvF2F,EAAQpJ,GAAQqI,GAChBhB,GAAS3D,EAAAA,EAAAA,KAAIa,EAAAA,EAAAA,IAAWZ,EAAAA,GAAU,sBAADa,OAAwB3J,EAAK+I,IAAG,WAAWwF,EAAMnE,IAAKyE,EAAAlG,KAAA,EAAAkG,EAAAjG,KAAA,EAErFkG,QAAQC,IAAI,EAChBC,EAAAA,EAAAA,IAAUxC,EAAQ,CAAE7I,YAAa4K,EAAM5K,YAAa0G,MAAOkE,EAAMlE,UAChE,KAAD,EACFC,QAAQC,IAAI,2DAA2DsE,EAAAjG,KAAA,gBAAAiG,EAAAlG,KAAA,EAAAkG,EAAAnD,GAAAmD,EAAA,SAEvEvE,QAAQuB,MAAM,wCAAuCgD,EAAAnD,IAAS,yBAAAmD,EAAAnE,OAAA,GAAAkE,EAAA,kBAEjE,gBAX4BK,GAAA,OAAAN,EAAA/D,MAAA,KAAAC,UAAA,KAavBqE,GAAc,SAAC/D,GACpB,IAAKA,EAAU,OAAO,KAKrB,OAH8BA,EAAS7B,MAAM,KAAK,GACVA,MAAM,KAAK6F,MAAMC,eAGvD,IAAK,MACH,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAIC,QAAQ,YAAWC,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,ktBAAktBC,KAAK,QAAa,KAACF,EAAAA,EAAAA,KAAA,QAAM,YAAU,UAAUC,EAAE,yzBAAyzBC,KAAK,QAAa,OAClsD,IAAK,MACX,IAAK,OACH,OAAOV,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAIC,QAAQ,oBAAmBC,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,+UAA+UC,KAAK,aAAWF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,mmBAAmmBC,KAAK,YAC1jC,IAAK,MACL,IAAK,OACH,OAAOV,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,oBAAmBC,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,8UAA8UC,KAAK,aAAWF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,oHAAoHC,KAAK,UAAQF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,qCAAqCC,KAAK,aAAWF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,0aAA0aC,KAAK,UAAQF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,yIAAyIC,KAAK,eACruC,IAAK,MACL,IAAK,OACH,OAAMV,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,oBAAmBC,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,uUAAuUC,KAAK,aAAWF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,+PAA+PC,KAAK,UAAQF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,kHAAkHC,KAAK,aAAWF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,oOAAoOC,KAAK,UAAQF,EAAAA,EAAAA,KAAA,QAAMC,EAAE,mJAAmJC,KAAK,eACzvC,QACE,OAAO,KAEb,GAEAxI,EAAAA,EAAAA,YAAU,WACR,IAAMyI,EAAsC,IAAnB7K,GAAQ8K,QAAgB9K,GAAQ+K,MAAK,SAAA3B,GAAK,OAAIA,EAAM4B,WAAW,IACxF3K,GAAoBwK,GAEpB,IAAMI,EAAsE,IAAlDjL,GAAQ4I,QAAO,SAAAQ,GAAK,OAAIA,EAAMtE,OAAO,IAAEgG,QAAgB9K,GAAQ+K,MAAK,SAAA3B,GAAK,OAAIA,EAAM4B,WAAW,IACxHxK,GAAqByK,EACvB,GAAG,CAACjL,KAGJ,IAAMkL,GAAiB,eAAAC,GAAA1I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyI,EAAOjF,GAAW,IAAArD,EAAA,OAAAJ,EAAAA,EAAAA,KAAAY,MAAA,SAAA+H,GAAA,cAAAA,EAAA7H,KAAA6H,EAAA5H,MAAA,OAEuB,OADjE/H,EAAYyK,GACNrD,GAAaY,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsB9I,EAAK+I,KAAIyH,EAAA5H,KAAA,GAC3DoG,EAAAA,EAAAA,IAAU/G,EAAY,CAAErH,SAAU0K,IAAe,KAAD,GACtDmF,EAAAA,EAAAA,IAAczQ,EAAM,CAAEY,SAAU0K,IAC7BoF,MAAK,WACJpG,QAAQC,IAAI,qCACd,IACCoG,OAAM,SAAC9E,GACNvB,QAAQuB,MAAM,gCAAiCA,EACjD,IAAG,wBAAA2E,EAAA9F,OAAA,GAAA6F,EAAA,KACN,gBAXsBK,GAAA,OAAAN,EAAA1F,MAAA,KAAAC,UAAA,KAajBgG,GAAqB,WACvBpP,EAAiB,CAAEP,KAAM,GAAIC,KAAM,IACrC,EACM2P,GAAiB,eAAAC,GAAAnJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkJ,IAAA,IAAA/I,EAAAC,EAAAC,EAAA8I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzJ,EAAAA,EAAAA,KAAAY,MAAA,SAAA8I,GAAA,cAAAA,EAAA5I,KAAA4I,EAAA3I,MAAA,UACnB5I,EAAK,CAADuR,EAAA3I,KAAA,eAAA2I,EAAA9G,OAAA,iBAI0D,OAJ1D8G,EAAA5I,KAAA,EAIDV,GAAaY,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsB9I,EAAK+I,KAAIwI,EAAA3I,KAAA,GACnCI,EAAAA,EAAAA,IAAOf,GAAY,KAAD,EAA3B,KAAfC,EAAeqJ,EAAAtI,MACDC,SAAS,CAADqI,EAAA3I,KAAA,SAKqC,OAJzDT,EAAWD,EAAgBiB,OAC3B8H,EAAiB9I,EAASqJ,WAAY,EACtCN,EAAkB/I,EAASxI,YAAa,EACxCwR,EAAiBhJ,EAASsJ,QAAU,EACpCL,GAAiBvI,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgB9I,EAAK+I,KAAIwI,EAAA3I,KAAA,IACzDkF,EAAAA,EAAAA,IAAUsD,GAAgB,KAAD,GAES,OADlCC,EAAc5J,EAAAA,GAAKiK,YACnBJ,EAAcD,EAAYzQ,SAAQ2Q,EAAA3I,KAAA,IAClCoE,EAAAA,EAAAA,IAAO/E,EAAY,CACvBoB,YAAY,GAADM,OAAKvJ,EAAS,KAAAuJ,OAAInJ,GAC7BgJ,MAAOxJ,EAAKwJ,MACZxG,aAAc2O,SAASC,eAAe,qBAAqBvD,MAC3DjL,WAAYuO,SAASC,eAAe,kBAAkBvD,MACtDrM,QAAS2P,SAASC,eAAe,gBAAgBvD,MACjDjM,KAAMuP,SAASC,eAAe,aAAavD,MAC3C7L,OAAQmP,SAASC,eAAe,eAAevD,MAC/CzL,SAAU+O,SAASC,eAAe,iBAAiBvD,MACnD1K,YAAagO,SAASC,eAAe,oBAAoBvD,MACzDzN,SAAU0Q,EACVE,SAAUP,EACVtR,UAAWuR,EACX/M,SAAUY,GACV0M,OAAQN,EACR1H,OAAQlF,KACP,KAAD,GACFvD,EAAoB,MACpBS,EAAiB,CAAEP,KAAM,+BAAgCC,KAAM,YAC/D2K,YAAW,kBAAM+E,IAAoB,GAAE,KAAM,QAAAU,EAAA3I,KAAA,iBAAA2I,EAAA5I,KAAA,GAAA4I,EAAA7F,GAAA6F,EAAA,SAG/C9P,EAAiB,CAAEP,KAAK,2BAADyI,OAA6B4H,EAAA7F,GAAMrK,SAAWF,KAAM,UAC3E2K,YAAW,kBAAM+E,IAAoB,GAAE,KAAM,yBAAAU,EAAA7G,OAAA,GAAAsG,EAAA,mBAEhD,kBAzCsB,OAAAD,EAAAnG,MAAA,KAAAC,UAAA,MA4CzBtD,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAcC,EAAAA,GAAKC,mBAAkB,eAAAmK,GAAAjK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAgK,EAAO9J,GAAQ,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAY,MAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,WACrDZ,EAAS,CAAD+J,EAAAnJ,KAAA,QAE2D,OADrE3I,EAAQ+H,GACFC,GAAaY,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsBd,EAASe,KAAIgJ,EAAAnJ,KAAA,GACvCI,EAAAA,EAAAA,IAAOf,GAAY,KAAD,GAA1CC,EAAe6J,EAAA9I,MACDC,WACZf,EAAWD,EAAgBiB,OACjC/E,GAAY+D,EAAShE,UAAY,IACjCK,GAAiB2D,EAASsB,QAAU,KACrC,wBAAAsI,EAAArH,OAAA,GAAAoH,EAAA,KAEJ,gBAAAE,GAAA,OAAAH,EAAAjH,MAAA,KAAAC,UAAE,CAAF,CAX0C,IAY3C,OAAO,WACLrD,GACF,CACF,GAAG,IAED,IASMyK,GAAsB,SAACzE,GAC3B,IAAM0E,GAAenF,EAAAA,EAAAA,GAAOhI,IAC5BmN,EAAgBC,OAAO3E,EAAO,GAC9BxI,GAAmBkN,EACrB,EACME,GAAgB,SAAC5E,GACrB,IAAM0E,GAAenF,EAAAA,EAAAA,GAAO5I,IAC5B+N,EAAgBC,OAAO3E,EAAO,GAC9BpJ,GAAY8N,EACd,EAEMG,GAAmB,WACvB/H,QAAQC,IAAI,iBACZ3F,IAAe,EACjB,EAWM0N,GAAe,WACnBX,SAASY,KAAKjD,MAAMkD,SAAW,EACjC,EAEMC,GAAkB,SAACC,GACvBA,EAAEC,iBACF5M,IAAkB,EACpB,EAcM6M,GAAa,eAAAC,GAAAjL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgL,EAAOJ,GAAC,IAAAK,EAAAzK,EAAAkE,EAAAwG,EAAA,OAAAnL,EAAAA,EAAAA,KAAAY,MAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,OACR,GAApB8J,EAAEC,iBACGjM,GAAQwM,QAAW7L,GAAgB6L,OAAM,CAAAD,EAAArK,KAAA,eAAAqK,EAAAxI,OAAA,iBAMgD,OANhDwI,EAAAtK,KAAA,EAI5CzB,IAAkB,GACZ6L,EAAerM,GAAQyM,WAAW,YAAczM,GAAQyM,WAAW,YAAczM,GAAO,WAAAiD,OAAcjD,IACtG4B,GAAyBoB,EAAAA,EAAAA,IAAWZ,EAAAA,GAAU,sBAADa,OAAwB3J,EAAK+I,IAAG,WAASkK,EAAArK,KAAA,GACvEwK,EAAAA,EAAAA,IAAO9K,EAAwB,CAAE6B,IAAK4I,EAAcpP,YAAa0D,KAAmB,KAAD,EAAlGmF,EAAMyG,EAAAhK,KACN+J,EAAU,CAAE5I,GAAIoC,EAAOpC,GAAID,IAAK4I,EAAcpP,YAAa0D,IACjEN,GAAS,GAAD4C,QAAAoD,EAAAA,EAAAA,GAAKjG,IAAK,CAAEkM,KACpBrM,GAAW,IACXW,GAAmB,IACnBf,GAAoB,CAAEpF,KAAM,UAAWE,QAAS,2BAA4BgS,QAAS,UAAWJ,EAAArK,KAAA,iBAAAqK,EAAAtK,KAAA,GAAAsK,EAAAvH,GAAAuH,EAAA,SAEhG3I,QAAQuB,MAAM,qBAAoBoH,EAAAvH,IAClCnF,GAAoB,CAAEpF,KAAM,QAASE,QAAS,yCAA0C,QAE/D,OAF+D4R,EAAAtK,KAAA,GAExFzB,IAAkB,GAAO+L,EAAAK,OAAA,YAG3BxH,YAAW,WACTvF,GAAoB,KACtB,GAAG,KAAM,yBAAA0M,EAAAvI,OAAA,GAAAoI,EAAA,yBACV,gBAzBkBS,GAAA,OAAAV,EAAAjI,MAAA,KAAAC,UAAA,KA6Bb2I,GAAgB,eAAAC,GAAA7L,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4L,EAAOhB,EAAGlF,GAAK,IAAAmG,EAAAC,EAAAC,EAAA,OAAAhM,EAAAA,EAAAA,KAAAY,MAAA,SAAAqL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,OAK6C,OAJnF8J,EAAEC,iBAAkBmB,EAAAnL,KAAA,EAElBzB,IAAkB,GACZyM,EAAS7M,GAAM0G,GAAOpD,GACtBwJ,GAAa/K,EAAAA,EAAAA,IAAIC,EAAAA,GAAU,sBAADa,OAAwB3J,EAAK+I,IAAG,UAAU4K,GAAOG,EAAAlL,KAAA,GAC3EkF,EAAAA,EAAAA,IAAU8F,GAAY,KAAD,EACrBC,EAAe/M,GAAMiH,QAAO,SAACC,EAAGC,GAAC,OAAKA,IAAMT,CAAK,IACvDzG,GAAS8M,GACTtN,GAAoB,CAAEpF,KAAM,UAAWE,QAAS,6BAA8BgS,QAAS,UAAWS,EAAAlL,KAAA,iBAAAkL,EAAAnL,KAAA,GAAAmL,EAAApI,GAAAoI,EAAA,SAElGxJ,QAAQuB,MAAM,uBAAsBiI,EAAApI,IACpCnF,GAAoB,CAAEpF,KAAM,QAASE,QAAS,2CAA4C,QAEjE,OAFiEyS,EAAAnL,KAAA,GAE1FzB,IAAkB,GAAO4M,EAAAR,OAAA,YAG3BxH,YAAW,WACTvF,GAAoB,KACtB,GAAG,KAAM,yBAAAuN,EAAApJ,OAAA,GAAAgJ,EAAA,yBACV,gBApBqBK,EAAAC,GAAA,OAAAP,EAAA7I,MAAA,KAAAC,UAAA,KA8B1B,OACAwE,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,oBAAmBrE,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,eAEfpE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,kBAAiBrE,UAChCC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,2BAA0BrE,UACzCP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,UAASrE,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,kBAEf5E,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,YAAWrE,SAAA,EAC1BP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,kCAAiCrE,SAAA,EAC5ChO,GAAkBhB,IAClByO,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,oBAAmBrE,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEqE,IAAKtT,EACLuT,IAAI,eACJF,UAAU,gCACVG,QAAS,kBAAMvS,GAAkB,EAAK,EACtCwS,QAAShC,GACT/C,MAAO,CAAEgF,OAAQ,cAEnBzE,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,WAAWI,QAAShC,GAAiBzC,UACpDC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BG,QAAQ,YAAY4E,YAAa,EAAGC,OAAO,QAAQP,UAAU,UAASrE,UAClHC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,kCAKpDlO,IACCyN,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,oBAAmBrE,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEqE,IAAG,GAAAvK,OAAKgL,GAAsB,0BAC9BR,IAAI,mBACJF,UAAU,+CACVI,QAAShC,GACT/C,MAAO,CAAEgF,OAAQ,cAEnBjF,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,OAAMrE,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYrE,SAAA,GAAAjG,OAAKvJ,EAAS,KAAAuJ,OAAInJ,MAC7CqP,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,kCAAiCrE,SAAExM,eAK1DiM,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,OAAMrE,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYrE,SAAA,GAAAjG,OAAKvJ,EAAS,KAAAuJ,OAAInJ,MAC7CqP,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,8BAA6BrE,SAAExM,SAEhDiM,EAAAA,EAAAA,MAAA,OAAAO,SAAA,CACoB,UAAjBvO,EAAQF,OACP0O,EAAAA,EAAAA,KAAA,KAAGoE,UAAU,WAAW3E,MAAO,CAAEC,MAAO,OAAQK,SAAEvO,EAAQH,OAE1C,YAAjBG,EAAQF,OACP0O,EAAAA,EAAAA,KAAA,KAAGoE,UAAU,WAAW3E,MAAO,CAAEC,MAAO,SAAUK,SAAEvO,EAAQH,OAE5C,aAAjBG,EAAQF,OACP0O,EAAAA,EAAAA,KAAA,KAAGoE,UAAU,WAAW3E,MAAO,CAAEC,MAAO,QAASK,SAAEvO,EAAQH,cAIjE2O,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMoE,UAAU,cAAarE,UAC7BP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,gBAAerE,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,mBAAkBrE,UAEjCC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,yBAAwBrE,UACvCP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,UAASrE,SAAA,EACxBP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIoE,UAAU,OAAMrE,SAAC,yBACrBC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,YAAWrE,UAC9BP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,UAASrE,SAAA,EACpBP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,kBAC9BC,EAAAA,EAAAA,KAAA,SACI1O,KAAK,OACL8S,UAAU,+BACVW,YAAY,GACZ,aAAW,aACXvG,MAAOjO,EACPyU,SAAU,SAACnC,GAAC,OAAKrS,EAAaqS,EAAEoC,OAAOzG,MAAM,EAC7C0G,UAAQ,EACRzF,MAAO,CAAE0F,cAAe,cAGhC3F,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,iBAC9BC,EAAAA,EAAAA,KAAA,SACI1O,KAAK,OACL8S,UAAU,+BACVW,YAAY,GACZ,aAAW,YACXvG,MAAO7N,EACPqU,SAAU,SAACnC,GAAC,OAAKjS,EAAYiS,EAAEoC,OAAOzG,MAAM,EAC5C0G,UAAQ,EACRzF,MAAO,CAAE0F,cAAe,cAGhC3F,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAOoF,QAAQ,cAAchB,UAAU,aAAYrE,SAAC,aACpDC,EAAAA,EAAAA,KAAA,SACI1O,KAAK,QACL8S,UAAU,+BACV7J,GAAG,cACHiE,MAAOrO,EAAOA,EAAKwJ,MAAQ,GAC3BuL,UAAQ,EACRzF,MAAO,CAAE0F,cAAe,cAGhC3F,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACrBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,qBAC9BC,EAAAA,EAAAA,KAAA,SACIzF,GAAG,oBACHjJ,KAAK,OACL8S,UAAU,+BACVW,YAAY,0BACZ,aAAW,eACXvG,MAAOrL,GACP6R,SAAU,SAACnC,GAAC,OAAKzP,GAAgByP,EAAEoC,OAAOzG,MAAM,QAGxDgB,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,YAAWrE,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,sBAC9BC,EAAAA,EAAAA,KAAA,SACIzF,GAAG,iBACHjJ,KAAK,OACL8S,UAAU,+BACVW,YAAY,4BACZ,aAAW,YACXvG,MAAOjL,GACPyR,SAAU,SAACnC,GAAC,OAAKrP,GAAQqP,EAAEoC,OAAOzG,MAAM,EACxC0G,UAAQ,EACRzF,MAAO,CAAE0F,cAAe,cAGhC3F,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,YAAWrE,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,8BAC9BC,EAAAA,EAAAA,KAAA,YACIzF,GAAG,mBACHjJ,KAAK,OACL8S,UAAU,eACViB,KAAK,IACLN,YAAY,kEACZvG,MAAO1K,GACPkR,SAAU,SAACnC,GAAC,OAAK9O,GAAe8O,EAAEoC,OAAOzG,MAAM,EAC/CiB,MAAO,CAAE6F,OAAQ,sBAmBjCtF,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,WAAUrE,UACzBP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,aAAYrE,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,gBAC5BP,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,2BAA0BrE,SAAA,EACxCP,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,gCAA+BrE,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAO1O,KAAK,QAAQ8S,UAAU,8BAA8B7J,GAAG,eAAeoB,KAAK,aAChFqJ,SAAU,kBAAMrQ,GAAiB,WAAW,EAC5C4Q,QAA2B,aAAlB7Q,MAEZ8K,EAAAA,EAAAA,MAAA,SAAO4E,UAAU,gDAAgDgB,QAAQ,gBAAerF,SAAA,CAAC,YAExFP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,IAAKC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,SAAA,EACzJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,2IACvDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,uHAInDT,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,+BAA8BrE,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAO1O,KAAK,QAAQ8S,UAAU,6BAA6B7J,GAAG,eAAeoB,KAAK,aAAkB4J,QAA2B,UAAlB7Q,GAA6BsQ,SAAU,kBAAMrQ,GAAiB,QAAQ,KACnL6K,EAAAA,EAAAA,MAAA,SAAO4E,UAAU,gDAAgDgB,QAAQ,gBAAerF,SAAA,CAAC,SAExFP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,IAAKC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,SAAA,EACzJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,2IACvDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,uHAInDT,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,+BAA8BrE,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAO1O,KAAK,QAAQ8S,UAAU,6BAA6B7J,GAAG,eAAeoB,KAAK,aAAkB4J,QAA2B,SAAlB7Q,GAC1GsQ,SAAU,kBAAMrQ,GAAiB,OAAO,KAC3C6K,EAAAA,EAAAA,MAAA,SAAO4E,UAAU,gDAAgDgB,QAAQ,gBAAerF,SAAA,CAAC,QAExFP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,IAAKC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,SAAA,EACzJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,2IACvDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,uHAInDT,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,+BAA8BrE,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAO1O,KAAK,QAAQ8S,UAAU,6BAA6B7J,GAAG,eAC1DgL,QAA2B,WAAlB7Q,GACbiH,KAAK,aACFqJ,SAAU,kBAAMrQ,GAAiB,SAAS,KAC7C6K,EAAAA,EAAAA,MAAA,SAAO4E,UAAU,gDAAgDgB,QAAQ,gBAAerF,SAAA,CAAC,UAExFP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,IAAKC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,SAAA,EACzJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,2IACvDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,uHAInDT,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,+BAA8BrE,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAO1O,KAAK,QAAQ8S,UAAU,6BAA6B7J,GAAG,eAC1DgL,QAA2B,SAAlB7Q,GACbiH,KAAK,aACFqJ,SAAU,kBAAMrQ,GAAiB,OAAO,KAC3C6K,EAAAA,EAAAA,MAAA,SAAO4E,UAAU,gDAAgDgB,QAAQ,gBAAerF,SAAA,CAAC,QAExFP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,IAAKC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,SAAA,EACzJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,2IACvDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,uHAInDT,EAAAA,EAAAA,MAAA,MAAI4E,UAAU,+BAA8BrE,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,SAAO1O,KAAK,QAAQ8S,UAAU,6BAC1BmB,QAA2B,YAAlB7Q,GACb6F,GAAG,eAAeoB,KAAK,aACpBqJ,SAAU,kBAAMrQ,GAAiB,UAAU,KAC9C6K,EAAAA,EAAAA,MAAA,SAAO4E,UAAU,gDAAgDgB,QAAQ,gBAAerF,SAAA,CAAC,WAExFP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,IAAKC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,SAAA,EACzJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,2IACvDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,sIAanDT,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,yBAAwBrE,SAAA,EACvCP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,eAAcrE,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WAEJP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,iBAAgBrE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACE1O,KAAK,OACLyT,YAAY,iBACZX,UAAU,eACV5F,MAAO3H,GACPmO,SAAU,SAACnC,GAAC,OAAK/L,GAAW+L,EAAEoC,OAAOzG,MAAM,KAE7CwB,EAAAA,EAAAA,KAAA,SACE1O,KAAK,OACLyT,YAAY,yBACZX,UAAU,eACV5F,MAAOhH,GACPwN,SAAU,SAACnC,GAAC,OAAKpL,GAAmBoL,EAAEoC,OAAOzG,MAAM,KAErDwB,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,4BAA4BI,QAAS,SAAC3B,GAAC,OAAKE,GAAcF,EAAE,EAAC9C,SAAC,iBAGlFC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,aAAYrE,SAC1B9I,GAAMkD,KAAI,SAACqL,EAAM7H,GAAK,OACrB6B,EAAAA,EAAAA,MAAA,OAAiB4E,UAAU,YAAWrE,SAAA,EACpCP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,kBAAiBrE,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,gBAAerE,UAC5BC,EAAAA,EAAAA,KAAA,KAAGyF,KAAMD,EAAKlL,IAAK2K,OAAO,SAASS,IAAI,sBAAqB3F,SAAEyF,EAAKlL,IAAIqL,QAAQ,eAAgB,QAEhGH,EAAK1R,cAAekM,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,wBAAuBrE,SAAEyF,EAAK1R,kBAEpEkM,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,kBAAkBI,QAAS,SAAC3B,GAAC,OAAKc,GAAiBd,EAAGlF,EAAM,EAACoC,SAAC,aAPxEpC,EAQJ,MAKPlH,KACCuJ,EAAAA,EAAAA,KAAA,OAAKoE,UAAS,eAAAtK,OAAiBrD,GAAiBnF,MAAQsU,KAAK,QAAO7F,SACjEtJ,GAAiBjF,cAKxBwO,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACFC,EAAAA,EAAAA,KAAA,OACEoE,UAAS,4BAAAtK,OAA8B7D,GAAiB,oBAAsB,IAC9E4P,YAAajD,GACbkD,WAAYlD,GACZmD,YAlXwB,SAAClD,GACvBA,EAAEC,iBACF5M,IAAkB,EACpB,EAgXA8P,OA9WmB,SAACnD,GAClBA,EAAEC,iBACF5M,IAAkB,GAClB,IAAMkF,EAAQyH,EAAEoD,aAAa7K,MAC7BH,GAAiBG,EACnB,EAyWmB2E,UAEnBP,EAAAA,EAAAA,MAAA,SAAO4F,QAAQ,sBAAsBhB,UAAU,uBAAsBrE,SAAA,EACnEC,EAAAA,EAAAA,KAAA,SACEzF,GAAG,sBACHjJ,KAAK,OACL8S,UAAU,uBACVY,SAAU,SAACnC,GAAC,OAAK5H,GAAiB4H,EAAEoC,OAAO7J,MAAM,EACjD8K,UAAQ,KAEV1G,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,iBAAgBrE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,sBAAqBrE,UAClCC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,EAAGC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAIG,UAClJC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,mSAGzDT,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,sBAAqBrE,SAAA,EACtCP,EAAAA,EAAAA,MAAA,OAAAO,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,kBAAiBrE,SAAC,gBAGhC,IAAI,KACF,QAEHC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,WAAUrE,SAAC,yBAO7B1J,KACC2J,EAAAA,EAAAA,KAAA,OAAKoE,UAAS,eAAAtK,OAAiBzD,GAAa/E,MAAQsU,KAAK,QAAO7F,SAC7D1J,GAAa7E,aAMfkE,IACGsK,EAAAA,EAAAA,KAACmG,EAAAA,EAAa,KAEdnG,EAAAA,EAAAA,KAAAoG,EAAAA,SAAA,CAAArG,SACGzK,GAAQ+K,MAAK,SAAA3B,GAAK,OAAKA,EAAMtE,SAAWsE,EAAMpE,GAAG,MAChD0F,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,0BAAyBrE,UACtCC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,oBAAmBrE,SAC/BzK,GAAQ6E,KAAI,SAACuE,EAAOf,GAEnB,OAAKe,EAAMtE,SAAWsE,EAAMpE,KAExBkF,EAAAA,EAAAA,MAAA,OAAiB4E,UAAU,eAAcrE,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SACE1O,KAAK,OACLyT,YAAY,cACZX,UAAU,4CACV5F,MAAOE,EAAMlE,OAAS,GACtBwK,SAAU,SAACnC,GAAC,OAAKtE,GAAkBsE,EAAEoC,OAAOzG,MAAOb,EAAM,EACzD0I,UAAW,SAACxD,GACI,UAAVA,EAAEyD,MACJzD,EAAEC,iBACFjE,GAAwBlB,GAE5B,IAIDe,EAAMpE,MACL0F,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,iBAAgBrE,UAC7BC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,YAAWrE,SAAEV,GAAYX,EAAMpE,UAIlD0F,EAAAA,EAAAA,KAAA,YACE1O,KAAK,OACLyT,YAAY,oBACZX,UAAU,4CACV5F,MAAOE,EAAM5K,YACbkR,SAAU,SAACnC,GAAC,OAAKjE,GAAwBiE,EAAEoC,OAAOzG,MAAOb,EAAM,KAEjE6B,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,gCAA+BrE,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,kBAAkBI,QAAS,SAAC3B,GAC5CA,EAAEC,iBACFjE,GAAwBlB,EAC1B,EAAEoC,SAAC,wBACHC,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,oBAAoBI,QAAS,SAAC3B,GAAQA,EAAEC,iBAAkBtF,GAAkBG,EAAQ,EAAEoC,SAAC,uBAlCnGpC,GAuCL,IAEX,UAQfrI,GAAQ+K,MAAK,SAAA3B,GAAK,OAAIA,EAAMtE,OAAO,MAClC4F,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,qBAAoBrE,UACjCC,EAAAA,EAAAA,KAACuG,EAAAA,EAAQ,CAAC,gBAAc,OAAMxG,SAC3BzK,GAAQ4I,QAAO,SAAAQ,GAAK,OAAIA,EAAMtE,OAAO,IAAED,KAAI,SAACuE,EAAOf,GAAK,OACvD6B,EAAAA,EAAAA,MAAC+G,EAAAA,EAASC,KAAI,CAAAzG,SAAA,CACXrB,EAAM+H,WACLzG,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,0BAAyBrE,UACtCC,EAAAA,EAAAA,KAACmG,EAAAA,EAAa,OAGhBnG,EAAAA,EAAAA,KAAA,OACEoE,UAAU,iBACVC,IAAK3F,EAAMpE,IACXgK,IAAG,WAAAxK,OAAa6D,EAAQ,MAI5B6B,EAAAA,EAAAA,MAAC+G,EAAAA,EAASG,QAAO,CAAA3G,SAAA,EACfC,EAAAA,EAAAA,KAAA,SACE1O,KAAK,OACLyT,YAAY,cACZX,UAAU,+BACV5F,MAAOE,EAAMlE,OAAS,GACtBwK,SAAU,SAACnC,GAAC,OAAKtE,GAAkBsE,EAAEoC,OAAOzG,MAAOE,EAAMnE,GAAG,KAE9DyF,EAAAA,EAAAA,KAAA,YACE1O,KAAK,OACLyT,YAAY,oBACZX,UAAU,oCACV5F,MAAOE,EAAM5K,YACbkR,SAAU,SAACnC,GAAC,OAAKjE,GAAwBiE,EAAEoC,OAAOzG,MAAOE,EAAMnE,GAAG,KAEpEiF,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,gCAA+BrE,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,UACEoE,UAAU,kBACVI,QAAS,SAAC3B,GACRA,EAAEC,iBACFjE,GAAwBlB,EAC1B,EAAEoC,SACH,oBAGDC,EAAAA,EAAAA,KAAA,UACEoE,UAAU,oBACVI,QAAS,SAAC3B,GACRA,EAAEC,iBACFtF,GAAkBG,EACpB,EAAEoC,SACH,mBA5CarB,EAAMnE,GAiDV,SAuBpBiF,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,mBAAkBrE,SAAA,EAEjCP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,eAAcrE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,yBAAwBrE,UACvCP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,UAASrE,SAAA,EAExBC,EAAAA,EAAAA,KAAA,MAAIoE,UAAU,YAAWrE,SAAC,aAC1BP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,aAC9BC,EAAAA,EAAAA,KAAA,SACAzF,GAAG,eACHjJ,KAAK,OACL8S,UAAU,+BACVW,YAAY,0BACZvG,MAAOrM,EACP6S,SAAU,SAACnC,GAAC,OAAKzQ,EAAWyQ,EAAEoC,OAAOzG,MAAM,QAG3CgB,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,UAC9BC,EAAAA,EAAAA,KAAA,SACAzF,GAAG,YACHjJ,KAAK,OACL8S,UAAU,+BACVW,YAAY,aACZvG,MAAOjM,EACPyS,SAAU,SAACnC,GAAC,OAAKrQ,EAAQqQ,EAAEoC,OAAOzG,MAAM,QAGxCgB,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,YAC9BC,EAAAA,EAAAA,KAAA,SACAzF,GAAG,cACHjJ,KAAK,OACL8S,UAAU,+BACVW,YAAY,SACZvG,MAAO7L,GACPqS,SAAU,SAACnC,GAAC,OAAKjQ,GAAUiQ,EAAEoC,OAAOzG,MAAM,QAG1CgB,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,WAAUrE,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOoE,UAAU,aAAYrE,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,SACAzF,GAAG,gBACHjJ,KAAK,OACL8S,UAAU,+BACVW,YAAY,WACZvG,MAAOzL,GACPiS,SAAU,SAACnC,GAAC,OAAK7P,GAAY6P,EAAEoC,OAAOzG,MAAM,aAK5CwB,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,4CAA2CrE,UAE1DP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,UAASrE,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIoE,UAAU,OAAMrE,SAAC,uBACrBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8FACHC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,OAAMrE,UACrBC,EAAAA,EAAAA,KAAA,SACF1O,KAAK,OACL8S,UAAU,+BACVW,YAAa4B,OAAOC,YAAc,IAAM,oBAAsB,iDAC9DpI,MAAOtK,GACP8Q,SAAU,SAACnC,GAAC,OAAK1O,GAAkB0O,EAAEoC,OAAOzG,MAAM,EAClD6H,UAAW,SAACxD,GACK,MAAVA,EAAEyD,KAAyB,UAAVzD,EAAEyD,KAA8C,KAA1BpS,GAAemP,SACzDR,EAAEC,iBAhpBqB,WACzB,GAA8B,KAA1B5O,GAAemP,QACfnO,GAAgBkL,OAAS,EAAK,CAClC,IAAMiC,EAAe,GAAAvI,QAAAoD,EAAAA,EAAAA,GAAOhI,IAAe,CAAEhB,GAAemP,SAC5DlO,GAAmBkN,GACnBlO,GAAkB,GAClB,CAEA,CAyoBE0S,GAEJ,EACAC,SAAU5R,GAAgBkL,OAAS9L,GAAS8L,QAjoBf,OAooB3BZ,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,gBAAerE,SAAA,CAC/B7K,GAAgBiF,KAAI,SAAC4M,EAASpJ,GAAK,OAClC6B,EAAAA,EAAAA,MAAA,OAAiBgF,QAAS,kBAAMpC,GAAoBzE,EAAM,EAAEyG,UAAU,qEAAoErE,SAAA,CACvIgH,GACD/G,EAAAA,EAAAA,KAAA,OAAKwE,QAAS,kBAAMpC,GAAoBzE,EAAM,EAAEgC,MAAM,6BAA+B8E,OAAO,UAAU/E,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,EAAGC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAKH,MAAO,CAAEuH,WAAY,QAASjH,UAC/OC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,6BAH/CtC,EAKJ,IAEPrJ,GAAS6F,KAAI,SAAC4M,EAASpJ,GAAK,OAC3B6B,EAAAA,EAAAA,MAAA,OAAiBgF,QAAS,kBAAMjC,GAAc5E,EAAM,EAAEyG,UAAU,qEAAoErE,SAAA,CACjIgH,GACD/G,EAAAA,EAAAA,KAAA,OAAKwE,QAAS,kBAAMjC,GAAc5E,EAAM,EAAEgC,MAAM,6BAA6B8E,OAAO,UAAU/E,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,EAAGC,OAAO,eAAe9E,OAAO,KAAKD,MAAM,KAAKH,MAAO,CAAEuH,WAAY,QAASjH,UACvOC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,6BAH/CtC,EAKJ,IAETzI,GAAgBkL,OAAS9L,GAAS8L,QArpBJ,IAspB7BJ,EAAAA,EAAAA,KAAA,KAAGoE,UAAU,UAASrE,SAAC,qEAMrBP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,OAAMrE,SAAA,EACrBC,EAAAA,EAAAA,KAAA,UACA1O,KAAK,SACL8S,UAAU,wBACVI,QAASvD,GAAkBlB,SAC1B,oBAGDP,EAAAA,EAAAA,MAAA,OAAAO,SAAA,CACsB,UAAvBpO,EAAcL,OACb0O,EAAAA,EAAAA,KAAA,KAAGoE,UAAU,WAAW3E,MAAO,CAAEC,MAAO,OAAQK,SAAEpO,EAAcN,OAE1C,YAAvBM,EAAcL,OACb0O,EAAAA,EAAAA,KAAA,KAAGoE,UAAU,WAAW3E,MAAO,CAAEC,MAAO,SAAUK,SAAEpO,EAAcN,4BAWjEyD,KACKkL,EAAAA,EAAAA,KAACiH,EAAAA,EAAY,CACTjW,YAAaA,EACbgB,kBAAmBA,EACnBkV,WA9qBS,WACjBnS,IAAe,GACf0N,IACF,EA4qBU1R,SAAUA,EACVyP,kBAAmBA,GACnB2G,iBArrBe,WACvBnV,GAAkB,EACpB,EAorBU7B,KAAMA,EACNiX,eAAe,yBAKzB,C,0HCz0BJ,IApNA,SAAqBtP,GAOjB,IANFoP,EAAUpP,EAAVoP,WACAnW,EAAQ+G,EAAR/G,SACAyP,EAAiB1I,EAAjB0I,kBACAxP,EAAW8G,EAAX9G,YACAb,EAAI2H,EAAJ3H,KACAiX,EAActP,EAAdsP,eAEArX,GAA0BC,EAAAA,EAAAA,UAASe,GAASd,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCsX,EAAKpX,EAAA,GAAEqX,EAAQrX,EAAA,GACtBI,GAAwCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCkX,GAAFjX,EAAA,GAAiBA,EAAA,IACpCG,GAAkDT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvC+W,GAAF9W,EAAA,GAAsBA,EAAA,IAC9CG,GAAgDb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAvD4W,EAAgB3W,EAAA,GAAE4W,EAAmB5W,EAAA,GAC5CG,GAA4BjB,EAAAA,EAAAA,UAAS,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAnC0L,EAAMzL,EAAA,GAAEyW,EAASzW,EAAA,GAClB0W,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAeD,EAAAA,EAAAA,QAAO,MAC5BzW,GAA8CpB,EAAAA,EAAAA,WAAS,GAAMuB,GAAArB,EAAAA,EAAAA,GAAAkB,EAAA,GAAtD2W,EAAexW,EAAA,GAAEyW,EAAkBzW,EAAA,IAQ5CmG,EAAAA,EAAAA,YAAU,WAIR,OAHAoK,SAASY,KAAKuF,UAAUC,IAAI,cAGrB,WACLpG,SAASY,KAAKuF,UAAUE,OAAO,aACjC,CACF,GAAG,IAED,IAAMlN,EAAmB,SAAC4H,GACxB,IAAMxH,EAAOwH,EAAEoC,OAAO7J,MAAM,GAG5B,GAFAmM,EAAgBlM,GAEZA,EAAM,CACRqM,EAAoBrM,EAAKM,MACzB,IAAMyM,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC1K,GACf0J,EAAS1J,EAAMqH,OAAOsD,OACxB,EACAH,EAAOI,cAAcnN,EACvB,CACF,EAMMoN,EAAY,eAAAvN,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkD,IAAA,IAAAuN,EAAAC,EAAAC,EAAArM,EAAAsM,EAAArM,EAAA,OAAAxE,EAAAA,EAAAA,KAAAY,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAC4B,KAAzC4P,EAA2B,QAArBD,EAAGd,EAAWkB,eAAO,IAAAJ,OAAA,EAAlBA,EAAoBK,aACxB,CAADrN,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EACW,IAAIkG,SAAQ,SAAC+J,GAAO,OAAKL,EAAOM,OAAOD,EAAS,aAAa,IAAE,KAAD,GAA3EJ,EAAIlN,EAAAtC,QAGFmD,GAAaM,EAAAA,EAAAA,IAAIC,EAAAA,GAAQ,iBAADhD,OAAmB2N,IAC3CoB,EAAW,CAAEK,YAAa,eAE1B1M,GAAaO,EAAAA,EAAAA,IAAqBR,EAAYqM,EAAMC,IAE/CM,GACT,iBACA,SAAC1M,GACC,IAEF,SAACT,GACC,IAEF,YAEEgB,EAAAA,EAAAA,IAAeR,EAAWC,SAASI,KAAKgE,KAAI,eAAAzE,GAAArE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOuD,GAAW,OAAAzD,EAAAA,EAAAA,KAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACzD0C,EAAY,CAAD5C,EAAAE,KAAA,eAAAF,EAAAE,KAAA,GAEPoG,EAAAA,EAAAA,IAAUxC,EAAQ,CAAE5L,SAAU0K,IAAe,KAAD,EAClD+E,EAAkB/E,GAClBuM,GAAmB,GACnB/L,YAAW,WACT+L,GAAmB,EACrB,GAAG,KAAM,wBAAAnP,EAAAgC,OAAA,GAAA3C,EAAA,KAEZ,gBAAA4C,GAAA,OAAAsB,EAAArB,MAAA,KAAAC,UAAE,CAAF,CAV2C,GAW9C,KAEH,wBAAAU,EAAAb,OAAA,GAAAM,EAAA,KAEJ,kBApCiB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAuCZoO,EAAiB,eAAA3L,GAAA1F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoE,IAAA,IAAAgN,EAAA,OAAArR,EAAAA,EAAAA,KAAAY,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,WACpB5I,IAAQA,EAAK+I,IAAG,CAAA0D,EAAA7D,KAAA,QAC+B,OAA3CsQ,EAAe,GAAAvP,OAAMgL,GAAsB,0BAAAlI,EAAA7D,KAAA,GAC3CoG,EAAAA,EAAAA,IAAUxC,EAAQ,CAAE5L,SAAUsY,IAAmB,KAAD,EACtDrY,EAAYqY,GACZ7B,GAAqB,GAAO,wBAAA5K,EAAA/B,OAAA,GAAAwB,EAAA,KAE/B,kBAPsB,OAAAoB,EAAA1C,MAAA,KAAAC,UAAA,KAgCvB,OAtBAtD,EAAAA,EAAAA,YAAU,WACRoQ,EAAagB,QAAUhH,SAASwH,cAAc,SAC9CxB,EAAagB,QAAQxX,KAAO,OAC5BwW,EAAagB,QAAQS,OAAS,UAC9BzB,EAAagB,QAAQU,iBAAiB,SAAUvO,GAEhD,IAAM7C,GAAaY,EAAAA,EAAAA,IAAIC,EAAAA,GAAWmO,EAAgBjX,EAAK+I,KACvDyO,EAAUvP,GAEV,IAIMT,GAAcoC,EAAAA,EAAAA,IAAW3B,GAAY,SAACY,GAAS,IAADyQ,GAJvB,SAAChI,GAC5B6F,EAAS7F,EACX,CAIEiI,CAD8B,QAAbD,EAAGzQ,EAAIM,cAAM,IAAAmQ,OAAA,EAAVA,EAAY1Y,SAElC,IAEA,OAAO,kBAAM4G,GAAc,CAC7B,GAAG,CAACxH,EAAK+I,IAAKkO,KAIhBpH,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,gBAAerE,UAC9BP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,YAAWrE,SAAA,EAC1BP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,cAAarE,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEkK,YAAa,QAAS5J,SAAC,mBACrCC,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,WAAWI,QAAS0C,EAAWnH,UACrDC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BO,KAAK,OAAOJ,QAAQ,YAAa6E,OAAO,QAAQD,YAAY,MAAON,UAAS,sBAAwBrE,UACpIC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,iCAI3DD,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,cAAarE,UAC5BC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,wBAAuBrE,UACpCC,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,2CAA0CrE,SAGtDsH,GACCrH,EAAAA,EAAAA,KAAC4J,EAAAA,IAAO,CACN/M,IAAK+K,EACLvD,IAAKgD,EACLwC,iBAAkBC,EAAAA,IAClBC,aAAc,CACZC,MAAM,EACNC,SAAU,CACRC,WAAW,EACXC,OAAO,EACPC,WAAW,EACXC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,WAAW,EACXC,MAAM,MAKV,YAORjL,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,8BAA6BrE,SAAA,EAChDC,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,WAAWI,QAvHN,WACrBsD,EAAagB,QAAQ4B,OACvB,EAqHqD3K,UACnDP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,iBAAgBrE,SAAA,EAC/BP,EAAAA,EAAAA,MAAA,OAAKG,MAAM,6BAA6BO,KAAK,OAAOJ,QAAQ,YAAY6E,OAAO,QAAQD,YAAY,MAAMN,UAAS,sBAAwBrE,SAAA,EAClIC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,uWACrDD,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,sFACjD,kBAKdD,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,WAAWI,QAASiE,EAAa1I,UAC7CP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,iBAAgBrE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BO,KAAK,OAAOJ,QAAQ,YAAY6E,OAAO,QAAQD,YAAY,MAAMN,UAAS,sBAAwBrE,UAC1IC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,iHAC/C,oBAOT8H,IACL/H,EAAAA,EAAAA,KAAA,OAAKoE,UAAU,sBAAqBrE,UAClCC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BD,MAAM,UAAUQ,KAAK,OAAOJ,QAAQ,YAAY4E,YAAa,EAAGC,OAAO,eAAc5E,UAC3HC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,+BAOzDD,EAAAA,EAAAA,KAAA,UAAQoE,UAAU,WAAWI,QAAS4E,EAAkBrJ,UACtDP,EAAAA,EAAAA,MAAA,OAAK4E,UAAU,iBAAgBrE,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKL,MAAM,6BAA6BO,KAAK,OAAOJ,QAAQ,YAAY6E,OAAO,QAAQD,YAAY,MAAMN,UAAS,sBAAwBrE,UACxIC,EAAAA,EAAAA,KAAA,QAAM4E,cAAc,QAAQC,eAAe,QAAQ5E,EAAE,8ZACjD,2BAUZ,C","sources":["Users/ExpertProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, firestore, storage } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteDoc, setDoc, collection, onSnapshot, addDoc, getDocs  } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL,deleteObject } from \"firebase/storage\";\nimport { updateProfile } from 'firebase/auth';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport LoadingCircle from '../components/LoadingCircle';\n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\nconst [selectedLabel, setSelectedLabel] = useState('');\nconst [isModalOpen, setIsModalOpen] = useState(false);\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [gallery, setGallery] = useState([]);\nconst [isLoadingGallery, setIsLoadingGallery] = useState(false); // State variable for gallery loading state\nconst [isLoadingCarousel, setIsLoadingCarousel] = useState(false);\nconst [isDraggingFile, setIsDraggingFile] = useState(false);\nconst [uploadStatus, setUploadStatus] = useState(null);\n\nconst [uploadStatusLink, setUploadStatusLink] = useState(null);\n\nconst [linkUrl, setLinkUrl] = useState('');\nconst [links, setLinks] = useState([]);\nconst [isLoadingLinks, setIsLoadingLinks] = useState(false);\nconst [linkDescription, setLinkDescription] = useState(''); \n\nuseEffect(() => {\n  const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      setUser(authUser);\n\n      const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        setPhotoURL(userData.photoURL || authUser.photoURL);\n        setFirstName(userData.first_name || (authUser.displayName ? authUser.displayName.split(' ')[0] : ''));\n        setLastName(userData.last_name || (authUser.displayName ? authUser.displayName.split(' ')[1] : ''));\n        setAddress(userData.address || '');\n        setCity(userData.city || '');\n        setCounty(userData.county || '');\n        setPostcode(userData.postcode || '');\n        setMobileNumber(userData.mobileNumber || '');\n        setRole(userData.occupation || '');\n        setEmail(authUser.email); // Set email from authUser\n        setDescription(userData.description || '');\n        setSelectedLabel(userData.labels || '');\n      } else {\n        setPhotoURL(authUser.photoURL);\n      }\n\n      const userImagesCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/files`);\n\n      const unsubscribeSnapshot = onSnapshot(userImagesCollectionRef, (querySnapshot) => {\n        const galleryList = querySnapshot.docs.map((doc) => {\n          const data = doc.data();\n          const isImage = /\\.(jpeg|jpg|gif|png|webp|svg)$/i.test(data.url.split('?')[0]);\n          return { id: doc.id, url: data.url, description: data.description || '', title: data.title || '', isImage };\n        });\n\n        console.log('Gallery List:', galleryList); // Log galleryList to verify the data structure\n        setGallery(galleryList);\n      });\n\n      // Fetch links data from Firestore\n      const userLinksCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/links`);\n      const linksSnapshot = await getDocs(userLinksCollectionRef);\n\n      const linksData = linksSnapshot.docs.map((doc) => {\n        const data = doc.data();\n        return { id: doc.id, url: data.url, description: data.description };\n      });\n\n      setLinks(linksData);\n\n      return () => {\n        unsubscribeSnapshot();\n      };\n    } else {\n      setAddress('');\n      setCity('');\n      setCounty('');\n      setPostcode('');\n      setMobileNumber('');\n      setPhotoURL(null);\n      setEmail(''); // Clear email\n      setRole('');\n      setDescription('');\n      setLinks([]); // Clear links if not authenticated\n    }\n  });\n\n  return unsubscribe;\n}, []);\n\n\nconst handleFileUpload = async (files, title) => {\n  const file = files[0];\n  const description = \"\"; // Replace with actual description or user input\n  const fileName = title || file.name; // Use title as filename if provided, otherwise use the original filename\n  const userFilesCollectionRef = collection(firestore, `expertApplications/${user.uid}/files`);\n  // Check if file size exceeds the limit (1MB)\n  if (file.size > 1 * 1024 * 1024) {\n    setUploadStatus({ type: 'error', message: 'File size exceeds the limit (1MB).' });\n    return; // Abort file upload\n  }\n  try {\n    const scaledFile = file.size > 1 * 1024 * 1024 ? await scaledFile(file) : file;\n    const downloadURL = await uploadFile(scaledFile, description, fileName, userFilesCollectionRef); // Pass title and file name\n    console.log('Download URL:', downloadURL);\n    setUploadStatus({ type: 'success', message: 'File uploaded successfully!' });\n  } catch (error) {\n    console.error('Error processing file:', error);\n    setUploadStatus({ type: 'error', message: 'Error uploading file. Please try again.' });\n  }\n\n  // Clear upload status message after 3 seconds\n  setTimeout(() => {\n    setUploadStatus(null);\n  }, 3000);\n};\n\nconst uploadFile = async (file, description, fileName, collectionRef) => {\n  const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n\n  try {\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    const snapshot = await uploadTask;\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    const uploadedFiles = { id: fileName, url: downloadURL, description, title: '' }; // Set title to empty string\n    setGallery(prevGallery => [...prevGallery, uploadedFiles]);\n    const docRef = doc(collectionRef, fileName);\n    await setDoc(docRef, { url: downloadURL, description, title: '' }); // Set title to empty string\n\n    console.log(\"Files uploaded and stored successfully\");\n    return downloadURL;\n  } catch (error) {\n    console.error('Error uploading Files:', error);\n  }\n};\n\n\nconst handleRemovePhoto = async (index, event) => {\n  try {\n    console.log('Gallery before removal:', gallery); // Log entire gallery array\n    const files = gallery[index];\n    console.log(' object:', files); \n    if (!files) {\n      console.error('Error removing photo:  not found in gallery');\n      return;\n    }\n    const fileName = files.id;\n    console.log(' name:', fileName); \n    const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n    await deleteObject(storageRef);\n    console.log(' removed successfully from Storage');\n    const docPath = `expertApplications/${user.uid}/files/${fileName}`;\n    console.log('Firestore document path:', docPath); // Log Firestore document path\n    const docRef = doc(firestore, docPath);\n    await deleteDoc(docRef);\n    console.log('Document removed successfully from Firestore');\n    const updatedGallery = gallery.filter((_, i) => i !== index);\n    console.log('Updated gallery:', updatedGallery); // Log updated gallery\n    setGallery(updatedGallery);\n  } catch (error) {\n    console.error('Error removing photo:', error);\n  }\n};\n\nconst handleTitleChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, title: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n\nconst handleDescriptionChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, description: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n \nconst handleUploadDescription = async (index) => {\n  const photo = gallery[index];\n  const docRef = doc(collection(firestore, `expertApplications/${user.uid}/files`), photo.id); // Use photo.id (image name) as document ID\n  try {\n    await Promise.all([\n      updateDoc(docRef, { description: photo.description, title: photo.title }), // Update both description and title\n    ]);\n    console.log(\"Description and title updated successfully in Firestore\");\n  } catch (error) {\n    console.error('Error updating description and title:', error);\n  }\n};\n\nconst getFileIcon = (fileName) => {\n if (!fileName) return null;\n\n  const fileNameWithoutParams = fileName.split('?')[0];\n  const extension = fileNameWithoutParams.split('.').pop().toLowerCase();\n\n  switch (extension) {\n    case 'pdf':\n      return <svg style={{ color: \"red\" }}xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 14 16\"> <path d=\"M5.523 12.424c.14-.082.293-.162.459-.238a7.878 7.878 0 0 1-.45.606c-.28.337-.498.516-.635.572a.266.266 0 0 1-.035.012.282.282 0 0 1-.026-.044c-.056-.11-.054-.216.04-.36.106-.165.319-.354.647-.548zm2.455-1.647c-.119.025-.237.05-.356.078a21.148 21.148 0 0 0 .5-1.05 12.045 12.045 0 0 0 .51.858c-.217.032-.436.07-.654.114zm2.525.939a3.881 3.881 0 0 1-.435-.41c.228.005.434.022.612.054.317.057.466.147.518.209a.095.095 0 0 1 .026.064.436.436 0 0 1-.06.2.307.307 0 0 1-.094.124.107.107 0 0 1-.069.015c-.09-.003-.258-.066-.498-.256zM8.278 6.97c-.04.244-.108.524-.2.829a4.86 4.86 0 0 1-.089-.346c-.076-.353-.087-.63-.046-.822.038-.177.11-.248.196-.283a.517.517 0 0 1 .145-.04c.013.03.028.092.032.198.005.122-.007.277-.038.465z\" fill=\"red\"></path> <path fill-rule=\"evenodd\" d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3zM4.165 13.668c.09.18.23.343.438.419.207.075.412.04.58-.03.318-.13.635-.436.926-.786.333-.401.683-.927 1.021-1.51a11.651 11.651 0 0 1 1.997-.406c.3.383.61.713.91.95.28.22.603.403.934.417a.856.856 0 0 0 .51-.138c.155-.101.27-.247.354-.416.09-.181.145-.37.138-.563a.844.844 0 0 0-.2-.518c-.226-.27-.596-.4-.96-.465a5.76 5.76 0 0 0-1.335-.05 10.954 10.954 0 0 1-.98-1.686c.25-.66.437-1.284.52-1.794.036-.218.055-.426.048-.614a1.238 1.238 0 0 0-.127-.538.7.7 0 0 0-.477-.365c-.202-.043-.41 0-.601.077-.377.15-.576.47-.651.823-.073.34-.04.736.046 1.136.088.406.238.848.43 1.295a19.697 19.697 0 0 1-1.062 2.227 7.662 7.662 0 0 0-1.482.645c-.37.22-.699.48-.897.787-.21.326-.275.714-.08 1.103z\" fill=\"red\"></path> </svg>\n          case 'doc':\n    case 'docx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 110.031 107.5\"><path d=\"M57.505 0h7.475v10c13.375.075 26.738-.138 40.101.075 2.85-.288 5.087 1.925 4.825 4.775.212 24.625-.05 49.262.125 73.887-.125 2.525.25 5.325-1.213 7.562-1.825 1.3-4.188 1.138-6.312 1.237-12.514-.061-25.014-.036-37.526-.036v10h-7.812c-19.024-3.475-38.1-6.662-57.162-10-.013-29.162 0-58.325 0-87.475C19.167 6.675 38.343 3.413 57.506 0z\" fill=\"#2a5699\"/><path d=\"M64.98 13.75h41.25v80H64.98v-10h32.5v-5h-32.5V72.5h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V50h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V27.5h32.5v-5h-32.5v-8.75zM25.83 35.837c2.375-.137 4.75-.237 7.125-.362 1.662 8.438 3.362 16.862 5.162 25.262 1.413-8.675 2.976-17.325 4.487-25.987 2.5-.087 5-.225 7.488-.375-2.825 12.112-5.3 24.325-8.388 36.362-2.088 1.088-5.213-.05-7.688.125-1.663-8.274-3.6-16.5-5.088-24.812-1.462 8.075-3.362 16.075-5.037 24.101-2.4-.125-4.812-.275-7.226-.438-2.074-11-4.512-21.925-6.449-32.95 2.137-.1 4.287-.188 6.425-.263 1.287 7.962 2.75 15.888 3.875 23.862 1.765-8.174 3.564-16.349 5.314-24.525z\" fill=\"#fff\"/></svg>;\n    case 'xls':\n    case 'xlsx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.037 107.5\"><path d=\"M57.55 0h7.425v10c12.513 0 25.025.025 37.537-.038 2.113.087 4.438-.062 6.275 1.2 1.287 1.85 1.138 4.2 1.225 6.325-.062 21.7-.037 43.388-.024 65.075-.062 3.638.337 7.35-.425 10.938-.5 2.6-3.625 2.662-5.713 2.75-12.95.037-25.912-.025-38.875 0v11.25h-7.763c-19.05-3.463-38.138-6.662-57.212-10V10.013C19.188 6.675 38.375 3.388 57.55 0z\" fill=\"#207245\"/><path d=\"M64.975 13.75h41.25V92.5h-41.25V85h10v-8.75h-10v-5h10V62.5h-10v-5h10v-8.75h-10v-5h10V35h-10v-5h10v-8.75h-10v-7.5z\" fill=\"#fff\"/><path d=\"M79.975 21.25h17.5V30h-17.5v-8.75z\" fill=\"#207245\"/><path d=\"M37.025 32.962c2.825-.2 5.663-.375 8.5-.512a2607.344 2607.344 0 0 1-10.087 20.487c3.438 7 6.949 13.95 10.399 20.95a716.28 716.28 0 0 1-9.024-.575c-2.125-5.213-4.713-10.25-6.238-15.7-1.699 5.075-4.125 9.862-6.074 14.838-2.738-.038-5.476-.15-8.213-.263C19.5 65.9 22.6 59.562 25.912 53.312c-2.812-6.438-5.9-12.75-8.8-19.15 2.75-.163 5.5-.325 8.25-.475 1.862 4.888 3.899 9.712 5.438 14.725 1.649-5.312 4.112-10.312 6.225-15.45z\" fill=\"#fff\"/><path d=\"M79.975 35h17.5v8.75h-17.5V35zM79.975 48.75h17.5v8.75h-17.5v-8.75zM79.975 62.5h17.5v8.75h-17.5V62.5zM79.975 76.25h17.5V85h-17.5v-8.75z\" fill=\"#207245\"/></svg>;\n    case 'ppt':\n    case 'pptx':\n      return<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.031 107.5\"><path d=\"M57.893 0h7.087v11.25c13.363.075 26.738-.138 40.088.062 2.875-.275 5.125 1.962 4.838 4.837.212 23.35-.05 46.712.125 70.075-.125 2.525.25 5.325-1.2 7.562-1.825 1.325-4.2 1.15-6.338 1.25-12.5-.062-25-.037-37.513-.037v12.5h-7.774c-19.05-3.475-38.138-6.65-57.2-10-.013-29.162 0-58.325 0-87.475C19.292 6.688 38.58 3.288 57.893 0z\" fill=\"#d24625\"/><path d=\"M64.98 15h41.25v76.25H64.98v-10h30v-5h-30V70h30v-5H64.993c-.013-2.45-.013-4.9-.024-7.35 4.95 1.537 10.587 1.5 15.012-1.476 4.788-2.837 7.288-8.25 7.7-13.65-5.487-.038-10.975-.025-16.45-.025-.012-5.438.062-10.875-.112-16.3-2.05.4-4.1.825-6.138 1.262V15z\" fill=\"#fff\"/><path d=\"M73.743 23.587c8.688.4 15.987 7.712 16.45 16.375-5.488.063-10.975.038-16.463.038 0-5.475-.012-10.95.013-16.413z\" fill=\"#d24625\"/><path d=\"M20.055 33.025c6.788.325 15.013-2.688 20.638 2.4 5.388 6.538 3.963 18.562-4.025 22.476-2.837 1.449-6.087 1.25-9.175 1.149-.013 4.888-.024 9.775-.013 14.663a1323.27 1323.27 0 0 0-7.438-.625c-.112-13.351-.136-26.713.013-40.063z\" fill=\"#fff\"/><path d=\"M27.48 39.788c2.463-.113 5.513-.562 7.176 1.75 1.425 2.45 1.35 5.675.162 8.2-1.425 2.575-4.65 2.325-7.138 2.625-.263-4.188-.237-8.376-.2-12.575z\" fill=\"#d24625\"/></svg>;\n    default:\n      return null; \n  }\n};\n\nuseEffect(() => {\n  const isGalleryLoading = gallery.length === 0 || gallery.some(photo => photo.isUploading);\n  setIsLoadingGallery(isGalleryLoading);\n\n  const isCarouselLoading = gallery.filter(photo => photo.isImage).length === 0 || gallery.some(photo => photo.isUploading);\n  setIsLoadingCarousel(isCarouselLoading);\n}, [gallery]);\n\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n  updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      console.error('Error updating profile photo:', error);\n    });\n};\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; \n        const customURLStatus = userData.customURL || false;\n        const existingPoints = userData.points || 0;\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus,\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints,\n          labels: selectedLabel, \n        });\n        setPreviousPhotoRef(null);\n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n          setSelectedLabel(userData.labels || '');\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 6  ) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n    const MAX_KEYWORDS_LIMIT = 5; \n    const handleImageClick = () => {\n      console.log('Image clicked');\n      setIsModalOpen(true);\n    };\n\n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n    const enableScroll = () => {\n      document.body.style.overflow = '';\n    };\n  \n    const handleDragEnter = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(true);\n    };\n  \n    const handleDragLeave = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n    };\n  \n    const handleDrop = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n      const files = e.dataTransfer.files;\n      handleFileUpload(files);\n    };\n\n    const handleAddLink = async (e) => {\n      e.preventDefault(); // Prevent default form submission behavior\n      if (!linkUrl.trim() || !linkDescription.trim()) {\n        return;\n      }\n      try {\n        setIsLoadingLinks(true);\n        const formattedUrl = linkUrl.startsWith('http://') || linkUrl.startsWith('https://') ? linkUrl : `https://${linkUrl}`;\n        const userLinksCollectionRef = collection(firestore, `expertApplications/${user.uid}/links`);\n        const docRef = await addDoc(userLinksCollectionRef, { url: formattedUrl, description: linkDescription });\n        const newLink = { id: docRef.id, url: formattedUrl, description: linkDescription };\n        setLinks([...links, newLink]); // Update links state with the new link\n        setLinkUrl('');\n        setLinkDescription(''); // Clear the description field after adding the link\n        setUploadStatusLink({ type: 'success', message: 'Link added successfully!', context: 'links' });\n      } catch (error) {\n        console.error('Error adding link:', error);\n        setUploadStatusLink({ type: 'error', message: 'Error adding link. Please try again.' });\n      } finally {\n        setIsLoadingLinks(false);\n      }\n      // Clear upload status message after 3 seconds\n      setTimeout(() => {\n        setUploadStatusLink(null);\n      }, 3000);\n    };\n    \n    \n    \n    const handleRemoveLink = async (e, index) => {\n      e.preventDefault(); // Prevent default form submission behavior\n      try {\n        setIsLoadingLinks(true);\n        const linkId = links[index].id;\n        const linkDocRef = doc(firestore, `expertApplications/${user.uid}/links`, linkId);\n        await deleteDoc(linkDocRef);\n        const updatedLinks = links.filter((_, i) => i !== index);\n        setLinks(updatedLinks);\n        setUploadStatusLink({ type: 'success', message: 'Link removed successfully!', context: 'links' });\n      } catch (error) {\n        console.error('Error removing link:', error);\n        setUploadStatusLink({ type: 'error', message: 'Error removing link. Please try again.' });\n      } finally {\n        setIsLoadingLinks(false);\n      }\n      // Clear upload status message after 3 seconds\n      setTimeout(() => {\n        setUploadStatusLink(null);\n      }, 3000);\n    };\n    \n    \n    \n    \n    \n    \n    \n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n      </div>\n    </div>\n  )}\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n      </div>\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n    </div>\n    <h3>My Profile</h3>\n    <hr />\n    <form className=\"file-upload\">\n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-12 col-12\">\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <div className=\"col-md-8\">\n        <h4 className=\"mb-4\">General information</h4>\n        <div className=\"col-md-12\">\n    <div className=\"row g-3\">\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">First Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"First name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Last Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"Last name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n            <input\n                type=\"email\"\n                className=\"form-control form-control-lg\"\n                id=\"inputEmail4\"\n                value={user ? user.email : ''}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Mobile number *</label>\n            <input\n                id=\"inputMobileNumber\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your Phone number\"\n                aria-label=\"Phone number\"\n                value={mobileNumber}\n                onChange={(e) => setMobileNumber(e.target.value)}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Role/Expertise *</label>\n            <input\n                id=\"inputExpertise\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your role/expertise\"\n                aria-label=\"your Role\"\n                value={occupation}\n                onChange={(e) => setRole(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Description of Expertise</label>\n            <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                className=\"form-control\"\n                rows=\"4\"\n                placeholder=\"Enter a brief description of your expertise or how you can help\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ resize: 'none' }}\n            />\n        </div>\n\n        \n \n  \n\n\n\n\n\n\n\n\n\n    </div>\n</div>\n</div>\n<div className=\"col-md-4\">\n<div className=\"form-group\">\n<label className=\"form-label\">Categories</label>\n  <ul className=\"listcard expert-listcard\">\n  <li className=\"form-check expert-form-check \">\n      <input type=\"radio\" className=\"form-check-input listboxes \" id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Computer')}\n         checked={selectedLabel === 'Computer'} \n      />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Computer\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Sport'}   onChange={() => setSelectedLabel('Sport')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Sport\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Food'} \n         onChange={() => setSelectedLabel('Food')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Food\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Health'} \n      name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Health')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Health\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Work'} \n      name=\"jobSuccess\"\n         onChange={() => setSelectedLabel('Work')} />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Work\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\"\n          checked={selectedLabel === 'Hobbies'} \n      id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Hobbies')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Hobbies\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n  </ul>\n</div>\n    </div>\n</div>\n    \n    </div>\n    </div>\n\n\n    <div className=\"card-body card-profile\">\n    <div className=\"link-section\">\n  <h4>Links</h4>\n\n  <div className=\"link-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter link URL\"\n      className=\"form-control\"\n      value={linkUrl}\n      onChange={(e) => setLinkUrl(e.target.value)}\n    />\n    <input\n      type=\"text\"\n      placeholder=\"Enter link description\"\n      className=\"form-control\"\n      value={linkDescription}\n      onChange={(e) => setLinkDescription(e.target.value)}\n    />\n    <button className=\"btn btn-primary mt-2 mb-2\" onClick={(e) => handleAddLink(e)}>Add Link</button>\n  </div>\n\n  <div className=\"links-list\">\n  {links.map((link, index) => (\n    <div key={index} className=\"link-item\">\n      <div className=\"links-container\">\n        <div className=\"url-container\">\n          <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.url.replace(/^https?:\\/\\//, '')}</a>\n        </div>\n        {link.description && <div className=\"description-container\">{link.description}</div>}\n      </div>\n      <button className=\"btn remove-link\" onClick={(e) => handleRemoveLink(e, index)}>❌</button>\n    </div>\n  ))}\n</div>\n\n  {/* Upload status message for links */}\n  {uploadStatusLink && (\n    <div className={`alert alert-${uploadStatusLink.type}`} role=\"alert\">\n      {uploadStatusLink.message}\n    </div>\n  )}\n</div>\n\n<h4>File Gallery</h4>\n  <div\n    className={`upload-container-profile ${isDraggingFile ? 'drag-over-profile' : ''}`}\n    onDragEnter={handleDragEnter}\n    onDragOver={handleDragEnter} // This line is crucial for triggering the drag enter event\n    onDragLeave={handleDragLeave}\n    onDrop={handleDrop}\n  >\n    <label htmlFor=\"file-upload-profile\" className=\"upload-label-profile\">\n      <input\n        id=\"file-upload-profile\"\n        type=\"file\"\n        className=\"upload-field-profile\"\n        onChange={(e) => handleFileUpload(e.target.files)}\n        multiple\n      />\n      <div className=\"upload-wrapper\">\n        <div className=\"upload-icon-profile\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n          </svg>\n        </div>\n        <div className=\"upload-text-profile\">\n      <div>\n      <div className=\"choosefile mt-2\">\n        Choose file \n      </div>\n      {' '}\n      or{' '}\n      </div>\n      <div className=\"draghere\">\n        drag here\n      </div>\n    </div>\n      </div>\n    </label>\n  </div>\n  {uploadStatus && (\n    <div className={`alert alert-${uploadStatus.type}`} role=\"alert\">\n      {uploadStatus.message}\n    </div>\n  )}\n</div>\n\n\n    {isLoadingGallery ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          {gallery.some(photo => !photo.isImage && photo.url) && (\n            <div className=\"carousel-container mb-4\">\n              <div className=\"gallery-container\">\n                {gallery.map((photo, index) => {\n                  // Render the gallery item only if there is a file and it's not an image\n                  if (!photo.isImage && photo.url) {\n                    return (\n                      <div key={index} className=\"gallery-item\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Enter title\"\n                          className=\"form-control form-control-lg borderradius\"\n                          value={photo.title || ''}\n                          onChange={(e) => handleTitleChange(e.target.value, index)}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              handleUploadDescription(index);\n                            }\n                          }}\n                        />\n\n                        {/* Render the file-container only if there is a file */}\n                        {photo.url && (\n                          <div className=\"file-container\">\n                            <div className=\"file-icon\">{getFileIcon(photo.url)}</div>\n                          </div>\n                        )}\n\n                        <textarea\n                          type=\"text\"\n                          placeholder=\"Enter description\"\n                          className=\"form-control form-control-lg borderradius\"\n                          value={photo.description}\n                          onChange={(e) => handleDescriptionChange(e.target.value, index)}\n                        />\n                        <div className='button-container-profile mt-2'>\n                          <button className=\"btn btn-primary\" onClick={(e) => { \n                            e.preventDefault(); // Prevent default form submission behavior\n                            handleUploadDescription(index); // Call the function to handle description upload\n                          }}>Upload Description</button>\n                          <button className=\"btn btn-secondary\" onClick={(e) => { e.preventDefault(); handleRemovePhoto(index); }}>❌ Remove</button>\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return null; // Don't render anything if there is no file or it's an image\n                  }\n                })}\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n\n{gallery.some(photo => photo.isImage) && (\n  <div className=\"carousel-container\">\n    <Carousel data-bs-theme=\"dark\">\n      {gallery.filter(photo => photo.isImage).map((photo, index) => (\n        <Carousel.Item key={photo.id}>\n          {photo.isLoading ? (\n            <div className=\"image-loading-container\">\n              <LoadingCircle />\n            </div>\n          ) : (\n            <img\n              className=\"carousel-image\"\n              src={photo.url}\n              alt={`Gallery ${index + 1}`}\n \n            />\n          )}\n          <Carousel.Caption>\n            <input\n              type=\"text\"\n              placeholder=\"Enter title\"\n              className=\"form-control form-control-lg\"\n              value={photo.title || ''}\n              onChange={(e) => handleTitleChange(e.target.value, photo.id)}\n            />\n            <textarea\n              type=\"text\"\n              placeholder=\"Enter description\"\n              className=\"form-control form-control-lg mb-2\"\n              value={photo.description}\n              onChange={(e) => handleDescriptionChange(e.target.value, photo.id)}\n            />\n            <div className='button-container-profile mt-2'>\n              <button\n                className=\"btn btn-primary\"\n                onClick={(e) => {\n                  e.preventDefault(); // Prevent default form submission behavior\n                  handleUploadDescription(index);\n                }}\n              >\n                Upload Changes\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={(e) => {\n                  e.preventDefault(); // Prevent default form submission behavior\n                  handleRemovePhoto(index);\n                }}\n              >\n               Remove\n              </button>\n            </div>\n          </Carousel.Caption>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  </div>\n)}\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n    <div className=\"col-xl-12 col-12\">\n   \n    <div className=\"pt-5 rounded\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    \n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n   \n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n    <div className=\"me-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n    </div>\n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n    </div>\n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    </div>\n    </div>\n   \n    </div>\n    </form>\n    </div>\n    </div>\n    </div>\n    {isModalOpen && (\n          <ImageCropper\n              setPhotoURL={setPhotoURL}\n              setImageLoadError={setImageLoadError}\n              closeModal={closeModal}\n              photoURL={photoURL}\n              handleImageUpload={handleImageUpload}\n              handleImageError={handleImageError}\n              user={user}\n              collectionName=\"expertApplications\"\n            />\n      )}\n    </div>\n    );\n    }\nexport default ExpertProfile;\n","import React, { useState, useRef, useEffect } from 'react'; // Import React and useState\nimport { CropperRef, Cropper, CircleStencil } from 'react-advanced-cropper';\nimport 'react-advanced-cropper/dist/style.css';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { doc, getDoc, updateDoc, deleteField, setDoc, onSnapshot } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\n\nfunction ImageCropper({\n  closeModal,\n  photoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n}) {\n  const [image, setImage] = useState(photoURL);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDeleteConfirmed, setIsDeleteConfirmed] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null); // Added local state for the document reference\n  const cropperRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [isUploadSuccess, setIsUploadSuccess] = useState(false);\n\n  const CustomCheckmark = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n);\n\nuseEffect(() => {\n  document.body.classList.add('modal-open');\n\n  // Cleanup: Remove 'modal-open' class when the modal is closed\n  return () => {\n    document.body.classList.remove('modal-open');\n  };\n}, []);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file); // Update the selectedFile state with the file\n  \n    if (file) {\n      setSelectedFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImage(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleNewPhoto = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleUpload = async () => {\n    const canvas = cropperRef.current?.getCanvas();\n    if (canvas) {\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg'));\n  \n      if (blob) {\n        const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n        const metadata = { contentType: 'image/jpeg' };\n  \n        const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n  \n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            // Handle upload progress here\n          },\n          (error) => {\n            // Handle upload error here\n          },\n          () => {\n            // Handle upload success here\n            getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n              if (downloadURL) {\n                // Update the Firestore document immediately before handling the upload success\n                await updateDoc(docRef, { photoURL: downloadURL });\n                handleImageUpload(downloadURL);\n                setIsUploadSuccess(true);\n                setTimeout(() => {\n                  setIsUploadSuccess(false);\n                }, 3000);\n              }\n            });\n          }\n        );\n      }\n    }\n  };\n  \n\n  const handleDeletePhoto = async () => {\n    if (user && user.uid) {\n      const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n      await updateDoc(docRef, { photoURL: defaultImageURL });\n      setPhotoURL(defaultImageURL);\n      setIsDeleteConfirmed(false);\n    }\n  };\n  \n\n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'image/*';\n    fileInputRef.current.addEventListener('change', handleFileUpload);\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef); // Set the local state for document reference\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n  \n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.photoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n  \n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n  \n\n  return (\n<div className=\"modal-overlay\">\n<div className=\"modalcrop\">\n<div className=\"top-section\">\n        <div style={{ marginRight: '10px' }}>Profile image</div>\n        <button className=\"btn-crop\" onClick={closeModal}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div className='centerimage'>\n      <div className=\"croppers-wizard__body\">\n        <div className='default-cropper croppers-wizard__cropper'>\n\n       \n          {image ? (\n            <Cropper\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n                handlers: {\n                  eastNorth: true,\n                  north: false,\n                  westNorth: true,\n                  west: false,\n                  westSouth: true,\n                  south: false,\n                  eastSouth: true,\n                  east: false,\n              }\n              }}\n         \n            />\n          ) : null}\n</div>\n\n</div>\n\n      </div>\n      \n      <div className=\"button-section with-divider\">\n  <button className=\"btn-crop\" onClick={handleNewPhoto}>\n    <div className=\"button-content\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n          </svg>\n      New Photo\n    </div>\n  </button>\n\n  <button className=\"btn-crop\" onClick={handleUpload}>\n        <div className=\"button-content\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\n          </svg>\n          Upload Photo\n        </div>\n      </button>\n\n\n\n      {isUploadSuccess && (\n  <div className=\"upload-success-icon\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n    </svg>\n  </div>\n)}\n\n \n\n  <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n      </svg>\n      Delete Photo\n    </div>\n  </button>\n</div>\n\n\n</div>\n    </div>\n  );\n}\n\nexport default ImageCropper;\n"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","selectedLabel","setSelectedLabel","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","gallery","setGallery","_useState45","_useState46","isLoadingGallery","setIsLoadingGallery","_useState47","_useState48","setIsLoadingCarousel","_useState49","_useState50","isDraggingFile","setIsDraggingFile","_useState51","_useState52","uploadStatus","setUploadStatus","_useState53","_useState54","uploadStatusLink","setUploadStatusLink","_useState55","_useState56","linkUrl","setLinkUrl","_useState57","_useState58","links","setLinks","_useState59","_useState60","setIsLoadingLinks","_useState61","_useState62","linkDescription","setLinkDescription","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","userImagesCollectionRef","unsubscribeSnapshot","userLinksCollectionRef","linksSnapshot","linksData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","labels","collection","concat","onSnapshot","querySnapshot","galleryList","docs","map","isImage","test","url","id","title","console","log","getDocs","abrupt","stop","_x","apply","arguments","handleFileUpload","_ref2","_callee2","files","file","fileName","userFilesCollectionRef","scaledFile","downloadURL","_context2","name","size","t0","uploadFile","t1","error","setTimeout","_x2","_x3","_ref3","_callee3","collectionRef","storageRef","uploadTask","snapshot","uploadedFiles","docRef","_context3","ref","storage","uploadBytesResumable","getDownloadURL","prevGallery","_toConsumableArray","setDoc","_x4","_x5","_x6","_x7","handleRemovePhoto","_ref4","_callee4","index","event","docPath","updatedGallery","_context4","deleteObject","deleteDoc","filter","_","i","_x8","_x9","handleTitleChange","value","photoId","photo","_objectSpread","handleDescriptionChange","handleUploadDescription","_ref5","_callee5","_context5","Promise","all","updateDoc","_x10","getFileIcon","pop","toLowerCase","_jsxs","style","color","xmlns","width","height","viewBox","children","_jsx","d","fill","isGalleryLoading","length","some","isUploading","isCarouselLoading","handleImageUpload","_ref6","_callee6","_context6","updateProfile","then","catch","_x11","clearUpdateMessage","updateProfileInfo","_ref7","_callee7","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context7","approved","points","currentUser","document","getElementById","_ref8","_callee8","_context8","_x12","handleRemoveKeyword","updatedKeywords","splice","removeKeyword","handleImageClick","enableScroll","body","overflow","handleDragEnter","e","preventDefault","handleAddLink","_ref9","_callee9","formattedUrl","newLink","_context9","trim","startsWith","addDoc","context","finish","_x13","handleRemoveLink","_ref10","_callee10","linkId","linkDocRef","updatedLinks","_context10","_x14","_x15","className","src","alt","onError","onClick","cursor","strokeWidth","stroke","strokeLinecap","strokeLinejoin","process","placeholder","onChange","target","readOnly","pointerEvents","htmlFor","rows","resize","checked","link","href","rel","replace","role","onDragEnter","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","LoadingCircle","_Fragment","onKeyDown","key","Carousel","Item","isLoading","Caption","window","innerWidth","handleAddKeyword","disabled","keyword","marginLeft","ImageCropper","closeModal","handleImageError","collectionName","image","setImage","setSelectedFile","setIsDeleteConfirmed","selectedFileName","setSelectedFileName","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","classList","add","remove","reader","FileReader","onload","result","readAsDataURL","handleUpload","_cropperRef$current","canvas","blob","metadata","current","getCanvas","resolve","toBlob","contentType","on","handleDeletePhoto","defaultImageURL","createElement","accept","addEventListener","_doc$data","handlePhotoURLChange","marginRight","Cropper","stencilComponent","CircleStencil","stencilProps","grid","handlers","eastNorth","north","westNorth","west","westSouth","south","eastSouth","east","click"],"sourceRoot":""}