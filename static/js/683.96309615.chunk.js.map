{"version":3,"file":"static/js/683.96309615.chunk.js","mappings":"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","sources":["Users/ExpertSettings.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { Link } from 'react-router-dom';\nimport { updatePassword } from 'firebase/auth';\nimport { isPasswordValid } from '../firebase';\nimport { doc, writeBatch, getDoc, updateDoc, deleteDoc, collection, query, where, getDocs } from 'firebase/firestore';\n\nfunction Settings() {\n  const [user, setUser] = useState(null);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [customURL, setCustomURL] = useState('');\n  const [isCopied, setIsCopied] = useState(false);\n  const [referralCode, setReferralCode] = useState('');\n  const [isMobile, setIsMobile] = useState(false);\n  const [isReferralCopied, setIsReferralCopied] = useState(false);\n  const [customURLSuccessMessage, setCustomURLSuccessMessage] = useState('');\n  const [customURLErrorMessage, setCustomURLErrorMessage] = useState('');\n  const [referralErrorMessage, setReferralErrorMessage] = useState('');\n  const [hasSubmittedReferral, setHasSubmittedReferral] = useState(false);\n  const [referralSubmitted, setReferralSubmitted] = useState(false);\n\n  const [enteredReferralCode, setEnteredReferralCode] = useState('');\nconst [referralSuccessMessage, setReferralSuccessMessage] = useState('');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Adjust the breakpoint as needed\n    };\n  \n    handleResize(); // Call it initially to set the initial state\n  \n    window.addEventListener('resize', handleResize);\n  \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const splitName = authUser.displayName.split(' ');\n        setFirstName(splitName[0] || '');\n        setLastName(splitName[1] || '');\n  \n        // Fetch customURL from Firestore\n        const userUID = authUser.uid;\n        const userProfileRef = doc(firestore, 'expertApplications', userUID);\n  \n        getDoc(userProfileRef)\n          .then((docSnapshot) => {\n            if (docSnapshot.exists()) {\n              const userData = docSnapshot.data();\n              if (userData) {\n                setCustomURL(userData.customURL);\n                setReferralCode(userData.referralCode);\n                // Set referralSubmitted state directly from userData\n                setReferralSubmitted(userData.referralSubmitted); // Assuming referralSubmitted is a boolean\n                localStorage.setItem('customURL', userData.customURL);\n                console.log('Referral submitted status:', userData.referralSubmitted);\n              }\n            }\n          })\n          .catch((error) => {\n            console.error('Error fetching custom URL: ', error);\n          });\n      } else {\n        setUser(null);\n        setFirstName('');\n        setLastName('');\n      }\n    });\n  \n    // Retrieve customURL from local storage on component mount\n    const storedCustomURL = localStorage.getItem('customURL');\n    if (storedCustomURL) {\n      setCustomURL(storedCustomURL);\n    }\n  \n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n  \n  \n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser);\n      } else {\n        setUser(null);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n\nconst handlePasswordUpdate = () => {\n  if (newPassword === '' && confirmPassword === '') {\n    setPasswordError(\"Please type a new password.\");\n    return;\n  }\n\n  if (newPassword !== confirmPassword) {\n    setPasswordError(\"New password and confirm password don't match.\");\n    return;\n  }\n\n  let passwordError = '';\n\n  if (newPassword.length < 8) {\n    passwordError = 'Password must be more than 7 characters.';\n  } else if (!/[a-z]/.test(newPassword)) {\n    passwordError = 'Password must contain at least one lowercase letter.';\n  } else if (!/[A-Z]/.test(newPassword)) {\n    passwordError = 'Password must contain at least one uppercase letter.';\n  } else if (!/\\d/.test(newPassword)) {\n    passwordError = 'Password must contain at least one digit.';\n  } else if (!/[@$!%*?&]/.test(newPassword)) {\n    passwordError = 'Password must contain at least one special character.';\n  }\n\n  if (passwordError) {\n    setPasswordError(passwordError);\n    return;\n  }\n\n  const user = auth.currentUser;\n  updatePassword(user, newPassword)\n    .then(() => {\n      setSuccessMessage('Password updated successfully');\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setPasswordError('');\n    })\n    .catch((error) => {\n      alert('Error updating password: ' + error.message);\n    });\n};\n\n\n\n\nconst handleCustomURLUpdate = () => {\n  if (customURL === '') {\n    console.error('Custom URL is empty.');\n    setCustomURLErrorMessage('Custom URL cannot be empty.');\n    return;\n  }\n\n  // Convert customURL to lowercase\n  const lowercaseCustomURL = customURL.toLowerCase();\n\n  // Check if the custom URL is already in use\n  const userProfilesRef = collection(firestore, 'expertApplications');\n  const customURLQuery = query(userProfilesRef, where('customURL', '==', lowercaseCustomURL));\n\n  getDocs(customURLQuery)\n    .then((querySnapshot) => {\n      if (querySnapshot.size > 0) {\n        // Custom URL is already in use\n        setCustomURLErrorMessage('Custom URL is already taken. Please choose another one.');\n        setCustomURLSuccessMessage('');\n      } else {\n        // Custom URL is unique, update it in the database\n        const userUID = user.uid;\n        const userProfileRef = doc(firestore, 'expertApplications', userUID);\n\n        updateDoc(userProfileRef, {\n          customURL: lowercaseCustomURL, // Store in lowercase\n        })\n          .then(() => {\n            console.log('Custom URL updated successfully');\n            setCustomURLSuccessMessage('Custom URL updated successfully');\n            setCustomURLErrorMessage('');\n          })\n          .catch((error) => {\n            console.error('Error updating custom URL: ', error);\n            setCustomURLErrorMessage('Error updating custom URL.');\n            setCustomURLSuccessMessage('');\n          });\n      }\n    })\n    .catch((error) => {\n      console.error('Error checking custom URL availability: ', error);\n      setCustomURLErrorMessage('Error checking custom URL availability.');\n      setCustomURLSuccessMessage('');\n    });\n};\n\n\nconst handleInputKeyDown = (event) => {\n  if (event.key === 'Enter') {\n    handleCustomURLUpdate();\n  }\n};\n\nconst handleCopyCustomURL = () => {\n  const el = document.createElement('textarea');\n  el.value = `https://www.tioassist.io/expert/${customURL}`;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  setIsCopied(true); // Set isCopied to true when the URL is copied\n\n  // Show the copy text box for 3 seconds, then hide it again\n  const copyTextElement = document.querySelector('.copy-text');\n  copyTextElement.style.display = 'inline-block'; // Show the box\n\n  setTimeout(() => {\n    setIsCopied(false);\n    copyTextElement.style.display = 'none'; // Hide the box after 3 seconds\n  }, 3000); // Reset isCopied after 3 seconds (3000 milliseconds)\n};\n\nconst handleCopyReferralCode = () => {\n  const tempTextArea = document.createElement(\"textarea\");\n  tempTextArea.value = referralCode;\n  document.body.appendChild(tempTextArea);\n  tempTextArea.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(tempTextArea);\n  setIsReferralCopied(true);\n\n  const copyTextElement = document.querySelector('.copy-referral');\n  copyTextElement.style.display = 'inline-block'; // Show the box\n\n  // Reset the copy status after 3 seconds\n  setTimeout(() => {\n    setIsReferralCopied(false);\n    copyTextElement.style.display = 'none'; // Hide the box after 3 seconds\n  }, 3000);\n};\n\nconst handleDeleteProfile = () => {\n  if (window.confirm('Are you sure you want to delete your profile?')) {\n    const user = auth.currentUser;\n    if (!user) {\n      console.error('No user signed in.');\n      return;\n    }\n    const userUID = user.uid;\n    const userProfileRef = doc(firestore, 'expertApplications', userUID);\n\n    deleteDoc(userProfileRef)\n      .then(() => {\n        user.delete()\n          .then(() => {\n            console.log('User deleted successfully');\n            window.location = '/'; // You can also use history.push('/') if you are using React Router\n          })\n          .catch((error) => {\n            if (error.code === 'auth/requires-recent-login') {\n              // The user's credential is too old. They need to sign in again.\n              alert('Please log out and log back in again to delete your profile.');\n            } else {\n              console.error('Error deleting user: ', error);\n            }\n          });\n      })\n      .catch((error) => {\n        console.error('Error deleting user profile: ', error);\n      });\n  }\n};\n\n\nconst handleReferralSubmit = async (event) => {\n  if (event) {\n    event.preventDefault(); // Prevent form submission\n  }\n\n  console.log(\"Referral submission started.\");\n\n  if (referralSubmitted) {\n    console.error('You have already submitted a referral.');\n    setReferralErrorMessage('You have already submitted a referral.');\n    setReferralSuccessMessage('');\n    return;\n  }\n\n  // Check if the entered referral code is the current user's referral code\n  if (enteredReferralCode === referralCode) {\n    console.log('User entered their own referral code.');\n    setReferralErrorMessage('You cannot use your own referral code.');\n    setReferralSuccessMessage('');\n    return;\n  }\n\n  // Check if the referral code exists in the userProfiles collection\n  const userProfilesRef = collection(firestore, 'userProfiles');\n  const userProfilesQuery = query(userProfilesRef, where('referralCode', '==', enteredReferralCode));\n  const userProfilesSnapshot = await getDocs(userProfilesQuery);\n\n  // Check if the referral code exists in the expertApplications collection\n  const expertApplicationsRef = collection(firestore, 'expertApplications');\n  const expertApplicationsQuery = query(expertApplicationsRef, where('referralCode', '==', enteredReferralCode));\n  const expertApplicationsSnapshot = await getDocs(expertApplicationsQuery);\n\n  // Check if the referral code exists in either collection\n  const referralCodeExists = userProfilesSnapshot.size > 0 || expertApplicationsSnapshot.size > 0;\n\n  if (!referralCodeExists) {\n    console.log('Referral code does not exist.');\n    setReferralErrorMessage('Referral code does not exist. Please check the code and try again.');\n    setReferralSuccessMessage('');\n    return;\n  }\n\n  // Referral code exists, get the user's profile data\n  const userProfileData = userProfilesSnapshot.size > 0 ? userProfilesSnapshot.docs[0].data() : null;\n\n  // Update points for the user who owns the referral code\n  if (userProfileData) {\n    const referralUserRef = userProfilesSnapshot.docs[0].ref;\n    await updateDoc(referralUserRef, {\n      points: userProfileData.points + 50,\n    });\n  }\n\n  // Update points for the current user\n  const userUID = user.uid;\n  const userProfileRef = doc(firestore, 'userProfiles', userUID);\n  const userProfileDoc = await getDoc(userProfileRef);\n  const userProfileDocData = userProfileDoc.data();\n\n  // Update user's points and set referralSubmitted to true\n  console.log('Updating user document:', userProfileRef.id, {\n    points: userProfileDocData.points + 50,\n    referralSubmitted: true,\n  });\n  await updateDoc(userProfileRef, {\n    points: userProfileDocData.points + 50,\n    referralSubmitted: true,\n  });\n  \n  // Fetch the updated user document from Firestore\n  const updatedUserProfileDoc = await getDoc(userProfileRef);\n  const updatedUserProfileDocData = updatedUserProfileDoc.data();\n  console.log('Updated user document:', updatedUserProfileDocData);\n  \n  setReferralSubmitted(true);\n\n  console.log('Referral code applied successfully');\n  setReferralSuccessMessage('Referral code applied successfully! Both users have received 50 points.');\n  setReferralErrorMessage('');\n};\n\n\n\n\n\n\n  return (\n    <div className=\" pricing \">  \n    <div className=\"container-xl\"   >\n          <div className data-aos=\"fade-up\">\n    \n          <div className=\"row text-center mt-5\">\n          <h1 className=\"display-3 fw-bold mt-5\">Settings</h1>\n          <div className=\"heading-line\"></div>\n        </div>\n          \n          \n            <div className=\"row mb-4 gx-4\">\n              <div className=\"col-xl-12 col-12\">\n                <div className=\"\">\n                  <div className=\"card-body card-profile\">\n          \n                    <div className=\"row g-3\">\n                      \n                      <h3 className=\"mb-4\">Custom URL</h3>\n                      <div className={isMobile ? 'input-group-mobile ' : 'input-group'}>\n                      <div className={isMobile ? 'mobile-customurl' : 'input-group '}>\n  <span className=\"customurl\">https://www.tioassist.io/expert/</span>\n  <input\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"yourHTML\"\n    value={customURL}\n    onChange={(e) => setCustomURL(e.target.value)}\n    onKeyDown={handleInputKeyDown} // Submit on Enter\n  />\n  </div>\n<div className=\"copy-container\" >\n  <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  color=\"#212529\"\n  fill={!isCopied ? \"none\" : \"#00FF00\"} // Change fill color to green if copied\n  viewBox=\"0 0 24 24\"\n  strokeWidth={1}\n  stroke=\"currentColor\"\n  height=\"25\"\n  width=\"25\"\n  onClick={handleCopyCustomURL}\n  style={{ cursor: 'pointer', marginTop: '3px' }}\n>\n  {/* SVG path */}\n  {!isCopied ? (\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z\"\n    />\n  ) : (\n    <svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n  )}\n</svg>\n<span className=\"copy-text\">\n    {isCopied ? 'Copied!' : ''}\n  </span>\n</div>\n</div>\n\n\n\n      </div>\n      <div className=\"mt-3\">\n      {customURLSuccessMessage && (\n          <p style={{ color: 'green', margin: '10px 0' }}>\n            {customURLSuccessMessage}\n          </p>\n        )}\n        {customURLErrorMessage && (\n          <p style={{ color: 'red', margin: '10px 0' }}>\n            {customURLErrorMessage}\n          </p>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={handleCustomURLUpdate}\n        \n\n        >\n          Update Custom URL\n        </button>\n        </div>\n      \n          \n                    {user && user.providerData[0].providerId === 'google.com' ? (\n                  null // Do not render password-related form for Google Sign-In users\n                ) : (\n                    <form className=\"file-upload\" autoComplete=\"new-password\">\n                    <div className=\"py-5 rounded mt-4\">\n                      <div className=\"row g-3\">\n                        <h3 className=\"mb-4\">Password</h3>\n                        <div className=\"col-md-4\">\n                          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n                            Old password *\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control form-control-lg\"\n                            id=\"exampleInputPassword1\"\n                            value={oldPassword}\n                            onChange={(e) => setOldPassword(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"col-md-4\">\n                          <label htmlFor=\"exampleInputPassword2\" className=\"form-label\">\n                            New password *\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control form-control-lg\"\n                            id=\"exampleInputPassword2\"\n                            value={newPassword}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"col-md-8\">\n                          <label htmlFor=\"exampleInputPassword3\" className=\"form-label\">\n                            Confirm Password *\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control form-control-lg\"\n                            id=\"exampleInputPassword3\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                          />\n                        {successMessage && (\n        <div className=\"text-success\">{successMessage}</div>\n      )}\n      {passwordError && (\n        <div className=\"text-danger\">{passwordError}</div>\n      )}\n                        </div>\n                      </div>\n                      <div className=\"mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          onClick={handlePasswordUpdate}\n                        >\n                          Update Password\n                        </button>\n                      </div>\n                    </div>\n                    </form>\n                    )}\n                  </div>\n              \n              <div className=\"card-body card-profile\">\n  <div className=\"row g-3\">\n\n    <h3 className=\"mb-4\">Referral Code</h3>\n    <div className=\"col-md-12\">\n    <div className={isMobile ? 'input-group-mobile ' : 'input-group'}>\n      <input\n        type=\"text\"\n        className=\"form-control form-control-lg employment-entry\"\n        value={referralCode}\n        readOnly\n      />\n           <div className=\"copy-container\" >\n  <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  color=\"#212529\"\n  fill={!isReferralCopied ? \"none\" : \"#00FF00\"} // Change fill color to green if copied\n  viewBox=\"0 0 24 24\"\n  strokeWidth={1}\n  stroke=\"currentColor\"\n  height=\"25\"\n  width=\"25\"\n  onClick={handleCopyReferralCode}\n  style={{ cursor: 'pointer', marginTop: '3px' }}\n>\n  {/* SVG path */}\n  {!isReferralCopied ? (\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z\"\n    />\n  ) : (\n    <svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n  )}\n</svg>\n<span className=\"copy-referral\">\n{isReferralCopied ? 'Copied!' : ''}\n  </span>\n</div>\n \n    </div>\n  </div>\n</div>\n</div>\n\n<div className=\"card-body card-profile\">\n          \n          <div className=\"row g-3\">\n            \n            <h3 className=\"mb-4\">Submit  Referral</h3>\n            <div className='input-group'>\n              \n            <input\n  type=\"text\"\n  className=\"form-control form-control-lg\"\n  placeholder=\"Enter Referral Code\"\n  value={enteredReferralCode}\n  onChange={(e) => setEnteredReferralCode(e.target.value)}\n  onKeyDown={(event) => {\n    if (event.key === 'Enter') {\n      handleReferralSubmit(event);\n    }\n  }}\n/>\n\n</div>\n<div className=\"mt-3\">\n{referralSuccessMessage && (\n          <p style={{ color: 'green', margin: '10px 0' }}>\n            {referralSuccessMessage}\n          </p>\n        )}\n        {referralErrorMessage && (\n          <p style={{ color: 'red', margin: '10px 0' }}>\n            {referralErrorMessage}\n          </p>\n        )}\n<button\n  type=\"button\"\n  className=\"btn btn-primary btn\"\n  onClick={() => handleReferralSubmit()}\n>\n  Submit Referral\n</button>\n</div>\n</div>\n\n\n        \n        </div>\n        </div>\n        <div className=\"card-body card-profile\">\n          \n          <div className=\"row g-3\">\n                      \n                      <h3 className=\"mb-4\">Delete Profile</h3>\n                      <div className='mt-3'>\n<button type=\"button\" className=\"btn btn-danger\" onClick={handleDeleteProfile}>\n            Delete Profile\n          </button>\n</div>\n        </div>\n     </div>\n            </div>\n         \n     </div>\n     </div>\n     </div>\n</div>\n  );\n}\n\nexport default Settings;\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","oldPassword","setOldPassword","_useState5","_useState6","newPassword","setNewPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","setFirstName","_useState11","_useState12","setLastName","_useState13","_useState14","passwordError","setPasswordError","_useState15","_useState16","successMessage","setSuccessMessage","_useState17","_useState18","customURL","setCustomURL","_useState19","_useState20","isCopied","setIsCopied","_useState21","_useState22","referralCode","setReferralCode","_useState23","_useState24","isMobile","setIsMobile","_useState25","_useState26","isReferralCopied","setIsReferralCopied","_useState27","_useState28","customURLSuccessMessage","setCustomURLSuccessMessage","_useState29","_useState30","customURLErrorMessage","setCustomURLErrorMessage","_useState31","_useState32","referralErrorMessage","setReferralErrorMessage","_useState33","_useState34","_useState35","_useState36","referralSubmitted","setReferralSubmitted","_useState37","_useState38","enteredReferralCode","setEnteredReferralCode","_useState39","_useState40","referralSuccessMessage","setReferralSuccessMessage","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","unsubscribe","auth","onAuthStateChanged","authUser","splitName","displayName","split","userUID","uid","userProfileRef","doc","firestore","getDoc","then","docSnapshot","exists","userData","data","localStorage","setItem","console","log","catch","error","storedCustomURL","getItem","handleCustomURLUpdate","lowercaseCustomURL","toLowerCase","userProfilesRef","collection","customURLQuery","query","where","getDocs","querySnapshot","size","updateDoc","handleReferralSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","userProfilesQuery","userProfilesSnapshot","expertApplicationsRef","expertApplicationsQuery","expertApplicationsSnapshot","userProfileData","referralUserRef","userProfileDoc","userProfileDocData","updatedUserProfileDoc","updatedUserProfileDocData","wrap","_context","prev","next","preventDefault","abrupt","sent","docs","ref","points","id","stop","_x","apply","arguments","_jsx","className","children","_jsxs","type","placeholder","value","onChange","e","target","onKeyDown","key","xmlns","color","fill","viewBox","strokeWidth","stroke","height","width","onClick","el","document","createElement","concat","body","appendChild","select","execCommand","removeChild","copyTextElement","querySelector","style","display","setTimeout","cursor","marginTop","strokeLinecap","strokeLinejoin","d","margin","providerData","providerId","autoComplete","htmlFor","length","test","currentUser","updatePassword","alert","message","readOnly","tempTextArea","confirm","deleteDoc","delete","location","code"],"sourceRoot":""}