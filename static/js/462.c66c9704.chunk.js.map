{"version":3,"file":"static/js/462.c66c9704.chunk.js","mappings":"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","sources":["Users/UserProfile.js","components/FlashMessage.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, setDoc } from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \nimport FlashMessage from '../components/FlashMessage';\n\nfunction UserProfile() {\n  const { customURL } = useParams();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [photoURL, setPhotoURL] = useState(null);\n  const [previousPhotoRef, setPreviousPhotoRef] = useState(null);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\n  const [imageLoadError, setImageLoadError] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [county, setCounty] = useState('');\n  const [postcode, setPostcode] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [role, setRole] = useState('');\n  const [email, setEmail] = useState(''); // Added email state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [description, setDescription] = useState('');\n\n  const [isUploadSuccess, setIsUploadSuccess] = useState(false);\n  const [originalPhotoURL, setOriginalPhotoURL] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n\n        const userDocRef = doc(firestore, 'userProfiles', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          if (userData.photoURL) {\n            setPhotoURL(userData.photoURL || authUser.photoURL);\n            setOriginalPhotoURL(userData.originalPhotoURL || null);\n          } else {\n            setPhotoURL(authUser.photoURL);\n            setOriginalPhotoURL(null);\n          }\n          setFirstName(userData.firstName || authUser.displayName.split(' ')[0] || '');\n          setLastName(userData.lastName || authUser.displayName.split(' ')[1] || '');\n          setAddress(userData.address || '');\n          setCity(userData.city || '');\n          setCounty(userData.county || '');\n          setPostcode(userData.postcode || '');\n          setMobileNumber(userData.mobileNumber || '');\n          setRole(userData.role || '');\n          setEmail(authUser.email); // Set email from authUser\n          setDescription(userData.description)\n        } else {\n          setFirstName(authUser.displayName.split(' ')[0] || '');\n          setLastName(authUser.displayName.split(' ')[1] || '');\n          setPhotoURL(authUser.photoURL);\n          setEmail(authUser.email); // Set email from authUser\n          \n        }\n      } else {\n        setAddress('');\n        setCity('');\n        setCounty('');\n        setPostcode('');\n        setMobileNumber('');\n        setPhotoURL(null);\n        setEmail(''); // Clear email\n        setRole('');\n        setDescription('')\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const handleImageUpload = async (downloadURL) => {\n    setPhotoURL(downloadURL);\n  \n    // Update Firestore document with new photoURL\n    const userDocRef = doc(firestore, 'userProfiles', user.uid);\n    await updateDoc(userDocRef, { photoURL: downloadURL });\n  \n    updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      // Profile updated successfully\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      // Handle error while updating profile\n      console.error('Error updating profile photo:', error);\n    });\n  };\n\n\nconst clearUpdateMessage = () => {\n  setUpdateMessage({ text: '', type: '' });\n};\n\n\n\nconst updateProfileInfo = async () => {\n  if (!user) {\n    return;\n  }\n\n  try {\n    const updatedUser = auth.currentUser;\n\n    // Update Firebase auth displayName\n    await updateProfile(updatedUser, {\n      displayName: `${firstName} ${lastName}`, // Update display name based on the changes\n      photoURL: updatedUser.photoURL, // Retain the current photoURL\n    });\n\n    const userDocRef = doc(firestore, 'userProfiles', user.uid);\n\n    // Update Firestore document with new profile information\n    await setDoc(\n      userDocRef,\n      {\n        displayName: `${firstName} ${lastName}`, // Update display name in Firestore too\n        firstName: firstName, // Update first name\n        lastName: lastName, // Update last name\n        email: email,\n        mobileNumber: document.getElementById('inputMobileNumber').value,\n        role: document.getElementById('inputRole').value,\n        address: document.getElementById('inputAddress').value,\n        city: document.getElementById('inputCity').value,\n        county: document.getElementById('inputCounty').value,\n        postcode: document.getElementById('inputPostcode').value,\n        description: document.getElementById('inputDescription').value,\n        photoURL: photoURL,\n      },\n      { merge: true }\n    );\n\n    setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n  } catch (error) {\n    setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n\n    setTimeout(() => clearUpdateMessage(), 3000);\n  }\n};\n\nconst handleImageClick = () => {\n  console.log('Image clicked'); // Check if this message appears in the console\n  setIsModalOpen(true);\n};\n\n\nconst handleImageError = () => {\n  setImageLoadError(true);\n};\n\n\nconst closeModal = () => {\n  setIsModalOpen(false);\n};\n\n\nconst openModal = () => {\n  setIsModalOpen(true);\n};\n\n\n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      {/* Plus symbol */}\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n\n      </div>\n \n    </div>\n  )}\n\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n   \n    </div>\n  )}\n</div>\n\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{role}</div>\n      </div>\n     \n\n    </div>\n\n\n\n<div className=\"\">\n<h3>My Profile</h3>\n<hr />\n</div>\n<form className=\"file-upload\">\n\n<div className=\"row mb-4 gx-4\">\n<div className=\"col-xl-8 col-12\">\n<div className=\"\">\n<div className=\"card-body card-profile\">\n<div className=\"row g-3\">\n<h4 className=\"mb-4\">General information</h4>\n<div className=\"col-md-6\">\n<label className=\"form-label\">First Name *</label>\n<input\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"\"\naria-label=\"First name\"\nvalue={firstName} // Display user's first name here\nonChange={(e) => setFirstName(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Last Name *</label>\n<input\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"\"\naria-label=\"Last name\"\nvalue={lastName} // Display user's last name here\nonChange={(e) => setLastName(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n<input\ntype=\"email\"\nclassName=\"form-control form-control-lg\"\nid=\"inputEmail4\"\nvalue={user ? user.email : ''} // Display user's email here\nreadOnly // Mark it as read-only\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Mobile number *</label>\n<input\nid=\"inputMobileNumber\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your Phone number\"\naria-label=\"Phone number\"\nvalue={mobileNumber} // Display user's mobile number here\nonChange={(e) => setMobileNumber(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Role/Expertise *</label>\n<input\nid=\"inputRole\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your role/expertise\"\naria-label=\"your Role\"\nvalue={role} // Display user's mobile number here\nonChange={(e) => setRole(e.target.value)}\n/>\n</div>\n<div className=\"col-md-12\">\n    <label className=\"form-label\">Description of Expertise</label>\n    <textarea\n    id=\"inputDescription\"\n    type=\"text\"\n    className=\"form-control\"\n    rows=\"4\"\n    placeholder=\"Enter a brief description of your expertise or how you can help\"\n    value={description} // Create a 'description' state and update it accordingly\n    onChange={(e) => setDescription(e.target.value)}\n    style={{ resize: 'none' }}\n    />\n    </div>\n</div>\n<div className=\"py-5 rounded mt-4\">\n<div className=\"row g-3\">\n<h4 className=\"mb-4 mt-0\">Address</h4>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Address</label>\n<input\nid=\"inputAddress\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your home address\"\nvalue={address} // Display user's address here\nonChange={(e) => setAddress(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">City</label>\n<input\nid=\"inputCity\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter City\"\nvalue={city} // Display user's city here\nonChange={(e) => setCity(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">County</label>\n<input\nid=\"inputCounty\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"County\"\nvalue={county} // Display user's county here\nonChange={(e) => setCounty(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Postcode</label>\n<input\nid=\"inputPostcode\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Postcode\"\nvalue={postcode} // Display user's postcode here\nonChange={(e) => setPostcode(e.target.value)}\n/>\n</div>\n\n</div>\n</div>\n<div className='mt-3'>\n<button\n    type=\"button\"\n    className=\"btn btn-primary mb-4\"\n    onClick={updateProfileInfo}\n    \n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n</div>\n</div>\n</div>\n</div>\n\n</div>\n</form>\n</div>\n</div>\n</div>\n{isModalOpen && (\n  <ImageCropper\n    setPhotoURL={setPhotoURL}\n    setImageLoadError={setImageLoadError}\n    closeModal={closeModal}\n    photoURL={photoURL}\n    originalPhotoURL={originalPhotoURL}\n    handleImageUpload={handleImageUpload}\n    handleImageError={handleImageError}\n    user={user}\n    collectionName=\"userProfiles\"\n    setIsUploadSuccess={setIsUploadSuccess}\n  />\n)}\n{isUploadSuccess && <FlashMessage />}\n    </div>\n);\n}\n\nexport default UserProfile;","import React, { useState, useEffect } from 'react';\n\nfunction FlashMessage() {\n  const [showFlash, setShowFlash] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowFlash(false);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className={showFlash ? 'flash' : ''}>\n      {/* ... flash message content ... */}\n    </div>\n  );\n}\n\nexport default FlashMessage;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Cropper from 'react-easy-crop';\nimport imageCompression from 'browser-image-compression';\n\n\nimport {\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject\n} from 'firebase/storage';\nimport { doc, onSnapshot, updateDoc, getDoc } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\nfunction ImageCropper({\n  closeModal,\n  originalPhotoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n  setIsUploadSuccess,\n}) {\n  const [image, setImage] = useState(originalPhotoURL);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null);\n  const fileInputRef = useRef(null);\n  const [cropperRef, setCropperRef] = useState(null);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const [showFlash, setShowFlash] = useState(false); // State for flash effect\n  const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n  const [originalImage, setOriginalImage] = useState(null);\n\n\n  useEffect(() => {\n    document.body.classList.add('modal-open');\n\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, []);\n\n\n\n  const handleUpload = async () => {\n    if (!croppedAreaPixels) {\n      return;\n    }\n  \n    // Get a reference to the current user's document in Firestore\n    const userDocRef = doc(firestore, collectionName, user.uid);\n  \n    // Get the current photoURL from the user's document\n    const docSnap = await getDoc(userDocRef);\n    const currentPhotoURL = docSnap.data()?.photoURL;\n  \n    // If there's a current photoURL, delete the old cropped image from Firebase Storage\n    if (currentPhotoURL) {\n      const oldCroppedImageStorageRef = ref(storage, currentPhotoURL);\n      try {\n        await deleteObject(oldCroppedImageStorageRef);\n      } catch (error) {\n        console.error('Error deleting old cropped image from storage:', error);\n      }\n    }\n  \n    try {\n      const originalImageBlob = await fetch(image).then((res) => res.blob());\n      const croppedImageBlob = await new Promise((resolve) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const imageToCrop = new Image();\n  \n        imageToCrop.onload = async () => {\n          canvas.width = croppedAreaPixels.width;\n          canvas.height = croppedAreaPixels.height;\n  \n          ctx.drawImage(\n            imageToCrop,\n            croppedAreaPixels.x,\n            croppedAreaPixels.y,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height,\n            0,\n            0,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height\n          );\n  \n          canvas.toBlob(resolve, 'image/jpeg');\n        };\n  \n        imageToCrop.src = URL.createObjectURL(originalImageBlob);\n      });\n  \n      // Log the size of the original cropped image\n      console.log('Original cropped image size:', croppedImageBlob.size, 'bytes');\n  \n      // Convert croppedImageBlob to a File object\n      const croppedImageFile = new File([croppedImageBlob], selectedFileName, { type: 'image/jpeg' });\n  \n      // Compress the cropped image file\n      const options = {\n        maxSizeMB: 0.5,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true,\n      };\n      const compressedFile = await imageCompression(croppedImageFile, options);\n  \n      // Log the size of the compressed image\n      console.log('Compressed image size:', compressedFile.size, 'bytes');\n  \n      // Convert compressedFile back to Blob\n      const compressedBlob = await compressedFile.arrayBuffer().then(arrayBuffer => new Blob([arrayBuffer]));\n  \n      // Upload original image\n      const originalImageStorageRef = ref(storage, `originalImages/${selectedFileName}`);\n      const originalImageMetadata = { contentType: 'image/jpeg' };\n      const originalImageUploadTask = uploadBytesResumable(originalImageStorageRef, originalImageBlob, originalImageMetadata);\n  \n      originalImageUploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle upload progress here\n        },\n        (error) => {\n        },\n        async () => {\n          const originalImageDownloadURL = await getDownloadURL(originalImageUploadTask.snapshot.ref);\n          if (originalImageDownloadURL) {\n            await updateDoc(userDocRef, { originalPhotoURL: originalImageDownloadURL });\n          }\n        }\n      );\n  \n      // Upload compressed cropped image\n      const croppedImageStorageRef = ref(storage, `profileImages/${selectedFileName}`);\n      const croppedImageUploadTask = uploadBytesResumable(croppedImageStorageRef, compressedBlob);\n  \n      croppedImageUploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle upload progress here\n        },\n        (error) => {\n        },\n        async () => {\n          const croppedImageDownloadURL = await getDownloadURL(croppedImageUploadTask.snapshot.ref);\n          if (croppedImageDownloadURL) {\n            // Update the Firestore document immediately before handling the upload success\n            await updateDoc(userDocRef, { photoURL: croppedImageDownloadURL });\n            handleImageUpload(croppedImageDownloadURL);\n            setIsUploadSuccess(true); // add this line\n            closeModal();\n            // Set the original image as the new image in the Cropper\n            if (originalImageBlob) {\n              const reader = new FileReader();\n              reader.onload = (event) => {\n                setImage(event.target.result);\n              };\n              reader.readAsDataURL(originalImageBlob);\n            }\n            setCroppedAreaPixels(null); // Reset cropped area\n            setZoom(1); // Reset zoom level\n            setCrop({ x: 0, y: 0 }); // Reset crop position\n          }\n        }\n      );\n    } catch (error) {\n    }\n  };\n  \n  \n\n  \n  \n\nconst handleDeletePhoto = async () => {\n  if (user && user.uid && docRef) {\n    // Get storage references for both images\n    const originalImageStorageRef = ref(storage, `originalImages/${selectedFileName}`);\n    const croppedImageStorageRef = ref(storage, `profileImages/${selectedFileName}`);\n\n    // Delete images from Firebase Storage\n    try {\n      await deleteObject(originalImageStorageRef);\n      await deleteObject(croppedImageStorageRef);\n    } catch (error) {\n      console.error('Error deleting images from storage:', error);\n    }\n\n    // Update the Firestore document to remove URLs\n    await updateDoc(docRef, {\n      photoURL: null,\n      originalPhotoURL: null,\n    });\n\n    // Update local state\n    setPhotoURL(defaultImageURL);\n    setImage(defaultImageURL);\n  }\n};\n\n\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n\n    useEffect(() => {\n        fileInputRef.current = document.createElement('input');\n        fileInputRef.current.type = 'file';\n        fileInputRef.current.accept = 'image/*';\n      \n        // Add an event listener for file changes\n        fileInputRef.current.addEventListener('change', (event) => {\n          const file = event.target.files[0];\n          if (file) {\n            setSelectedFileName(file.name);\n            setOriginalImage(file);\n            const reader = new FileReader();\n            reader.onload = (event) => {\n              setImage(event.target.result);\n            };\n            reader.readAsDataURL(file);\n          }\n        });\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef);\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n\n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.originalPhotoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n\n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modalcrop\">\n        <div className=\"top-section\">\n          <div style={{ marginRight: '10px' }}>Profile image</div>\n          <button className=\"btn-crop\" onClick={closeModal}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"white\"\n              strokeWidth=\"1.5\"\n              className={`w-6 h-6 smaller-svg`}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className={showFlash ? 'flash' : ''}></div> {/* Flash effect */}\n        <div className='centerimage'>\n\n          {image && (\n            <Cropper\n              ref={setCropperRef}\n              image={image}\n              crop={crop}\n              zoom={zoom}\n              onCropChange={setCrop}\n              onZoomChange={setZoom}\n              onCropComplete={onCropComplete}\n              cropShape=\"round\"\n              aspect={4 / 4}\n            />\n\n          )}\n\n        </div>\n        <div className=\"button-section\">\n          <button\n            className=\"btn-crop\"\n            onClick={() => fileInputRef.current.click()}\n          >\n            <div className=\"button-content\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                className={`w-6 h-6 smaller-svg`}\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\"\n                />\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\"\n                />\n              </svg>\n              New Photo\n            </div>\n          </button>\n          <div className=\"success\">\n            <div className=\"button-container\">\n              <button className=\"btn-crop\" onClick={handleUpload}>\n                <div className=\"button-content\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.5\"\n                    className={`w-6 h-6 smaller-svg`}\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"\n                    />\n                  </svg>\n                  Upload Photo\n                </div>\n              </button>\n            </div>\n         \n\n          </div>\n\n          <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n            <div className=\"button-content\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                className={`w-6 h-6 smaller-svg`}\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                />\n              </svg>\n              Delete Photo\n            </div>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCropper;"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","role","setRole","_useState29","_useState30","email","setEmail","_useState31","_useState32","_useState33","_useState34","description","setDescription","_useState35","_useState36","isUploadSuccess","setIsUploadSuccess","_useState37","_useState38","originalPhotoURL","setOriginalPhotoURL","_useState39","_useState40","isModalOpen","setIsModalOpen","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","displayName","split","stop","_x","apply","arguments","handleImageUpload","_ref2","_callee2","downloadURL","_context2","updateDoc","updateProfile","then","console","log","catch","error","_x2","updateProfileInfo","_ref3","_callee3","updatedUser","_context3","abrupt","currentUser","concat","setDoc","document","getElementById","value","merge","t0","setTimeout","handleImageClick","_jsxs","className","children","_jsx","src","alt","onError","onClick","style","cursor","xmlns","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","process","color","placeholder","onChange","e","target","htmlFor","id","readOnly","rows","resize","ImageCropper","closeModal","handleImageError","collectionName","FlashMessage","showFlash","setShowFlash","timer","clearTimeout","image","setImage","selectedFileName","setSelectedFileName","docRef","setDocRef","fileInputRef","useRef","setCropperRef","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","defaultImageURL","setOriginalImage","body","classList","add","remove","handleUpload","_callee4","_docSnap$data","docSnap","currentPhotoURL","oldCroppedImageStorageRef","originalImageBlob","croppedImageBlob","croppedImageFile","options","compressedFile","compressedBlob","originalImageStorageRef","originalImageMetadata","originalImageUploadTask","croppedImageStorageRef","croppedImageUploadTask","_context4","ref","storage","deleteObject","fetch","res","blob","Promise","resolve","canvas","createElement","ctx","getContext","imageToCrop","Image","onload","width","height","drawImage","toBlob","URL","createObjectURL","size","File","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","arrayBuffer","Blob","contentType","uploadBytesResumable","on","snapshot","originalImageDownloadURL","getDownloadURL","croppedImageDownloadURL","reader","FileReader","event","result","readAsDataURL","t1","handleDeletePhoto","_ref6","_callee5","_context5","current","accept","addEventListener","file","files","name","onSnapshot","_doc$data","newPhotoURL","handlePhotoURLChange","marginRight","fill","Cropper","onCropChange","onZoomChange","onCropComplete","croppedArea","cropShape","aspect","click"],"sourceRoot":""}