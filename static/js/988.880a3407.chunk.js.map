{"version":3,"file":"static/js/988.880a3407.chunk.js","mappings":"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","sources":["ChatBot/ChatHistory.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, collection, query, where, getDocs } from 'firebase/firestore';\n\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n\n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n  \n        const q = query(collection(firestore, 'users', userUid, 'discussions'));\n  \n        const snapshot = await getDocs(q);\n        const sessionData = snapshot.docs.map((doc) => doc.id);\n        setSessions(sessionData);\n  \n        console.log('Fetched sessions:', sessionData);\n      } else {\n        console.error('User not authenticated');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions from Firestore:', error);\n    }\n  };\n  \n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen);\n\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatHistoryRef.current && !chatHistoryRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  \n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isDropdownOpen && (\n      <div className='chatbot-previous'>\n  <button className=\"chat-history-btn\">\n  <div style={{ display: 'flex', alignItems: 'center' }} >\n    <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n    <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n  </div>\n  <div className='ms-auto '>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\"> \n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n    </svg>\n  </div>\n</button>\n<p className=\"text-sm text-muted\">Sessions:</p>\n          {sessions.length > 0 && (\n<ul className=\"fade-ulist\">\n{sessions.map((session) => (\n  <li\n  className={`fade-list mb-2 ${session === selectedSession ? 'selected-session' : ''}`}\n  key={session}\n  onClick={() => {\n    setSelectedSession(session);\n    onSessionClick(session);\n    if (window.innerWidth <= 768) {\n      toggleDropdown();\n    }\n  }}\n>\n  {session}\n</li>\n))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatHistory;","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, query, where, getDocs } from \"../firebase\"; \n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen(); // Toggle ChatExperts\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  const getMatchingExperts = async (selectedTopic) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n\n      const topicName = selectedTopic.name; // Extracting the name from the selectedTopic object\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.labels && data.labels.includes(topicName) && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`, // Use the photoURL if available, fallback to a default image\n          };\n          matchingExperts.push(expertInfo);\n        }\n      });\n\n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts:\", error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          console.log(\"Fetching experts for topic:\", selectedTopic);\n\n          const experts = await getMatchingExperts(selectedTopic);\n          console.log(\"Matching experts:\", experts);\n\n          setMatchingExperts(experts);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        }\n      }\n    };\n\n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic]);\n\n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      <div>\n        <h4>Experts</h4>\n      </div>\n      {matchingExperts.map((expertInfo, index) => (\n        <button className=\"chat-btn expert-btn text-left\" key={index}>\n          <img\n            src={expertInfo.photoURL}\n            alt=\"Avatar\"\n            className=\"very-small-avatar rounded-circle\"\n          />\n          <div>\n            <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n     \n          </div>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatExperts;","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ isDropdownOpen, handleDropdownToggle, onSelectTopic }) => {\n  const dropdownRef = useRef(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    onSelectTopic(topic);\n    handleDropdownToggle();\n  };\n  \n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const pickModelDiv = document.querySelector('.pick-model');\n      if (\n        isDropdownOpen &&\n        dropdownRef.current &&\n        !pickModelDiv.contains(event.target)\n      ) {\n        // Clicked outside the entire pick-model, close the dropdown\n        handleDropdownToggle();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, handleDropdownToggle, isDropdownOpen]);\n  \n  return (\n    <div className=\"pick-model\">\n      <h4\n        onClick={handleDropdownToggle}\n        className={`pointer-cursor ${isDropdownOpen ? 'h4-dropdown-open' : ''}`}\n      >\n        {selectedTopic ? `Topic: ${selectedTopic.name}` : 'Pick a Topic'}\n      </h4>\n      <span\n        className={`svg-chatbot-model pointer-cursor ${isDropdownOpen ? 'svg-chatbot-model-rotate-icon' : ''}`}\n        aria-hidden=\"true\"\n        onClick={handleDropdownToggle}\n      >\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      <div ref={dropdownRef} className={`chat-dropdown-model ${isDropdownOpen ? 'show scroll-cat' : ''}`}>\n        {categories && categories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleDropdownToggle={handleDropdownToggle}\n            handleTopicSelection={handleTopicSelection}\n          />\n        ))}\n      </div>\n    </div>\n  );\n  \n  \n};\n  \n  const TopicLabel = ({ category, handleDropdownToggle, handleTopicSelection }) => {\n    const handleRadioChange = () => {\n      handleTopicSelection(category);\n      handleDropdownToggle();\n    };\n  \n    return (\n      <label className=\"chat-dropdown-model-button \" htmlFor={category.id}>\n        {category.svg} \n        <div className=\"d-flex align-items-center\">\n          <div className=\"d-flex flex-column align-items-start ps-3\">\n            <h5 className=\"m-0\">{category.name}</h5>\n            <h6 className=\"text-muted text-start m-0\">{category.description}</h6>\n          </div>\n        </div>\n        <div className=\"flex-grow-1 d-flex justify-content-end\">\n          <input\n            type=\"radio\"\n            className=\"form-check-input listboxes\"\n            id={category.id}\n            name=\"jobSuccess\"\n            onChange={handleRadioChange}\n          />\n          <label className=\"form-check-label label-with-svg\" htmlFor={category.id}></label>\n        </div>\n      </label>\n    );\n  };\n  \n    const categories = [\n        {\n        id: 'computerOption',\n        name: 'Computer',\n        description: 'All your IT solutions',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'sportOption',\n        name: 'Sport',\n        description: \"Let Tio help you become fit\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M9.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M6.44 3.752A.75.75 0 0 1 7 3.5h1.445c.742 0 1.32.643 1.243 1.38l-.43 4.083a1.8 1.8 0 0 1-.088.395l-.318.906.213.242a.8.8 0 0 1 .114.175l2 4.25a.75.75 0 1 1-1.357.638l-1.956-4.154-1.68-1.921A.75.75 0 0 1 6 8.96l.138-2.613-.435.489-.464 2.786a.75.75 0 1 1-1.48-.246l.5-3a.75.75 0 0 1 .18-.375l2-2.25Z\"/>\n            <path d=\"M6.25 11.745v-1.418l1.204 1.375.261.524a.8.8 0 0 1-.12.231l-2.5 3.25a.75.75 0 1 1-1.19-.914zm4.22-4.215-.494-.494.205-1.843.006-.067 1.124 1.124h1.44a.75.75 0 0 1 0 1.5H11a.75.75 0 0 1-.531-.22Z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'foodCategory',\n        name: 'Food',\n        description: 'Ready to become head-chef?',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"/>\n            <path d=\"M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'healthCategory',\n        name: 'Health',\n        description: 'Here to help',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.121 1.879a3 3 0 0 0-4.242 0L8.733 3.026l4.261 4.26 1.127-1.165a3 3 0 0 0 0-4.242M12.293 8 8.027 3.734 3.738 8.031 8 12.293zm-5.006 4.994L3.03 8.737 1.879 9.88a3 3 0 0 0 4.241 4.24l.006-.006 1.16-1.121ZM2.679 7.676l6.492-6.504a4 4 0 0 1 5.66 5.653l-1.477 1.529-5.006 5.006-1.523 1.472a4 4 0 0 1-5.653-5.66l.001-.002 1.505-1.492z\"/>\n            <path d=\"M5.56 7.646a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707Zm1.415-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707M8.39 4.818a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707Zm0 5.657a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707ZM9.803 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707Zm1.414-1.414a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707ZM6.975 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707ZM8.39 7.646a.5.5 0 1 1-.708.708.5.5 0 0 1 .707-.708Zm1.413-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'workCategory',\n        name: 'Work',\n        description: 'New Job or career advice',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'hobbiesCategory',\n        name: 'Hobbies',\n        description: \"Discover what's possible\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3\"/>\n            <path d=\"M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8m-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7\"/>\n            </svg>\n        ),\n        },\n    ];\n    \n    export default TopicPicker;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('52px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n\n  const fetchMessages = async (userUid, discussionId) => {\n    console.log('Fetching messages for userUid:', userUid, 'and discussionId:', discussionId);\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: prompt, user: 'user' },\n          { text: response, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n      console.log('Fetched messages for discussionId:', discussionId);\n    } catch (error) {\n      console.error('Error fetching messages from Firestore:', error);\n    }\n  };\n  const handleSessionClick = async (discussionId) => {\n    console.log('Clicked session:', discussionId);\n    setSelectedSession(discussionId); // Update the selected session in the state\n    await fetchMessages(auth.currentUser.uid, discussionId); // Pass selectedSession directly\n  };\n  const handleSendMessage = async () => {\n    console.log('Sending message for discussionId:', selectedSession);\n    setIsBotResponding(true);\n    if (message.trim() !== '') {\n      const uid = auth.currentUser.uid;\n      try {\n        let sessionToUse = selectedSession;\n        if (!sessionToUse) {\n          sessionToUse = message.split(' ')[0];\n          await setDoc(doc(db, `users/${uid}`), {});\n          const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n          const discussionsSnapshot = await getDoc(userDocRef);\n          if (!discussionsSnapshot.exists()) {\n            await setDoc(userDocRef, {});\n          }\n          setSelectedSession(sessionToUse);\n        }\n        const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n        const messagesCollectionRef = collection(userDocRef, 'messages');\n        const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message });\n      setMessage('');\n      handleTextareaResize();\n      setChatMessages((prevChatMessages) => [\n        ...prevChatMessages,\n        { text: message, user: 'user' },\n        { text: '', user: 'bot', isTyping: true },\n      ]);\n      const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n        const rawBotResponse = docSnapshot.data()?.response;\n        if (rawBotResponse) {\n          unsubscribe();\n          const initialTypingSpeed = 20;\n          const speedIncreaseRate = 0.1;\n          const formattedBotResponse = rawBotResponse;\n          for (let i = 0; i < formattedBotResponse.length; i++) {\n            const currentTypingSpeed = Math.max(\n              5,\n              initialTypingSpeed - i * speedIncreaseRate\n            );\n            await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n            setChatMessages((prevChatMessages) => [\n              ...prevChatMessages.slice(0, -1),\n              {\n                text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                user: 'bot',\n              },\n            ]);\n          }\n          setIsBotResponding(false);\n          if (window.innerWidth < 768 && textareaRef.current) {\n            textareaRef.current.blur();\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error handling and sending message:', error);\n    }\n  }\n};\n\n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    console.log('Selected Topic:', topic); \n  };\n  \n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '52px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  const handleDropdownToggle = () => {\n    console.log('Dropdown toggled');\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('52px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} onSessionClick={handleSessionClick} />\n<div className='chat-display'>\n<TopicPicker isDropdownOpen={isDropdownOpen} handleDropdownToggle={handleDropdownToggle} onSelectTopic={handleTopicSelection} />\n        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\"  ref={chatContainerRef}>\n  {chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {chatMessage.isTyping ? (\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n    {chatMessage.user !== 'bot' && <div className=\"chat-text\">{chatMessage.text}</div>}\n  </div>\n))}\n\n      </div>\n      <div className=\"chatui-container\">\n        <div className=\"userui-input\" >\n        <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col textarea-chat\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  }}\n  disabled={isBotResponding} \n/>\n          <button\n          aria-label=\"Send Message\"\n          className=\"svg-container send-btn\"\n          disabled={isBotResponding}\nonClick={() => handleSendMessage(selectedSession)}\n        >\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n   <ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} />\n      </div>\n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","isOpen","toggleOpen","onSessionClick","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","_useState3","_useState4","setIsIconRotated","chatHistoryRef","useRef","_useState5","_useState6","sessions","setSessions","_useState7","_useState8","selectedSession","setSelectedSession","fetchSessions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","userUid","q","snapshot","sessionData","wrap","_context","prev","next","auth","currentUser","uid","query","collection","firestore","getDocs","sent","docs","map","doc","id","console","log","error","t0","stop","apply","arguments","useEffect","toggleDropdown","handleClickOutside","event","current","contains","target","isMobile","window","innerWidth","document","addEventListener","removeEventListener","_jsxs","ref","className","concat","children","_jsx","onClick","width","height","viewBox","d","style","display","alignItems","src","process","alt","color","marginLeft","xmlns","fill","strokeWidth","stroke","strokeLinecap","strokeLinejoin","length","session","selectedTopic","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","getMatchingExperts","expertsCollection","querySnapshot","_matchingExperts","topicName","name","forEach","data","labels","includes","displayName","expertInfo","photoURL","push","abrupt","_x","fetchMatchingExperts","_ref3","_callee2","experts","_context2","index","TopicLabel","category","handleDropdownToggle","handleTopicSelection","htmlFor","svg","description","type","onChange","categories","onSelectTopic","dropdownRef","setSelectedTopic","topic","pickModelDiv","querySelector","message","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","_useState9","_useState10","isHistoryOpen","setIsHistoryOpen","_useState11","_useState12","isExpertsOpen","setIsExpertsOpen","chatContainerRef","_useState13","_useState14","isBotResponding","setIsBotResponding","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","fetchMessages","discussionId","messagesCollectionRef","messagesSnapshot","messagesData","orderBy","_doc$data","text","prompt","response","isTyping","flat","_x2","handleSessionClick","_x3","handleSendMessage","_callee4","sessionToUse","_userDocRef","userDocRef","botMessageDocRef","unsubscribe","_context5","trim","split","setDoc","db","getDoc","exists","addDoc","handleTextareaResize","prevChatMessages","_toConsumableArray","onSnapshot","_ref4","_callee3","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","_context4","currentTypingSpeed","_context3","Math","max","Promise","resolve","setTimeout","slice","ReactMarkdown","delegateYield","blur","_x4","sessionStorage","removeItem","textarea","newHeight","min","scrollHeight","handleKeyDown","key","shiftKey","preventDefault","textareaElement","scrollTop","ChatHistory","TopicPicker","chatMessage","LoadingCircle","value","e","placeholder","autoComplete","inputMode","onKeyDown","disabled","ChatExperts"],"sourceRoot":""}