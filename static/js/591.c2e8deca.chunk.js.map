{"version":3,"file":"static/js/591.c2e8deca.chunk.js","mappings":"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","sources":["Users/UserProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, setDoc } from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nfunction UserProfile() {\n  const { customURL } = useParams();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [photoURL, setPhotoURL] = useState(null);\n  const [previousPhotoRef, setPreviousPhotoRef] = useState(null);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\n  const [imageLoadError, setImageLoadError] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [county, setCounty] = useState('');\n  const [postcode, setPostcode] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [role, setRole] = useState('');\n  const [email, setEmail] = useState(''); // Added email state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [description, setDescription] = useState('');\n\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n\n        const userDocRef = doc(firestore, 'userProfiles', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          if (userData.photoURL) {\n            setPhotoURL(userData.photoURL);\n          } else {\n            setPhotoURL(authUser.photoURL);\n          }\n          setFirstName(userData.firstName || authUser.displayName.split(' ')[0] || '');\n          setLastName(userData.lastName || authUser.displayName.split(' ')[1] || '');\n          setAddress(userData.address || '');\n          setCity(userData.city || '');\n          setCounty(userData.county || '');\n          setPostcode(userData.postcode || '');\n          setMobileNumber(userData.mobileNumber || '');\n          setRole(userData.role || '');\n          setEmail(authUser.email); // Set email from authUser\n          setDescription(userData.description)\n        } else {\n          setFirstName(authUser.displayName.split(' ')[0] || '');\n          setLastName(authUser.displayName.split(' ')[1] || '');\n          setPhotoURL(authUser.photoURL);\n          setEmail(authUser.email); // Set email from authUser\n          \n        }\n      } else {\n        setAddress('');\n        setCity('');\n        setCounty('');\n        setPostcode('');\n        setMobileNumber('');\n        setPhotoURL(null);\n        setEmail(''); // Clear email\n        setRole('');\n        setDescription('')\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const handleImageUpload = async (downloadURL) => {\n    setPhotoURL(downloadURL);\n  \n    // Update Firestore document with new photoURL\n    const userDocRef = doc(firestore, 'userProfiles', user.uid);\n    await updateDoc(userDocRef, { photoURL: downloadURL });\n  \n    updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      // Profile updated successfully\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      // Handle error while updating profile\n      console.error('Error updating profile photo:', error);\n    });\n  };\n\n\nconst clearUpdateMessage = () => {\n  setUpdateMessage({ text: '', type: '' });\n};\n\n\n\nconst updateProfileInfo = async () => {\n  if (!user) {\n    return;\n  }\n\n  try {\n    const updatedUser = auth.currentUser;\n\n    // Update Firebase auth displayName\n    await updateProfile(updatedUser, {\n      displayName: `${firstName} ${lastName}`, // Update display name based on the changes\n      photoURL: updatedUser.photoURL, // Retain the current photoURL\n    });\n\n    const userDocRef = doc(firestore, 'userProfiles', user.uid);\n\n    // Update Firestore document with new profile information\n    await setDoc(\n      userDocRef,\n      {\n        displayName: `${firstName} ${lastName}`, // Update display name in Firestore too\n        firstName: firstName, // Update first name\n        lastName: lastName, // Update last name\n        email: email,\n        mobileNumber: document.getElementById('inputMobileNumber').value,\n        role: document.getElementById('inputRole').value,\n        address: document.getElementById('inputAddress').value,\n        city: document.getElementById('inputCity').value,\n        county: document.getElementById('inputCounty').value,\n        postcode: document.getElementById('inputPostcode').value,\n        description: document.getElementById('inputDescription').value,\n        photoURL: photoURL,\n      },\n      { merge: true }\n    );\n\n    setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n  } catch (error) {\n    setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n\n    setTimeout(() => clearUpdateMessage(), 3000);\n  }\n};\n\nconst handleImageClick = () => {\n  console.log('Image clicked'); // Check if this message appears in the console\n  setIsModalOpen(true);\n};\n\n\nconst handleImageError = () => {\n  setImageLoadError(true);\n};\n\nconst disableScroll = () => {\n  document.body.style.overflow = 'hidden';\n};\n\n// Function to enable scrolling\nconst enableScroll = () => {\n  document.body.style.overflow = '';\n};\n\nconst closeModal = () => {\n  setIsModalOpen(false);\n};\n\n\nconst openModal = () => {\n  setIsModalOpen(true);\n};\n\n\n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      {/* Plus symbol */}\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n\n      </div>\n \n    </div>\n  )}\n\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n   \n    </div>\n  )}\n</div>\n\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{role}</div>\n      </div>\n     \n\n    </div>\n\n\n\n\n\n<div className=\"\">\n<h3>My Profile</h3>\n<hr />\n</div>\n<form className=\"file-upload\">\n\n<div className=\"row mb-4 gx-4\">\n<div className=\"col-xl-8 col-12\">\n<div className=\"\">\n<div className=\"card-body card-profile\">\n<div className=\"row g-3\">\n<h4 className=\"mb-4\">General information</h4>\n<div className=\"col-md-6\">\n<label className=\"form-label\">First Name *</label>\n<input\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"\"\naria-label=\"First name\"\nvalue={firstName} // Display user's first name here\nonChange={(e) => setFirstName(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Last Name *</label>\n<input\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"\"\naria-label=\"Last name\"\nvalue={lastName} // Display user's last name here\nonChange={(e) => setLastName(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n<input\ntype=\"email\"\nclassName=\"form-control form-control-lg\"\nid=\"inputEmail4\"\nvalue={user ? user.email : ''} // Display user's email here\nreadOnly // Mark it as read-only\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Mobile number *</label>\n<input\nid=\"inputMobileNumber\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your Phone number\"\naria-label=\"Phone number\"\nvalue={mobileNumber} // Display user's mobile number here\nonChange={(e) => setMobileNumber(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Role/Expertise *</label>\n<input\nid=\"inputRole\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your role/expertise\"\naria-label=\"your Role\"\nvalue={role} // Display user's mobile number here\nonChange={(e) => setRole(e.target.value)}\n/>\n</div>\n<div className=\"col-md-12\">\n    <label className=\"form-label\">Description of Expertise</label>\n    <textarea\n    id=\"inputDescription\"\n    type=\"text\"\n    className=\"form-control\"\n    rows=\"4\"\n    placeholder=\"Enter a brief description of your expertise or how you can help\"\n    value={description} // Create a 'description' state and update it accordingly\n    onChange={(e) => setDescription(e.target.value)}\n    style={{ resize: 'none' }}\n    />\n    </div>\n</div>\n<div className=\"py-5 rounded mt-4\">\n<div className=\"row g-3\">\n<h4 className=\"mb-4 mt-0\">Address</h4>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Address</label>\n<input\nid=\"inputAddress\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your home address\"\nvalue={address} // Display user's address here\nonChange={(e) => setAddress(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">City</label>\n<input\nid=\"inputCity\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter City\"\nvalue={city} // Display user's city here\nonChange={(e) => setCity(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">County</label>\n<input\nid=\"inputCounty\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"County\"\nvalue={county} // Display user's county here\nonChange={(e) => setCounty(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Postcode</label>\n<input\nid=\"inputPostcode\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Postcode\"\nvalue={postcode} // Display user's postcode here\nonChange={(e) => setPostcode(e.target.value)}\n/>\n</div>\n\n</div>\n</div>\n<div className='mt-3'>\n<button\n    type=\"button\"\n    className=\"btn btn-primary mb-4\"\n    onClick={updateProfileInfo}\n    \n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n</div>\n</div>\n</div>\n</div>\n\n</div>\n<div className=\"gap-3 d-md-flex justify-content-md-end text-center\">\n<button type=\"button\" className=\"btn btn-danger\">\nDelete profile\n</button>\n</div>\n</form>\n</div>\n</div>\n</div>\n{isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modalcrop \">\n          \n           <ImageCropper\n  setPhotoURL={setPhotoURL}\n  setImageLoadError={setImageLoadError}\n  closeModal={closeModal}\n  photoURL={photoURL}\n  handleImageUpload={handleImageUpload}\n  handleImageError={handleImageError}\n  user={user}\n  collectionName=\"userProfiles\" \n/>\n          </div>\n        </div>\n      )}\n</div>\n);\n}\n\nexport default UserProfile;","import React, { useState, useRef, useEffect } from 'react';\nimport { Cropper, CircleStencil } from 'react-advanced-cropper';\nimport { updateDoc, doc, onSnapshot } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage, firestore } from '../firebase';\nimport 'react-advanced-cropper/dist/style.css';\n\nfunction ImageCropper({\ncloseModal,\nphotoURL,\nhandleImageUpload,\nsetPhotoURL,\nuser,\ncollectionName,\n}) {\nconst [image, setImage] = useState(photoURL);\nconst [selectedFile, setSelectedFile] = useState(null);\nconst [selectedFileName, setSelectedFileName] = useState(null);\nconst [docRef, setDocRef] = useState(null);\nconst cropperRef = useRef(null);\nconst fileInputRef = useRef(null);\nconst [isUploadSuccess, setIsUploadSuccess] = useState(false);\nconst [mobileSize, setMobileSize] = useState({ width: window.screen.width, height: window.screen.height });\nconst [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n\nconst isMobileDevice = () => {\nreturn window.innerWidth <= 768; // Adjust the threshold as needed\n};\n\nuseEffect(() => {\ndocument.body.classList.add('modal-open');\nreturn () => {\ndocument.body.classList.remove('modal-open');\n};\n}, []);\n\nuseEffect(() => {\nfileInputRef.current = document.createElement('input');\nfileInputRef.current.type = 'file';\nfileInputRef.current.accept = 'image/*';\nfileInputRef.current.addEventListener('change', handleFileUpload);\n\nconst userDocRef = doc(firestore, collectionName, user.uid);\nsetDocRef(userDocRef);\n\nconst handlePhotoURLChange = (newPhotoURL) => {\nsetImage(newPhotoURL);\n};\n\nconst unsubscribe = onSnapshot(userDocRef, (doc) => {\nconst newPhotoURL = doc.data()?.photoURL;\nhandlePhotoURLChange(newPhotoURL);\n});\n\nreturn () => unsubscribe();\n}, [user.uid, collectionName]);\n\nconst handleFileUpload = (e) => {\nconst file = e.target.files[0];\nsetSelectedFile(file);\nif (file) {\nsetSelectedFileName(file.name);\nconst reader = new FileReader();\nreader.onload = async (event) => {\nconst img = new Image();\nimg.onload = async function () {\nconsole.log('Image Size (Natural):', this.naturalWidth, 'x', this.naturalHeight);\nlet resizedImage = this;\n// Check if the image width exceeds the maximum width\nif (this.naturalWidth > mobileSize.width) {\nconst ratio = mobileSize.width / this.naturalWidth;\nconst newWidth = mobileSize.width;\nconst newHeight = this.naturalHeight * ratio;\n// Create a canvas and resize the image\nconst canvas = document.createElement('canvas');\ncanvas.width = newWidth;\ncanvas.height = newHeight;\nconst ctx = canvas.getContext('2d');\nctx.drawImage(this, 0, 0, newWidth, newHeight);\n// Convert the canvas back to an image\nresizedImage = new Image();\nresizedImage.src = canvas.toDataURL('image/jpeg');\n}\n// Set the resized image as the current image state\nsetImage(resizedImage.src);\n};\nimg.src = event.target.result;\n};\nreader.readAsDataURL(file);\n}\n};\n\nconst handleNewPhoto = () => {\nfileInputRef.current.click();\n};\n\nconst handleUpload = async () => {\n  const canvas = cropperRef.current?.getCanvas();\n  if (canvas) {\n      let maxWidth, maxHeight;\n      // Check if it's a mobile device\n      if (isMobileDevice()) {\n          maxWidth = window.innerWidth; // Use window.innerWidth for mobile\n          maxHeight = window.innerHeight; // Use window.innerHeight for mobile\n      } else {\n          maxWidth = 414; // Set your desired maxWidth for desktop\n          maxHeight = 736; // Set your desired maxHeight for desktop\n      }\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg', 1));\n      if (blob) {\n          const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n          const metadata = { contentType: 'image/jpeg' };\n          const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n          uploadTask.on(\n              'state_changed',\n              (snapshot) => {\n                  // Handle upload progress here\n              },\n              (error) => {\n                  // Handle upload error here\n              },\n              async () => {\n                  const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n                  if (downloadURL) {\n                      // Set the uploaded image as the source for the cropper\n                      setImage(downloadURL);\n                      await updateDoc(docRef, { photoURL: downloadURL });\n                      handleImageUpload(downloadURL);\n                      setIsUploadSuccess(true);\n                      setTimeout(() => {\n                          setIsUploadSuccess(false);\n                      }, 3000);\n                  }\n              }\n          );\n      }\n  }\n};\n\n\n\nconst handleDeletePhoto = async () => {\nif (user && user.uid) {\nconst defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\nawait updateDoc(docRef, { photoURL: defaultImageURL });\nsetPhotoURL(defaultImageURL);\n}\n};\n\n\n\nuseEffect(() => {\nconst handleResize = () => {\nsetMobileSize({ width: window.screen.width, height: window.screen.height });\n};\n\nwindow.addEventListener('resize', handleResize);\n\nreturn () => {\nwindow.removeEventListener('resize', handleResize);\n};\n}, []);\n\nuseEffect(() => {\nif (cropperRef.current && cropperRef.current.getCanvas()) {\nconst canvas = cropperRef.current.getCanvas();\nsetImageSize({ width: canvas.width, height: canvas.height });\n}\n}, [image]);\n\nreturn (\n<div className=\"modal-overlay\">\n<div className=\"modalcrop\">\n<div className=\"top-section\">\n<div style={{ marginRight: '10px' }}>Profile image</div>\n<button className=\"btn-crop\" onClick={closeModal}>\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n</svg>\n</button>\n</div>\n<div className='centerimage'>\n{image && (\n            <Cropper\n            className=\"cropper-container\"\n            defaultSize={{\n              width: 350,\n              height: 350,\n      }}\n              imageRestriction=\"fillArea\" // Ensure the image fills the available area\n              transformImage={true} // Enable image transformation\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n                handlers: {\n                  eastNorth: true,\n                  north: false,\n                  westNorth: true,\n                  west: false,\n                  westSouth: true,\n                  south: false,\n                  eastSouth: true,\n                  east: false,\n                }\n              }}\n              adjustStencil={false}\n            />\n        )}\n</div>\n<div className=\"button-section\">\n<button className=\"btn-crop\" onClick={handleNewPhoto}>\n<div className=\"button-content\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n</svg>\nNew Photo\n</div>\n</button>\n<button className=\"btn-crop\" onClick={handleUpload}>\n<div className=\"button-content\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\n</svg>\nUpload Photo\n</div>\n</button>\n{isUploadSuccess && (\n<div className=\"upload-success-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n</svg>\n</div>\n)}\n<button className=\"btn-crop\" onClick={handleDeletePhoto}>\n<div className=\"button-content\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n</svg>\nDelete Photo\n</div>\n</button>\n</div>\n</div>\n</div>\n);\n}\n\nexport default ImageCropper;\n\n"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","role","setRole","_useState29","_useState30","email","setEmail","_useState31","_useState32","_useState33","_useState34","description","setDescription","_useState35","_useState36","isModalOpen","setIsModalOpen","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","displayName","split","stop","_x","apply","arguments","handleImageUpload","_ref2","_callee2","downloadURL","_context2","updateDoc","updateProfile","then","console","log","catch","error","_x2","updateProfileInfo","_ref3","_callee3","updatedUser","_context3","abrupt","currentUser","concat","setDoc","document","getElementById","value","merge","t0","setTimeout","handleImageClick","_jsxs","className","children","_jsx","src","alt","onError","onClick","style","cursor","xmlns","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","process","color","placeholder","onChange","e","target","htmlFor","id","readOnly","rows","resize","ImageCropper","closeModal","handleImageError","collectionName","image","setImage","setSelectedFile","selectedFileName","setSelectedFileName","docRef","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","width","window","screen","height","mobileSize","setMobileSize","setImageSize","body","classList","add","remove","current","createElement","accept","addEventListener","handleFileUpload","onSnapshot","_doc$data","newPhotoURL","handlePhotoURLChange","file","files","name","reader","FileReader","onload","event","img","Image","resizedImage","ratio","newWidth","newHeight","canvas","this","naturalWidth","naturalHeight","getContext","drawImage","toDataURL","result","readAsDataURL","handleUpload","_ref4","_callee4","_cropperRef$current","blob","storageRef","metadata","uploadTask","_context4","getCanvas","innerWidth","innerHeight","Promise","resolve","toBlob","ref","storage","contentType","uploadBytesResumable","on","snapshot","getDownloadURL","handleDeletePhoto","_ref6","_callee5","defaultImageURL","_context5","handleResize","removeEventListener","marginRight","fill","Cropper","defaultSize","imageRestriction","transformImage","stencilComponent","CircleStencil","stencilProps","grid","handlers","eastNorth","north","westNorth","west","westSouth","south","eastSouth","east","adjustStencil","click"],"sourceRoot":""}