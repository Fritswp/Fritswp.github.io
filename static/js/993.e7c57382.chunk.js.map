{"version":3,"file":"static/js/993.e7c57382.chunk.js","mappings":"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","sources":["ChatBot/sharechat.js","ChatBot/ChatHistory.js","ChatBot/ExpertBox.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","../node_modules/react-bootstrap/esm/Fade.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { collection, getDocs, query, orderBy, doc, deleteDoc } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\n\nconst ShareChat = ({ selectedSession, closeShareChat, resetChat, closeChatHistoryOnMobile }) => {\n    const [sharedChatData, setSharedChatData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const shareChatRef = useRef(null);\n\n  useEffect(() => {\n    const fetchSharedChatData = async () => {\n      try {\n        if (selectedSession) {\n          const messagesCollectionRef = collection(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession, 'messages');\n          const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n          const messagesData = messagesSnapshot.docs.map((doc) => {\n            const { prompt, response } = doc.data();\n            return { prompt, response };\n          });\n          setSharedChatData(messagesData);\n          setIsLoading(false);\n          console.log('Fetched messages for discussionId:', selectedSession, messagesData);\n        }\n      } catch (error) {\n        console.error('Error fetching shared chat messages:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchSharedChatData();\n  }, [selectedSession]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (shareChatRef.current && !shareChatRef.current.contains(event.target)) {\n        // Clicked outside the ShareChat component\n        closeShareChat();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [closeShareChat]);\n\n  const handleDeleteSession = async () => {\n    try {\n      // Delete the selectedSession document from Firestore\n      const sessionDocRef = doc(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession);\n      await deleteDoc(sessionDocRef);\n      console.log('Discussion deleted:', selectedSession);\n      closeShareChat(); // Close the ShareChat component after deletion\n      resetChat(); // Reset the chat by setting selectedSession to null\n      startNewChat(); \n      closeChatHistoryOnMobile();\n    } catch (error) {\n      console.error('Error deleting discussion:', error);\n    }\n  };\n  \n  return (\n    <div ref={shareChatRef}   className=\"blurred-background\">\n    <div className=\"white-box-chathistory\">\n      <div className=\"go-back-svg\">\n        <button onClick={closeShareChat}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <h2>Share link to Chat</h2>\n      <div className='divider '></div>\n      <p>\n        Messages you send after creating your link won't be shared. Anyone with the URL will be able to view the shared chat.\n      </p>\n      <div className=\"shared-chat scroll-cat mb-5\">\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          sharedChatData.map((message, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>\n                <ReactMarkdown>{message.prompt}</ReactMarkdown>\n\n              </strong>\n              <ReactMarkdown>{message.response}</ReactMarkdown>\n              <div className='divider '></div>\n            </div>\n          ))\n        )}\n      </div>\n      <div className='delete-svg' >\n      <button className='delete-button' onClick={handleDeleteSession}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n</svg>\n</button>\n</div>\n    </div>\n    </div>\n  );\n};\n\nexport default ShareChat;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { auth, firestore, db } from '../firebase';\nimport { collection, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport ShareChat from './sharechat';\nimport LoadingCircle from '../components/LoadingCircle';\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick, resetChatMessages, selectedSession }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [isShareChatOpen, setIsShareChatOpen] = useState(false);\n  const [isLoadingSessions, setIsLoadingSessions] = useState(true);\n\n  const [selectedSessionForSVG, setSelectedSessionForSVG] = useState(null);\n\n  const groupSessionsByDate = (sessions) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n  \n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    yesterday.setHours(0, 0, 0, 0);\n  \n    const groupedSessions = {\n      today: [],\n      yesterday: [],\n      previously: [],\n    };\n  \n    sessions.forEach((session) => {\n      const sessionDate = session.timestamp?.seconds\n        ? new Date(session.timestamp.seconds * 1000)\n        : null;\n  \n      if (sessionDate) {\n        sessionDate.setHours(0, 0, 0, 0);\n  \n        if (sessionDate.getTime() === today.getTime()) {\n          groupedSessions.today.push(session);\n        } else if (sessionDate.getTime() === yesterday.getTime()) {\n          groupedSessions.yesterday.push(session);\n        } else {\n          groupedSessions.previously.push(session);\n        }\n      }\n    });\n  \n    return groupedSessions;\n  };\n  \n  \n  const [groupedSessions, setGroupedSessions] = useState({\n    today: [],\n    yesterday: [],\n    previously: [],\n  });\n  \n\n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n\n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n  \n        const q = query(\n          collection(firestore, 'users', userUid, 'discussions'),\n          orderBy('timestamp', 'desc')\n        );\n  \n        const unsubscribe = onSnapshot(q, (snapshot) => {\n          const sessionData = snapshot.docs.map((doc) => ({\n            id: doc.id,\n            timestamp: doc.data().timestamp,\n          }));\n  \n          setSessions(sessionData);\n          setGroupedSessions(groupSessionsByDate(sessionData));\n  \n  \n          if (sessionData.length > 0) {\n            const newlyCreatedDiscussion = sessionData[0].id;\n          }\n  \n          setIsLoadingSessions(false);\n        });\n  \n        // Make sure to unsubscribe when the component is unmounted or no longer needs updates\n        return () => unsubscribe();\n      } else {\n        setIsLoadingSessions(false);\n      }\n    } catch (error) {\n      setIsLoadingSessions(false);\n    }\n  };\n  \n\n\n  const startNewChat = () => {\n    resetChatMessages();\n    onSessionClick(null);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen); // Toggle the button visibility when dropdown is opened/closed\n  };\n\n  const handleClickOutside = (event) => {\n    if (\n      chatHistoryRef.current &&\n      !chatHistoryRef.current.contains(event.target) &&\n      !(event.target.tagName === \"svg\" && isShareChatOpen)\n    ) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n  \n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, isShareChatOpen]); // Add isShareChatOpen as a dependency\n  \n\n  const closeChatHistoryOnMobile = () => {\n    const isMobile = window.innerWidth <= 768;\n    if (isMobile) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n\n  const closeShareChat = () => {\n    setIsShareChatOpen(false);\n\n    setIsDropdownOpen(false);\n    setIsIconRotated(false);\n    startNewChat(); \n  };\n  \n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n     \n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isOpen && (\n        <>\n   \n        <div className='chatbot-previous'>\n          <div style={{ display: 'flex' }}>\n            <button\n              className=\"chat-history-btn\"\n              onClick={() => {\n                startNewChat();\n                if (window.innerWidth <= 768) {\n                  toggleDropdown();\n                }\n              }}\n            >\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n                <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n              </div>\n              <div className='ms-auto'>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                </svg>\n              </div>\n            </button>\n          </div>\n          <div className=\"content-container\">\n      {isLoadingSessions ? (\n        <div className=\"loading-container\">\n          <LoadingCircle />\n        </div>\n      ) : (\n      <>\n\n{groupedSessions.today.length > 0 && (\n  <>\n    <p className=\"text-sm text-muted mt-3 no-mb\">Today:</p>\n    <ul className=\"fade-ulist no-scroll\">\n      {groupedSessions.today.map((session) => (\n        <li\n          className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n          key={session.id}\n          onClick={() => {\n            onSessionClick(session.id);\n            if (window.innerWidth <= 768) {\n              toggleDropdown();\n            }\n          }}\n        >\n                <div className=\"text-container\">\n       {session.id}\n       </div>\n                <div className=\"svg-chathistory-container\">\n                <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={(e) => {\n    // Prevent toggleDropdown when clicking on the SVG\n    e.stopPropagation();\n    // Set the selected session for SVG click\n    setSelectedSessionForSVG(session.id);\n    setIsShareChatOpen(true);\n  }}\n>\n\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n              </li>\n              \n              ))}\n              </ul>\n            </>\n          )}\n\n{groupedSessions.yesterday.length > 0 && (\n  <>\n    <p className=\"text-sm text-muted mt-3 no-mb\">Yesterday:</p>\n    <ul className=\"fade-ulist no-scroll\">\n      {groupedSessions.yesterday.map((session) => (\n        <li\n          className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n          key={session.id}\n          onClick={() => {\n            onSessionClick(session.id);\n            if (window.innerWidth <= 768) {\n              toggleDropdown();\n            }\n          }}\n        >\n               <div className=\"text-container\">\n{session.id}\n      </div>\n                 <div className=\"svg-chathistory-container\">\n                 <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={(e) => {\n    // Prevent toggleDropdown when clicking on the SVG\n    e.stopPropagation();\n    // Set the selected session for SVG click\n    setSelectedSessionForSVG(session.id);\n    setIsShareChatOpen(true);\n  }}\n>\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n \n <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n </svg>\n </div>\n \n               </li>\n               \n               ))}\n               </ul>\n             </>\n           )}\n{groupedSessions.previously.length > 0 && (\n  <>\n    <p className=\"text-sm text-muted mt-3 no-mb\">Previously:</p>\n    <ul className=\"fade-ulist no-scroll\">\n      {groupedSessions.previously.map((session) => (\n        <li\n          className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n          key={session.id}\n          onClick={() => {\n            onSessionClick(session.id);\n            if (window.innerWidth <= 768) {\n              toggleDropdown();\n            }\n          }}\n        >\n       <div className=\"text-container\">\n{session.id}\n      </div>\n               <div className=\"svg-chathistory-container\">\n               <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={(e) => {\n    // Prevent toggleDropdown when clicking on the SVG\n    e.stopPropagation();\n    // Set the selected session for SVG click\n    setSelectedSessionForSVG(session.id);\n    setIsShareChatOpen(true);\n  }}\n>\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n             </li>\n                 ))}\n                 </ul>\n               </>\n            \n             )}\n             </>\n           )}\n        </div>\n   </div>\n{isShareChatOpen && (\n  <ShareChat\n            selectedSession={selectedSessionForSVG}\n            closeShareChat={() => {\n              setIsShareChatOpen(false);\n              setIsDropdownOpen(false);\n              setIsIconRotated(false);\n              startNewChat();\n              closeChatHistoryOnMobile(); // Close ChatHistory on mobile\n            }}\n            resetChat={resetChatMessages}\n            closeChatHistoryOnMobile={closeChatHistoryOnMobile} // Pass the callback\n          />)}  \n\n</>\n      )}\n    </div>\n  );\n};\n\n\nexport default ChatHistory;","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, firestore } from '../firebase';\nimport { collection, doc, setDoc } from 'firebase/firestore';\n\nconst ExpertBox = ({ isHovered, displayName, photoURL, skills, description, otherUserUID, occupation, onClose, selectedSession }) => {\n  const navigate = useNavigate();\n  const [currentUserUID, setCurrentUserUID] = useState(null);\n  const discussionID = selectedSession;\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUserUID(user.uid);\n        console.log('Current User UID in ExpertBox:', user.uid);\n      } else {\n        console.error('User is not authenticated in ExpertBox');\n        setCurrentUserUID(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [selectedSession]);\n\n  const handleChatButtonClick = async () => {\n    try {\n      if (!otherUserUID || !currentUserUID || !selectedSession) {\n        throw new Error('otherUserUID, currentUserUID, or selectedSession is undefined or null');\n      }\n  \n      // Combine currentUserUID and otherUserUID to create a unique discussionID\n      const discussionID = `${currentUserUID}_${otherUserUID}`;\n  \n      // Create a new document in the sharedConversations collection\n      const conversationRef = doc(collection(firestore, 'sharedConversations'), discussionID);\n      \n      // Use setDoc to create or update the document with the desired data\n      await setDoc(conversationRef, {\n        selectedSession,\n        currentUserUID,\n        otherUserUID,\n        // Add other fields as needed\n      });\n  \n      // Navigate to the chat page\n      navigate('/chat', {\n        state: {\n          otherUserUID,\n          selectedSession,\n          currentUserUID,\n        },\n      });\n  \n      console.log('New document created successfully.');\n    } catch (error) {\n      console.error('Error handling chat button click:', error.message);\n    }\n  };\n  \n\n  const handleEscapeKey = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isHovered) {\n      document.addEventListener('keydown', handleEscapeKey);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [isHovered]);\n\n  return (\n    isHovered && (\n      \n<div className=\"white-box\" >\n        <div className=\"go-back-svg go-back-svg-padding\">\n    <button onClick={onClose}>                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n\n          <h5 className=\"card-title\"> {displayName}</h5>\n  \n          <h5 className=\"card-title\">Expertise: {occupation}</h5>\n          \n  <div href={photoURL} className=\"d-md-inline\">\n    <img\n      src={photoURL}\n      alt=\"Profile Photo\"\n      className=\"searchimage card-img user-avatar large-avatar rounded-circle mb-2 mx-md-auto mx-0 \" \n    />\n  </div>\n  \n\n          <div className=\"about-container\">\n          <h5 className=\"card-title\"   style={{ display: 'inline' }}>About: </h5> \n<p style={{ display: 'inline' }}>{description}</p>\n</div>\n         \n\n          <div style={{ marginBottom: '0.4rem', marginTop: '0.4rem' }}>\n     \n          <p className=\"font-weight-bold mb-0\">Skills: {skills.join(', ')}</p>\n  {skills && skills.map((skills) => (\n    <button\n      key={skills}\n      type=\"button\"\n      className=\" containerhover keyword-container mb-2 mx-1 pb-1\"\n    >\n      {skills}\n    </button>\n  ))}\n\n</div>\n\n        <div>\n       \n        </div>\n        <div className=\"d-flex justify-content-center\">\n        <Link to=\"/chat\" state={{ otherUserUID, selectedSession }} onClick={handleChatButtonClick}>\n\n            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"me-2\">Message</span> \n            </button>\n            </Link>\n            <button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n              </svg>\n             <span className=\"me-2\">Connect</span> \n           </button>\n           \n        \n          </div>\n      </div>\n\n\n\n   \n    )\n  );\n};\n\nexport default ExpertBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, auth, getDocs } from \"../firebase\"; \nimport ExpertBox from './ExpertBox';\nimport LoadingCircle from '../components/LoadingCircle';\nimport Fuse from 'fuse.js';\n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic, firstUserMessage, selectedSession }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [showExpertBox, setShowExpertBox] = useState(false);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n  const [isLoadingExperts, setIsLoadingExperts] = useState(true);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [loadingExperts, setLoadingExperts] = useState([]);\n\n  const [lastClickedIndex, setLastClickedIndex] = useState(null);\n\n\n  const handleExpertBoxClose = () => {\n    setShowExpertBox(false);\n    setButtonClicked(false);\n    setIsHovered(null);\n  };\n\n  const handleMouseEnter = (index) => {\n    setIsHovered(index);\n  };\n\n  const handleButtonClick = (expertInfo, index) => {\n    if (index === isHovered) {\n      // Check if the device is mobile\n      const isMobile = window.innerWidth <= 768;\n\n      if (isMobile) {\n        // Open ExpertBox directly on mobile\n        setSelectedExpert(expertInfo);\n        setShowExpertBox(true);\n      } else {\n        // Toggle the hover-related logic for desktop\n        setButtonClicked(!buttonClicked);\n        setShowExpertBox(true);\n      }\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!buttonClicked && !showExpertBox) {\n      setShowExpertBox(false);\n      setIsHovered(null);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n    if (!isMobile) {\n      document.addEventListener('mouseenter', handleMouseEnter);\n      document.addEventListener('mouseleave', handleMouseLeave);\n    }\n\n    return () => {\n      if (!isMobile) {\n        document.removeEventListener('mouseenter', handleMouseEnter);\n        document.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n  }, [buttonClicked, showExpertBox]);\n\n\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen();\n  };\n\n  \n  \n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          setIsLoadingExperts(true);\n          let experts;\n  \n          if (selectedTopic) {\n            experts = await getMatchingExpertsForTopic(selectedTopic, selectedSession);\n          } else if (selectedSession) {\n            experts = await getMatchingExperts(selectedSession);\n          }\n  \n          setMatchingExperts(experts || []);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        } finally {\n          setIsLoadingExperts(false);\n          setLoadingExperts(Array(matchingExperts.length).fill(false));\n        }\n        \n      }\n    };\n\n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic, selectedSession]);\n\n  const getMatchingExperts = async (selectedSession) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const uid = auth.currentUser.uid;\n      const messagesCollection = collection(firestore, `users/${uid}/discussions/${selectedSession}/messages`);\n      const messagesSnapshot = await getDocs(messagesCollection);\n      const matchingExperts = [];\n      const processedExperts = new Set();\n\n      messagesSnapshot.forEach((messageDoc) => {\n        const messageData = messageDoc.data();\n        const { prompt, response } = messageData;\n\n        querySnapshot.forEach((doc) => {\n          const data = doc.data();\n          if (data && data.displayName && !processedExperts.has(doc.id)) {\n            const expertInfo = {\n              name: data.displayName,\n              photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n              skills: data.keywords || [],\n              description: data.description,\n              city: data.city,\n              occupation: data.occupation,\n              otherUserUID: doc.id,\n            };\n\n            const fieldsToCheck = ['city', 'occupation', 'description', 'labels'];\n\n            const fuseOptions = {\n              keys: fieldsToCheck,\n              includeScore: true,\n              includeMatches: true,\n              threshold: 0.7,\n            };\n\n            const fuse = new Fuse([data], fuseOptions);\n\n            const sessionMatch = selectedSession && data.occupation.toLowerCase().includes(selectedSession.toLowerCase());\n            const promptMatch = prompt && fuse.search(prompt).length > 0;\n            const responseMatch = response && fuse.search(response).length > 0;\n\n            if (sessionMatch || promptMatch || responseMatch) {\n              matchingExperts.push(expertInfo);\n              processedExperts.add(doc.id);\n            }\n          }\n        });\n      });\n\n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected session:\", error);\n      return [];\n    }\n  };\n\n  const getMatchingExpertsForTopic = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n  \n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n  \n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n  \n          if (\n            (firstUserMessage && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(firstUserMessage.toLowerCase())\n            )) ||\n            (selectedTopic && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(selectedTopic.name.toLowerCase())\n            )) ||\n            (!selectedTopic && !firstUserMessage)\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n  \n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected topic:\", error);\n      return [];\n    }\n  };\n  \n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      {isOpen && (\n        <>\n          <div>\n            <h4>Experts</h4>\n          </div>\n          <div className=\"\">\n      {isLoadingExperts ? (\n        <div className=\"loading-container\">\n          <LoadingCircle />\n        </div>\n        ) : (\n          matchingExperts.map((expertInfo, index) => (\n            <div key={index}>\n              <div className='d-flex'>\n              <button\n                className={`chat-btn expert-btn text-left ${showExpertBox && index === isHovered ? 'open-expert-box' : ''}`}\n                onMouseEnter={() => handleMouseEnter(index)}\n                onMouseLeave={handleMouseLeave}\n                onClick={() => handleButtonClick(expertInfo, index)}\n              >\n                <div className='d-flex flex-column'>\n                  <div className='button-container-login'>\n                    <img\n                      src={expertInfo.photoURL}\n                      alt=\"Avatar\"\n                      className=\"very-small-avatar rounded-circle\"\n                    />\n                    <div className=\"ml-2\">\n                      <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n                    </div>\n                  </div>\n                  {expertInfo.skills && (\n                    <div className=\"text-start mt-2\">\n                      <p className=\"font-weight-bold mb-0\">Skills: {expertInfo.skills.join(', ')}</p>\n                    </div>\n                  )}\n                </div>\n              </button>\n              </div>\n              {index === isHovered && (\n      <ExpertBox\n        isHovered={true}\n        displayName={expertInfo.name}\n        photoURL={expertInfo.photoURL}\n        skills={expertInfo.skills}\n        description={expertInfo.description}\n        city={expertInfo.city}\n        occupation={expertInfo.occupation}\n        otherUserUID={expertInfo.otherUserUID}\n        selectedSession={selectedSession}\n        onClose={handleExpertBoxClose}\n      />\n    )}\n            </div>\n          ))\n        )}\n     </div>\n      </>\n    )}\n  </div>\n);\n};\n\nexport default ChatExperts;\n","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ onSelectTopic, selectedTopic, toggleTopicPicker }) => {\n  const dropdownRef = useRef(null);\n  const [localSelectedTopic, setLocalSelectedTopic] = useState(null);\n  const pickModelDiv = useRef(null);\n  const [selectedTopicId, setSelectedTopicId] = useState(selectedTopic ? selectedTopic.id : null);\n  const [isHovering, setIsHovering] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleTopicSelection = (topic) => {\n    setLocalSelectedTopic(topic);\n    setSelectedTopicId(topic.id);\n    onSelectTopic(topic);\n    toggleTopicPicker();\n  };\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        toggleTopicPicker();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, toggleTopicPicker]);\n  \n  const TopicLabel = ({ category, handleTopicSelection, selectedTopicId }) => {\n    const [isHovering, setIsHovering] = useState(false);\n  \n    const handleLabelClick = () => {\n      handleTopicSelection(category);\n      setIsHovering(false);\n    };\n  \n    return (\n      <button\n        className=\"chat-dropdown-model-button\"\n        id={category.id}\n        onClick={handleLabelClick}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        {(category.id === selectedTopicId || category === selectedTopic) && (\n          <div className=\"activated-indicator-topic\"></div>\n        )}\n        {isHovering && category.id !== selectedTopicId && (\n          <div className=\"hover-indicator\"></div>\n        )}\n        <div className=\"icon-container\" style={{ width: '3rem' }}>\n          {category.icon}\n        </div>\n  \n        <div className=\"topic-text-container\">\n          <div className=\"title-container\"> {/* Add a container for the title */}\n            <h5 className=\"m-0\">{category.name}</h5>\n          </div>\n          <h6 className=\"text-muted  m-0\">{category.description}</h6>\n        </div>\n      </button>\n    );\n  };\n  \n  const filteredCategories = categories.filter((category) => {\n    return category.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n\n  return (\n    <div ref={dropdownRef} className={`chat-dropdown-model `}>\n    <div className=\"topic-picker-heading-container\">\n      <h3 className=\"topic-picker-heading\">Select a Topic</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Search topics\"\n        value={searchQuery}\n        onChange={handleSearch}\n        className=\"topic-picker-search-bar\"\n      />\n    </div>\n      <div className='card-profile-border chat-topics-selection  scroll-col'>\n       {filteredCategories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleTopicSelection={handleTopicSelection}\n            selectedTopicId={selectedTopicId}\n            selectedTopic={localSelectedTopic}\n            toggleTopicPicker={toggleTopicPicker}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TopicPicker;\n\n\n\n\n   \nconst categories = [\n  {\n    id: 'computerOption',\n    name: 'Computer',\n    description: 'All your IT solutions',\n    icon: '💻',\n  },\n  {\n    id: 'sportOption',\n    name: 'Sport',\n    description: \"Let Tio help you become fit\",\n    icon: '⚽',\n  },\n  {\n    id: 'foodCategory',\n    name: 'Food',\n    description: 'Ready to become head-chef?',\n    icon: '🍔',\n  },\n  {\n    id: 'healthCategory',\n    name: 'Health',\n    description: 'Here to help',\n    icon: '⛑️',\n  },\n  {\n    id: 'workCategory',\n    name: 'Work',\n    description: 'New Job or career advice',\n    icon: '💼',\n  },\n  {\n    id: 'hobbiesCategory',\n    name: 'Hobbies',\n    description: \"Discover what's possible\",\n    icon: '🎨',\n  },\n];\n\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy, serverTimestamp } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\nimport nlp from 'compromise/three';\nimport { Collapse } from 'react-bootstrap';\nimport { Fade } from 'react-bootstrap';\n\n\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('28px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n  const [sessionToUse, setSessionToUse] = useState(null);\n  const [showGreeting, setShowGreeting] = useState(true);\n  const [greetingVisible, setGreetingVisible] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null); \n  const [isFirstMessage, setIsFirstMessage] = useState(true);\n  const [businessVisible, setBusinessVisible] = useState(false);\n  const [showTopicPicker, setShowTopicPicker] = useState(false);\n\n\n\n  const fetchMessages = async (userUid, discussionId) => {\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: <ReactMarkdown>{prompt}</ReactMarkdown>, user: 'user' },\n          { text: <ReactMarkdown>{response}</ReactMarkdown>, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n    } catch (error) {\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (message.trim() !== '') {\n      setIsBotResponding(true);\n      setShowGreeting(false);\n      const uid = auth.currentUser.uid;\n  \n      try {\n        let currentSessionToUse = selectedSession;\n  \n        if (!currentSessionToUse) {\n          const words = message.split(' ').slice(0, 5); // Get the first five words of the message\n          currentSessionToUse = words.join(' '); // Join the words with a space\n  \n          await setDoc(doc(db, `users/${uid}`), {});\n  \n          const userDocRef = doc(db, `users/${uid}/discussions/${currentSessionToUse}`);\n          const discussionsSnapshot = await getDoc(userDocRef);\n  \n          if (!discussionsSnapshot.exists()) {\n            const timestamp = serverTimestamp();\n            await setDoc(userDocRef, { timestamp });\n  \n            setSessionToUse(currentSessionToUse);\n            setSelectedAndFetchMessages(currentSessionToUse);\n  \n            sessionStorage.setItem('currentDiscussionId', currentSessionToUse);\n          }\n        }\n  \n        const userDocRef = doc(db, `users/${uid}/discussions/${currentSessionToUse}`);\n        const messagesCollectionRef = collection(userDocRef, 'messages');\n        const timestamp = serverTimestamp();\n        const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message, timestamp });\n  \n  \n        setMessage('');\n        handleTextareaResize();\n        setChatMessages((prevChatMessages) => [\n          ...prevChatMessages,\n          { text: message, user: 'user' },\n          { text: '', user: 'bot', isTyping: true },\n        ]);\n\n        if (isFirstMessage) {\n          setIsFirstMessage(false);\n        }\n  \n        const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n          const rawBotResponse = docSnapshot.data()?.response;\n          if (rawBotResponse) {\n            unsubscribe();\n            const initialTypingSpeed = 20;\n            const speedIncreaseRate = 0.1;\n            const formattedBotResponse = rawBotResponse;\n            for (let i = 0; i < formattedBotResponse.length; i++) {\n              const currentTypingSpeed = Math.max(5, initialTypingSpeed - i * speedIncreaseRate);\n              await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n              setChatMessages((prevChatMessages) => [\n                ...prevChatMessages.slice(0, -1),\n                {\n                  text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                  user: 'bot',\n                },\n              ]);\n            }\n            setIsBotResponding(false);\n            if (window.innerWidth < 768 && textareaRef.current) {\n              textareaRef.current.blur();\n            }\n          }\n        });\n  \n        // Move setSelectedSession here, after the timestamp is set\n        setSelectedSession(currentSessionToUse); \n      } catch (error) {\n      }\n    }\n  };\n  \n\n  const handleSessionClick = async (discussionId) => {\n    setSelectedSession(discussionId);\n\n    // Store the selected session in sessionStorage\n    sessionStorage.setItem('lastDiscussionId', discussionId);\n\n    await fetchMessages(auth.currentUser.uid, discussionId);\n  };\n\n  \n  const setSelectedAndFetchMessages = async (sessionId) => {\n    setSelectedSession(sessionId);\n    sessionStorage.setItem('lastDiscussionId', sessionId);\n    await fetchMessages(sessionId); // Add a function to fetch messages for the selected session\n  };\n  \n  \n\n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    const fetchLastDiscussionId = async () => {\n      try {\n        if (auth.currentUser) {\n          const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n  \n          if (lastDiscussionId) {\n          } else {\n          }\n        } else {\n        }\n      } catch (error) {\n      }\n    };\n  \n    fetchLastDiscussionId(); \n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '28px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('28px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  const resetChatMessages = () => {\n    setChatMessages([]);\n  };\n\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      if (auth.currentUser) {\n        setCurrentUser(auth.currentUser);\n        setGreetingVisible(true);\n  \n        setTimeout(() => {\n          setBusinessVisible(true);\n        }, 700); // Set businessVisible to true after a 1.5-second delay\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  \n  \n  \n  const getGreeting = (hour) => {\n    if (hour >= 5 && hour < 12) {\n      return \"Good morning\";\n    } else if (hour >= 12 && hour < 17) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  \n  const toggleTopicPicker = () => {\n    setShowTopicPicker(!showTopicPicker);\n  };\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    toggleTopicPicker();\n  };\n  \n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} onSessionClick={handleSessionClick} selectedSession={selectedSession}  resetChatMessages={resetChatMessages}/>\n<div className='chat-display'>\n{showTopicPicker && (\n  <TopicPicker\n  onSelectTopic={handleTopicSelection}\n  selectedTopic={selectedTopic}\n  toggleTopicPicker={toggleTopicPicker}\n/>\n\n)}        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\" ref={chatContainerRef}>\n\n  {showGreeting && currentUser && (\n  <div className='chat-greeting-flex'>\n    <>\n      <Fade\n        in={greetingVisible}\n        appear={true}\n        timeout={1500}\n        className=\"greeting-fade\" // Add a custom class for the greeting\n      >\n        <div className=\"chat-greeting\">\n          <h1>\n            {getGreeting(new Date().getHours())}, {currentUser.displayName}\n          </h1>\n        </div>\n      </Fade>\n      <Fade\n        in={businessVisible}\n        appear={true}\n        timeout={1000}\n        delay={500}\n        className=\"business-fade\" // Add a custom class for the \"Let's get down to business\" text\n      >\n        <h3>Let's get down to business</h3>\n      </Fade>\n    </>\n  </div>\n)}\n\n\n{chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {!isFirstMessage && chatMessage.isTyping ? ( // Check if it's the first message\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n\n    {chatMessage.user !== 'bot' && currentUser && ( // Check if currentUser is available\n      <div className=\"bot-message\"> {/* Define a CSS class for user's message */}\n        <div className=\"bot-avatar\">\n          <img\n            className=\"user-avatar\"\n            src={currentUser.photoURL} // Use currentUser.photoURL as the source\n            alt=\"User Avatar\"\n          />\n        </div>\n        <div className=\"user-details\">\n          <div className=\"bot-name\">You</div>\n          <div className=\"chat-text\">{chatMessage.text}</div>\n        </div>\n      </div>\n    )}\n  </div>\n))}\n\n      </div>\n      <div className='chatui-wrapper'>\n      <div className='spacing'>\n\n\n      <button type=\"button\" className=\"new-topic-btn rounded-pill\"\n      onClick={toggleTopicPicker}\n      >\n  \n<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 -960 960 960\"  color=\"white\"\nfill=\"none\"\nstrokeWidth={1}\nstroke=\"white\"\nheight=\"30\"\nwidth=\"30\"\n>\n  <path fill=\"white\" d=\"M308.001-180.309v-406.998q0-27.023 18.5-45.857 18.5-18.835 45.423-18.835h407.767q26.527 0 45.417 18.891 18.891 18.89 18.891 45.417v264.306q0 12.855-4.616 24.504-4.615 11.65-14.211 21.246L682.365-134.828q-9.596 9.596-21.246 14.211-11.649 4.616-24.504 4.616H372.309q-26.527 0-45.417-18.891-18.891-18.89-18.891-45.417Zm-190-515.767q-4.615-25.923 11.135-48.505 15.75-22.581 41.711-27.033l400.383-71.385q25.923-4.615 48.004 11.135t26.534 41.711l10.231 58.462h-52.23L594-783.538q-.769-4.231-4.616-6.731-3.846-2.5-8.462-1.731l-401.537 71.769q-5.385.769-8.077 5-2.693 4.231-1.923 9.616l58.924 330.313v127.223q-14.846-5.846-25.385-18.581-10.538-12.735-13.538-29.034l-71.385-400.382ZM360-587.691v407.382q0 5.385 3.462 8.847 3.462 3.462 8.847 3.462H624l168-168v-251.691q0-5.385-3.462-8.847-3.462-3.462-8.847-3.462H372.309q-5.385 0-8.847 3.462-3.462 3.462-3.462 8.847ZM576-384Zm-25.747 25.999V-276q0 11.05 7.502 18.524 7.503 7.475 18.492 7.475t18.41-7.475q7.42-7.474 7.42-18.524v-82.001h81.689q10.984 0 18.609-7.418 7.624-7.418 7.624-18.384 0-10.966-7.475-18.455-7.474-7.49-18.524-7.49h-82.001v-82.168q0-11.085-7.478-18.584-7.479-7.499-18.534-7.499-11.056 0-18.521 7.499-7.465 7.499-7.465 18.584v82.168H468q-11.05 0-18.524 7.503-7.475 7.503-7.475 18.258 0 11.056 7.499 18.521 7.499 7.465 18.584 7.465h82.169Z\"/></svg>\n\n\n  <span className=\"button-text\">Topic</span>\n</button>\n\n \n  </div>\n      <div className=\"chatui-container\">\n\n      <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col message-input no-left\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (message.trim() !== '') {\n        handleSendMessage();\n      }\n    }\n  }}\n  disabled={isBotResponding}  // Ensure that the disabled prop is bound to isBotResponding\n/>\n\n<button\n  aria-label=\"Send Message\"\n  className=\"svg-container-chat send-btn\"\n  disabled={isBotResponding || message.trim() === ''}\n  onClick={() => {\n    if (message.trim() !== '') {\n      handleSendMessage(selectedSession);\n    }\n  }}\n>\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n       \n<ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} selectedSession={selectedSession} />\n      </div>\n      \n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","selectedSession","closeShareChat","resetChat","closeChatHistoryOnMobile","_useState","useState","_useState2","_slicedToArray","sharedChatData","setSharedChatData","_useState3","_useState4","isLoading","setIsLoading","shareChatRef","useRef","useEffect","fetchSharedChatData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messagesCollectionRef","messagesSnapshot","messagesData","wrap","_context","prev","next","collection","firestore","auth","currentUser","uid","getDocs","query","orderBy","sent","docs","map","doc","_doc$data","data","prompt","response","console","log","t0","error","stop","apply","arguments","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDeleteSession","_ref3","_callee2","sessionDocRef","_context2","deleteDoc","startNewChat","_jsx","ref","className","children","_jsxs","onClick","xmlns","fill","viewBox","strokeWidth","color","stroke","strokeLinecap","strokeLinejoin","d","LoadingCircle","message","index","ReactMarkdown","height","width","isOpen","toggleOpen","onSessionClick","resetChatMessages","isDropdownOpen","setIsDropdownOpen","setIsIconRotated","chatHistoryRef","_useState5","_useState6","setSessions","_useState7","_useState8","isShareChatOpen","setIsShareChatOpen","_useState9","_useState10","isLoadingSessions","setIsLoadingSessions","_useState11","_useState12","selectedSessionForSVG","setSelectedSessionForSVG","groupSessionsByDate","sessions","today","Date","setHours","yesterday","setDate","getDate","groupedSessions","previously","forEach","session","_session$timestamp","sessionDate","timestamp","seconds","getTime","push","_useState13","_useState14","setGroupedSessions","fetchSessions","user","userUid","q","unsubscribe","onSnapshot","snapshot","sessionData","id","length","abrupt","toggleDropdown","tagName","isMobile","window","innerWidth","concat","_Fragment","style","display","alignItems","src","process","alt","marginLeft","e","stopPropagation","cx","cy","r","ShareChat","isHovered","displayName","photoURL","skills","description","otherUserUID","occupation","onClose","navigate","useNavigate","currentUserUID","setCurrentUserUID","onAuthStateChanged","handleChatButtonClick","_discussionID","conversationRef","Error","discussionID","setDoc","state","handleEscapeKey","key","href","marginBottom","marginTop","join","type","Link","to","fillRule","clipRule","selectedTopic","firstUserMessage","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","setIsHovered","showExpertBox","setShowExpertBox","setSelectedExpert","isLoadingExperts","setIsLoadingExperts","_useState15","_useState16","buttonClicked","setButtonClicked","_useState17","_useState18","setLoadingExperts","_useState19","_useState20","handleExpertBoxClose","handleMouseEnter","handleMouseLeave","fetchMatchingExperts","experts","getMatchingExpertsForTopic","getMatchingExperts","Array","finish","expertsCollection","querySnapshot","messagesCollection","_matchingExperts","processedExperts","Set","messageDoc","messageData","has","expertInfo","name","keywords","city","fuseOptions","keys","includeScore","includeMatches","threshold","fuse","Fuse","sessionMatch","toLowerCase","includes","promptMatch","search","responseMatch","add","_x","_ref4","_callee3","_matchingExperts2","_context3","fieldsToCheck","some","field","_x2","_x3","onMouseEnter","onMouseLeave","handleButtonClick","ExpertBox","onSelectTopic","toggleTopicPicker","dropdownRef","localSelectedTopic","setLocalSelectedTopic","selectedTopicId","setSelectedTopicId","searchQuery","setSearchQuery","handleTopicSelection","topic","TopicLabel","category","isHovering","setIsHovering","icon","filteredCategories","categories","filter","placeholder","value","onChange","fadeStyles","_fadeStyles","_defineProperty","ENTERING","ENTERED","Fade","React","_ref$transitionClasse","transitionClasses","onEnter","rest","_objectWithoutProperties","_excluded","props","_objectSpread","in","timeout","mountOnEnter","unmountOnExit","appear","handleEnter","useCallback","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","isHistoryOpen","setIsHistoryOpen","isExpertsOpen","setIsExpertsOpen","chatContainerRef","isBotResponding","setIsBotResponding","setSelectedSession","setSelectedTopic","setSessionToUse","_useState21","_useState22","showGreeting","setShowGreeting","_useState23","_useState24","greetingVisible","setGreetingVisible","_useState25","_useState26","setCurrentUser","_useState27","_useState28","isFirstMessage","setIsFirstMessage","_useState29","_useState30","businessVisible","setBusinessVisible","_useState31","_useState32","showTopicPicker","setShowTopicPicker","fetchMessages","discussionId","text","isTyping","flat","handleSendMessage","currentSessionToUse","words","_userDocRef","_timestamp","userDocRef","botMessageDocRef","_context4","trim","split","slice","db","getDoc","exists","serverTimestamp","setSelectedAndFetchMessages","sessionStorage","setItem","addDoc","handleTextareaResize","prevChatMessages","_toConsumableArray","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","currentTypingSpeed","Math","max","Promise","resolve","setTimeout","delegateYield","blur","handleSessionClick","_callee4","_context5","_x4","_ref5","_callee5","sessionId","_context6","_x5","removeItem","fetchLastDiscussionId","_ref6","_callee6","_context7","getItem","textarea","newHeight","min","scrollHeight","handleKeyDown","shiftKey","preventDefault","textareaElement","scrollTop","fetchCurrentUser","_ref7","_callee7","_context8","hour","ChatHistory","TopicPicker","getHours","delay","chatMessage","autoComplete","inputMode","onKeyDown","disabled","ChatExperts"],"sourceRoot":""}