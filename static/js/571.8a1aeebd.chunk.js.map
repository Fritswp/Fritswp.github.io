{"version":3,"file":"static/js/571.8a1aeebd.chunk.js","mappings":"8NAmMA,MA/LA,SAAkBA,GAAQ,IAADC,EAAAC,EACfC,EAAoCH,EAApCG,gBAAiBC,EAAmBJ,EAAnBI,eACzBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAMhBG,EAAe,YACnBC,EAAAA,EAAAA,IAA2BC,EAAAA,GAAMZ,EAAOI,GACrCS,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAeC,KAC5BC,QAAQC,IAAI,0BAA2BF,GAEnCpB,GACFA,GAEJ,IACCuB,OAAM,SAACV,GAENC,EAAS,mCACX,GACJ,EAcIU,EAA6B,SAACC,GAClB,UAAdA,EAAMC,KAEVX,GAEA,EA0BA,OAEAY,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,GAAG,WAAUC,SAAA,EACtCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaE,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,UAElCC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBE,SAAC,oCAGtCC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBE,UACjCC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,WAAUE,SAAC,kFAM9BH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcE,SAAA,EAE7BH,EAAAA,EAAAA,MAAA,UAAQE,GAAG,eAAeD,UAAU,uBAAuBI,QAzCrC,kBAAAnC,EAAAA,IAAAoC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAjB,EAAAC,EAAAiB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEQC,EAAAA,EAAAA,IAAmBzB,EAAAA,GAAM0B,EAAAA,IAAgB,KAAD,EAA/DxB,EAAcoB,EAAAK,KACdxB,EAAOD,EAAeC,KAGtBiB,EAAYjB,EAAKyB,YAAYC,MAAM,KAAK,GAG9CzB,QAAQC,IAAI,sCAAuCe,GAAWE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAG9DlB,QAAQR,MAAK0B,EAAAQ,IAAM,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,mBAEtBa,MAAA,KAAAC,UAAA,EA2BqFC,KAAK,SAAQrB,SAAA,EACnGC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,OAAOwB,MAAO,CAAEC,WAAY,OAAQvB,SAAC,0BACrDC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,OAAME,UAEtBH,EAAAA,EAAAA,MAAA,OAAK2B,MAAM,6BAA6BC,QAAQ,cAAcC,OAAO,KAAKC,MAAM,KAAI3B,SAAA,EACpFC,EAAAA,EAAAA,KAAA,QAAM2B,KAAK,UAAUC,EAAE,gEACvB5B,EAAAA,EAAAA,KAAA,QAAM2B,KAAK,UAAUC,EAAE,+DACvB5B,EAAAA,EAAAA,KAAA,QAAM2B,KAAK,UAAUC,EAAE,0DACvB5B,EAAAA,EAAAA,KAAA,QAAM2B,KAAK,UAAUC,EAAE,uEAMvBhC,EAAAA,EAAAA,MAAA,UAAQE,GAAG,iBAAiBD,UAAU,yBAAyBI,QAxCvC,kBAAAlC,EAAAA,IAAAmC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,IAAA,OAAA1B,EAAAA,EAAAA,KAAAI,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,GAErBC,EAAAA,EAAAA,IAAmBzB,EAAAA,GAAM6C,EAAAA,IAAkB,KAAD,EAAAD,EAAApB,KAAA,eAAAoB,EAAArB,KAAA,EAAAqB,EAAAd,GAAAc,EAAA,SAEhDxC,QAAQR,MAAKgD,EAAAd,IAAM,wBAAAc,EAAAb,OAAA,GAAAY,EAAA,mBAElBX,MAAA,KAAAC,UAAA,EAkC0FC,KAAK,SAAQrB,SAAA,EACxGC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,OAAME,UAEtBC,EAAAA,EAAAA,KAAA,OAAK2B,KAAK,OAAOF,OAAO,KAAKD,QAAQ,YAAYE,MAAM,KAAKH,MAAM,6BAA4BxB,UAC9FC,EAAAA,EAAAA,KAAA,QAAM4B,EAAE,6SAA6SD,KAAK,iBAG1T3B,EAAAA,EAAAA,KAAA,QAAMH,UAAU,OAAOwB,MAAO,CAAEC,WAAY,OAAQvB,SAAC,+BAIrDH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYE,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,QACLY,YAAY,QACZlC,GAAG,mBACHD,UAAU,sCACVoC,aAAa,QACbC,SAAU,SAACC,GAAC,OAAK5D,EAAS4D,EAAEC,OAAOC,MAAM,EACzCC,UAAW7C,EACX4B,MAAO,CAAEkB,SAAU,aAGvBvC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,WACLY,YAAY,WACZlC,GAAG,sBACHD,UAAU,sCACVoC,aAAa,eACbC,SAAU,SAACC,GAAC,OAAKxD,EAAYwD,EAAEC,OAAOC,MAAM,EAC5CC,UAAW7C,EACX4B,MAAO,CAAEkB,SAAU,gBAMvB3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBE,SAAA,CAAC,KAC9BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,UAElCC,EAAAA,EAAAA,KAAA,UACEF,GAAG,eACHD,UAAU,gBACVuB,KAAK,SACLnB,QAASjB,EAAae,SACvB,cAKHC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,UAClCC,EAAAA,EAAAA,KAAA,UACEF,GAAG,uBACHD,UAAU,gBACVuB,KAAK,SACLnB,QAASpC,EAAM2E,cAAczC,SAC9B,uBAWLC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOE,UACtBH,EAAAA,EAAAA,MAAA,KAAGC,UAAU,WAAUE,SAAA,CAAC,oCACQC,EAAAA,EAAAA,KAAA,KAAGyC,KAAK,sBAAsBL,OAAO,SAASM,IAAI,WAAU3C,SAAC,iBAAgB,eACpGC,EAAAA,EAAAA,KAAA,KAAGyC,KAAK,wBAAwBL,OAAO,SAASM,IAAI,WAAU3C,SAAC,mBAAkB,UAG1FC,EAAAA,EAAAA,KAAA,OAAAD,SACGjB,IACCkB,EAAAA,EAAAA,KAAA,KAAGH,UAAU,WAAWwB,MAAO,CAAEsB,MAAO,OAAQ5C,UAC9CC,EAAAA,EAAAA,KAAA,KAAGyC,KAAK,IAAIxC,QA7KkB,WAChCjC,GACF,EA2KoDqD,MAAO,CAAEsB,MAAO,MAAOC,eAAgB,QAAS7C,SAC7FjB,UAST,ECZA,MAjLA,SAAkBhB,GAAiC,IAA9B+E,EAAQ/E,EAAR+E,SAAUC,EAAehF,EAAfgF,gBAC7B5E,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCoC,EAASlC,EAAA,GAAE2E,EAAY3E,EAAA,GAC9BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCwE,EAAQvE,EAAA,GAAEwE,EAAWxE,EAAA,GAC5BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BN,EAAKO,EAAA,GAAEN,EAAQM,EAAA,GACtBqE,GAAgC/E,EAAAA,EAAAA,UAAS,IAAGgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAArCxE,EAAQyE,EAAA,GAAExE,EAAWwE,EAAA,GAC5BC,GAA0BjF,EAAAA,EAAAA,UAAS,MAAKkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAAjCtE,EAAKuE,EAAA,GAAEtE,EAAQsE,EAAA,GACtBC,GAA8CnF,EAAAA,EAAAA,WAAS,GAAMoF,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAArCE,GAAFD,EAAA,GAAoBA,EAAA,IAC1CE,GAAsDtF,EAAAA,EAAAA,UAAS,IAAGuF,GAAArF,EAAAA,EAAAA,GAAAoF,EAAA,GAA3DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAM5CG,EAAyB,WAC7B,IAAMC,EAA2BC,aAAY,WAC3C7E,EAAAA,GAAK8E,YACFC,SACA9E,MAAK,WACAD,EAAAA,GAAK8E,YAAYE,gBACnBC,cAAcL,GACdN,GAAmB,GACnBI,EAAuB,+BACvBd,IAEJ,IACCtD,OAAM,SAACV,GACNQ,QAAQR,MAAM,wBAAyBA,EACzC,GACJ,GAAG,KAEH,OAAO,kBAAMqF,cAAcL,EAA0B,CACvD,EAEMM,EAAe,WAvBnBrF,EAAS,MA0BJuB,GAAc0C,GAAa1E,GAAUI,GAK1C2F,EAAAA,EAAAA,IAA+BnF,EAAAA,GAAMZ,EAAOI,GACzCS,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAeC,KACtBiF,EAAQ,GAAAC,OAAMjE,EAAS,KAAAiE,OAAIvB,IAEjCwB,EAAAA,EAAAA,IAAcnF,EAAM,CAAEyB,YAAawD,IAChCnF,MAAK,YACJsF,EAAAA,EAAAA,IAAsBpF,GACnBF,MAAK,WACJyE,EAAuB,gFACvBC,GACF,IACCrE,OAAM,SAACV,GACNQ,QAAQR,MAAM,oCAAqCA,GACnDC,EAAS,0DACX,GACJ,IACCS,OAAM,SAACV,GACNQ,QAAQR,MAAM,0BAA2BA,GACzCC,EAAS,0CACX,GACJ,IACCS,OAAM,SAACV,GACNQ,QAAQR,MAAM,uBAAwBA,GACtCC,EAAS,oCACX,IA7BAA,EAAS,6BA8Bb,EACM2F,EAAqB,SAAChF,GAC1B,GAAkB,UAAdA,EAAMC,IAAiB,CACzByE,IAGA,IAAMO,EAAeC,SAASC,eAAe,aACzCF,GACFA,EAAaG,OAEjB,CACF,EAQA,OANAC,EAAAA,EAAAA,YAAU,WACJ7F,EAAAA,GAAK8E,aACPH,GAEJ,GAAG,CAACf,KAGF9C,EAAAA,EAAAA,KAAA,OAAAD,UACEH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,GAAG,YAAWC,SAAA,EACvCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaE,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASE,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,iBAAiBI,QAAS4C,EAAS9C,UACnDC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,wBAEfG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaE,UAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBE,SAAC,oBAI1CC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBE,SAAC,+DAEtCC,EAAAA,EAAAA,KAAA,QAAMF,GAAG,aAAYC,UACnBH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaE,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,UACpCC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACLY,YAAY,aACZlC,GAAG,kBACHD,UAAU,sCACVwC,MAAO/B,EACP4B,SAAU,SAACC,GAAC,OAAKY,EAAaZ,EAAEC,OAAOC,MAAM,EAC7CC,UAAWoC,OAGf1E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,UACpCC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACLY,YAAY,YACZlC,GAAG,iBACHD,UAAU,sCACVwC,MAAOW,EACPd,SAAU,SAACC,GAAC,OAAKc,EAAYd,EAAEC,OAAOC,MAAM,EAC5CC,UAAWoC,OAGf1E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,QACLY,YAAY,gBACZlC,GAAG,cACHD,UAAU,sCACVoC,aAAa,QACbI,MAAO/D,EACP4D,SAAU,SAACC,GAAC,OAAK5D,EAAS4D,EAAEC,OAAOC,MAAM,EACzCC,UAAWoC,OAGf1E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,WACLY,YAAY,WACZlC,GAAG,iBACHD,UAAU,sCACVoC,aAAa,eACbI,MAAO3D,EACPwD,SAAU,SAACC,GAAC,OAAKxD,EAAYwD,EAAEC,OAAOC,MAAM,EAC5CC,UAAWoC,OAIf1E,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAwBwB,MAAO,CAAE2D,cAAe,QAASjF,UACtEH,EAAAA,EAAAA,MAAA,UACEwB,KAAK,SACLvB,UAAU,yCACVwB,MAAO,CAAEK,MAAO,uBAChBzB,QAASmE,EACTtE,GAAG,YAAWC,SAAA,CACf,WACQC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,6BAGxBD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACGjB,IAASkB,EAAAA,EAAAA,KAAA,KAAGqB,MAAO,CAAEsB,MAAO,OAAQ5C,SAAEjB,KAErCkB,EAAAA,EAAAA,KAAA,KAAGqB,MAAO,CAAEsB,MAAO,SAAU5C,SAAE4D,gBAU/C,E,UC5EA,MAnGA,SAAoB7F,GAAgB,IAAb+E,EAAQ/E,EAAR+E,SACrB3E,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDyG,EAAYxG,EAAA,GAAEyG,EAAezG,EAAA,GACpCG,GAAoCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3CuG,EAAUtG,EAAA,GAAEuG,EAAavG,EAAA,GAG1BwG,IAFiBC,EAAAA,EAAAA,QAAO,MAEF,WAC1B,IAAMpG,GAAOqG,EAAAA,EAAAA,OAEbC,EAAAA,EAAAA,IAAuBtG,EAAMZ,GAC1Ba,MAAK,WAEJ+F,GAAgB,GAChBE,EAAc,KAChB,IACC5F,OAAM,SAACV,GACYA,EAAM2G,KAAxB,IACMC,EAAe5G,EAAM6G,QAE3BT,GAAgB,GAChBE,EAAcM,EAChB,GACJ,GAEME,EAAiB,SAACzD,GACtB,GAAc,UAAVA,EAAExC,IAAiB,CACrB0F,IAGA,IAAMV,EAAeC,SAASC,eAAe,eACzCF,GACFA,EAAaG,OAEjB,CACF,EAIA,OACFlF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,GAAG,WAAUC,SAAA,EACtCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaE,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASE,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,iBAAiBI,QAAS4C,EAAS9C,UACnDC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,wBAEfG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaE,UAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBE,SAAC,0BAI1CC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,sBAAqBE,SAAC,mEAGtCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,cAAaE,UACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,UAClCC,EAAAA,EAAAA,KAAA,SACEoB,KAAK,QACLY,YAAY,gBACZlC,GAAG,sBACHD,UAAU,sCACVwC,MAAO/D,EACP4D,SAAU,SAACC,GAAC,OAAK5D,EAAS4D,EAAEC,OAAOC,MAAM,EACzCwD,WAAYD,SAKlB5F,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBE,UACpCC,EAAAA,EAAAA,KAAA,UACIF,GAAG,cACHD,UAAU,gBACVuB,KAAK,SACLnB,QAASoF,EACTQ,WAAYD,EAAgB7F,SAC7B,aAKFkF,IACCjF,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGH,UAAU,WAAWwB,MAAO,CAAEsB,MAAO,SAAU5C,UACtDC,EAAAA,EAAAA,KAAA,QACEC,QAAS4C,EACTxB,MAAO,CAAEsB,MAAO,QAASmD,OAAQ,WAAY/F,SAC9C,qEAMAoF,IACCnF,EAAAA,EAAAA,KAAA,KAAIH,UAAU,WAAYwB,MAAO,CAAEsB,MAAO,OAAQ5C,SAAC,mDAI3D,ECfA,MAhFA,WACE,IAAA7B,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD6H,EAAY3H,EAAA,GAAE4H,EAAe5H,EAAA,GACpCI,GAA0CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlDgE,EAAa/D,EAAA,GAAEwH,EAAgBxH,EAAA,GACtCG,GAA8CT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtDZ,EAAea,EAAA,GAAEqH,EAAkBrH,EAAA,GAEpCsH,EAAiB,WACrBH,GAAgB,GAChBC,GAAiB,GACjBC,GAAmB,EACrB,EAOME,EAAe,WACnBD,IACAD,GAAmB,EACrB,EAEMG,EAAyB,WAC7BF,IACAH,GAAgB,EAClB,EAEMM,GAAWhB,EAAAA,EAAAA,QAAO,MA4BxB,OA1BAP,EAAAA,EAAAA,YAAU,WACR,IAAMa,EAAiB,SAAClG,GACJ,WAAdA,EAAMC,KACRwG,GAEJ,EAEMI,EAAqB,SAAC7G,GAExB4G,EAASE,UACRF,EAASE,QAAQC,SAAS/G,EAAM0C,SACG,mBAApC1C,EAAM0C,OAAOsE,aAAa,OAE1BP,GAEJ,EAKA,OAHAQ,OAAOC,iBAAiB,UAAWhB,GACnChB,SAASgC,iBAAiB,YAAaL,GAEhC,WACLI,OAAOE,oBAAoB,UAAWjB,GACtChB,SAASiC,oBAAoB,YAAaN,EAC5C,CACF,GAAG,KAGD3G,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CAACC,mBAAoBV,KAE5BzG,EAAAA,EAAAA,MAAA,OAAKoH,IAAKV,EAASvG,SAAA,CAChBgG,IACC/F,EAAAA,EAAAA,KAACiH,EAAQ,CACPzE,cAlDS,WACjB2D,IACAF,GAAiB,EACnB,EAgDUjI,gBAAiBoI,EACjBnI,eAAgBkI,IAGnB3D,IACCxC,EAAAA,EAAAA,KAACkH,EAAS,CACRrE,SAAUwD,EACVvD,gBAAiB,WAAO,EACxB9E,gBAAiBoI,IAIpBpI,IAAmBgC,EAAAA,EAAAA,KAACmH,EAAW,CAACtE,SAAUwD,SAInD,C","sources":["boxes/LoginBox.js","boxes/SignUpBox.js","boxes/PasswordBox.js","boxes/PopupContainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { auth, googleProvider, facebookProvider } from '../firebase';\nimport { signInWithRedirect, signInWithEmailAndPassword } from 'firebase/auth';\n\nfunction LoginBox(props) {\n  const { showPasswordBox, onLoginSuccess } = props; // Destructure onLoginSuccess from props\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleForgotPasswordClick = () => {\n    showPasswordBox(); // Call the passed function to open the password reset popup\n  };\n\n  const handleSignIn = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        console.log('Signed in successfully:', user);\n\n        if (onLoginSuccess) {\n          onLoginSuccess(); // Invoke the callback here\n        }\n      })\n      .catch((error) => {\n        // Handle sign-in error\n        setError('Forgot your password? Click here');\n      });\n  };\n\n\nconst handleLogout = () => {\nauth\n.signOut()\n.then(() => {\nconsole.log('Signed out successfully');\n})\n.catch((error) => {\nconsole.error('Error signing out:', error);\n});\n};\n\nconst handlePasswordInputKeyDown = (event) => {\nif (event.key === 'Enter') {\n// If Enter key is pressed in the password input field, submit the form\nhandleSignIn();\n}\n};\n\n\nconst signInWithGoogle = async () => {\n  try {\n    const userCredential = await signInWithRedirect(auth, googleProvider);\n    const user = userCredential.user;\n\n    // Access the user's first name (assuming it's available in the user's profile)\n    const firstName = user.displayName.split(' ')[0]; // Assuming the first name is the first part of the display name\n\n    // Now you can use the firstName variable to display the user's first name\n    console.log('Signed in successfully with Google:', firstName);\n\n  } catch (err) {\n    console.error(err);\n  }\n};\nconst signInWithFacebook = async () => {\ntry {\nawait signInWithRedirect(auth, facebookProvider);\n} catch (err) {\nconsole.error(err);\n}\n};\n\nreturn (\n  \n<div className=\"login-box\" id=\"loginBox\"> \n  <div className=\"log-in-text\">\n    <div className=\"log-in-text-opening\">\n      {/* Main heading */}\n      <h4 className=\"log-in-text-opening\">Log in or sign up in seconds</h4>\n    </div>\n    {/* Subheading */}\n    <h6 className=\"log-in-text-closing\">\n      <p className=\"fw-light\">Log in with your email or another service to continue with TioAssist.io</p>\n    </h6>\n  </div>\n\n\n{/* Social media buttons section */}\n<div className=\"social-login\">\n{/* Google sign-in button */}\n<button id=\"google-login\" className=\"social-button google\" onClick={signInWithGoogle} type=\"button\">\n<span className=\"text\" style={{ fontWeight: '500' }}>Continue with Google</span>\n<span className=\"icon\">\n{/* Google icon */}\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height=\"35\" width=\"35\">\n<path fill=\"#4285f4\" d=\"M386 400c45-42 65-112 53-179H260v74h102c-4 24-18 44-38 57z\"></path>\n<path fill=\"#34a853\" d=\"M90 341a192 192 0 0 0 296 59l-62-48c-53 35-141 22-171-60z\"></path>\n<path fill=\"#fbbc02\" d=\"M153 292c-8-25-8-48 0-73l-63-49c-23 46-30 111 0 171z\"></path>\n<path fill=\"#ea4335\" d=\"M153 219c22-69 116-109 179-50l55-54c-78-75-230-72-297 55z\"></path>\n</svg>\n</span>\n</button>\n\n{/* Facebook sign-in button */}\n<button id=\"facebook-login\" className=\"social-button facebook\" onClick={signInWithFacebook}type=\"button\">\n<span className=\"icon\">\n{/* Facebook icon */}\n<svg fill=\"none\" height=\"35\" viewBox=\"0 0 24 24\" width=\"35\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M21.5 12.058c0-5.28-4.253-9.558-9.5-9.558s-9.5 4.279-9.5 9.558c0 4.771 3.473 8.725 8.016 9.442v-6.68H8.104v-2.762h2.412V9.952c0-2.395 1.417-3.718 3.588-3.718 1.04 0 2.126.186 2.126.186v2.352h-1.198c-1.18 0-1.548.738-1.548 1.494v1.792h2.635l-.421 2.763h-2.214V21.5c4.543-.717 8.016-4.67 8.016-9.442z\" fill=\"#3b5998\"></path>\n</svg> \n</span>\n<span className=\"text\" style={{ fontWeight: '500' }}>Continue with Facebook</span>\n</button>\n\n{/* \" sign up\" fields */} \n<div className=\"signupForm\">\n<div className=\"col-lg-12 mb-3\">\n  <input\n    type=\"email\"\n    placeholder=\"email\"\n    id=\"input-user-Email\"\n    className=\"shadow form-control form-control-lg\"\n    autoComplete=\"email\"\n    onChange={(e) => setEmail(e.target.value)}\n    onKeyDown={handlePasswordInputKeyDown}\n    style={{ fontSize: '1rem' }} // Set the font size inline\n  />\n</div>\n<div className=\"col-lg-12 mb-3\">\n  <input\n    type=\"password\"\n    placeholder=\"password\"\n    id=\"input-user-Password\"\n    className=\"shadow form-control form-control-lg\"\n    autoComplete=\"new-password\"\n    onChange={(e) => setPassword(e.target.value)}\n    onKeyDown={handlePasswordInputKeyDown}\n    style={{ fontSize: '1rem' }} // Set the font size inline\n  />\n</div>\n</div>\n\n\n<div className=\"row custom-row\"> {/* Add the custom-row class here */}\n  <div className=\"col-lg-6 col-md-12 \">\n\n    <button\n      id=\"signInButton\"\n      className=\"signup-button\"\n      type=\"button\"\n      onClick={handleSignIn}\n    >\n      Log in\n    </button>\n  </div>\n\n  <div className=\"col-lg-6 col-md-12 \">\n    <button\n      id=\"forgotPasswordButton\"\n      className=\"signup-button\"\n      type=\"button\"\n      onClick={props.showSignUpBox} \n    >\n      New User?\n    </button>\n  </div>\n</div>\n\n\n{/* \"Continue sign up\" button */} \n\n</div>\n\n<div className=\"terms\">\n<p className=\"fw-light\">\nBy continuing, you agree to our <a href=\"URL_TO_TERMS_OF_USE\" target=\"_blank\" rel=\"noopener\">Terms of Use</a>.\nRead our <a href=\"URL_TO_PRIVACY_POLICY\" target=\"_blank\" rel=\"noopener\">Privacy Policy</a>.\n</p>\n</div>\n<div>\n  {error && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>\n      <a href=\"#\" onClick={handleForgotPasswordClick} style={{ color: 'red', textDecoration: 'none' }}>\n        {error}\n      </a>\n    </p>\n  )}\n</div>\n\n</div>\n\n);\n}\n\nexport default LoginBox;\n\n","import React, { useState, useEffect } from 'react';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword, updateProfile, sendEmailVerification } from 'firebase/auth';\n\nfunction SignUpBox({ onGoBack, onSignUpSuccess }) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [verificationMessage, setVerificationMessage] = useState('');\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  const checkEmailVerification = () => {\n    const checkForVerifiedInterval = setInterval(() => {\n      auth.currentUser\n        .reload()\n        .then(() => {\n          if (auth.currentUser.emailVerified) {\n            clearInterval(checkForVerifiedInterval);\n            setIsEmailVerified(true);\n            setVerificationMessage('Email successfully verified');\n            onSignUpSuccess(); // Call the success callback if needed\n          }\n        })\n        .catch((error) => {\n          console.error('Error reloading user:', error);\n        });\n    }, 1000);\n\n    return () => clearInterval(checkForVerifiedInterval);\n  };\n\n  const handleSignUp = () => {\n    clearError();\n\n    if (!firstName || !lastName || !email || !password) {\n      setError('Please fill in all fields.');\n      return;\n    }\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n        const fullName = `${firstName} ${lastName}`;\n\n        updateProfile(user, { displayName: fullName })\n          .then(() => {\n            sendEmailVerification(user)\n              .then(() => {\n                setVerificationMessage('Verification email sent. Please check your inbox and do not leave this page.');\n                checkEmailVerification(); // Start checking email verification status\n              })\n              .catch((error) => {\n                console.error('Error sending email verification:', error);\n                setError('An error occurred while sending the verification email.');\n              });\n          })\n          .catch((error) => {\n            console.error('Error updating profile:', error);\n            setError('An error occurred during profile update');\n          });\n      })\n      .catch((error) => {\n        console.error('Error creating user:', error);\n        setError('An error occurred during sign-up.');\n      });\n  };\n  const handleInputKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      handleSignUp();\n  \n      // Set focus on the submit button\n      const submitButton = document.getElementById('btnSignup');\n      if (submitButton) {\n        submitButton.focus();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (auth.currentUser) {\n      checkEmailVerification();\n    }\n  }, [onSignUpSuccess]);\n\n  return (\n    <div>\n      <div className=\"login-box\" id=\"signupBox\">\n        <div className=\"log-in-text\">\n          <div className=\"opening-second\">\n            <div className=\"go-back\">\n              <button className=\"go-back-button\" onClick={onGoBack}>\n                <i className=\"fas fa-backspace\"></i>\n              </button>\n              <div className=\"center-text\">\n                <h4 className=\"log-in-text-heading\">Sign-Up</h4>\n              </div>\n            </div>\n          </div>\n          <h6 className=\"log-in-text-closing\">Let's sign you up so you can get the answers you need!</h6>\n        </div>\n        <form id=\"signupForm\">\n          <div className=\"signup-form\">\n            <div className=\"col-lg-12 col-md mb-3\">\n              <input\n                type=\"text\"\n                placeholder=\"First Name\"\n                id=\"input-FirstName\"\n                className=\"shadow form-control form-control-lg\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)} // Capture user's input for first name\n                onKeyDown={handleInputKeyDown} // Submit on Enter\n              />\n            </div>\n            <div className=\"col-lg-12 col-md mb-3\">\n              <input\n                type=\"text\"\n                placeholder=\"Last Name\"\n                id=\"input-LastName\"\n                className=\"shadow form-control form-control-lg\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)} // Capture user's input for last name\n                onKeyDown={handleInputKeyDown} // Submit on Enter\n              />\n            </div>\n            <div className=\"col-lg-12 mb-3\">\n              <input\n                type=\"email\"\n                placeholder=\"email address\"\n                id=\"input-Email\"\n                className=\"shadow form-control form-control-lg\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                onKeyDown={handleInputKeyDown} // Submit on Enter\n              />\n            </div>\n            <div className=\"col-lg-12 mb-3\">\n              <input\n                type=\"password\"\n                placeholder=\"password\"\n                id=\"input-Password\"\n                className=\"shadow form-control form-control-lg\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                onKeyDown={handleInputKeyDown} // Submit on Enter\n              />\n            </div>\n\n            <div className=\"col-lg-12 col-md mb-3\" style={{ paddingBottom: '15px' }}>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary rounded-pill pt-2 pb-2\"\n                style={{ width: 'calc(100% - 1.5rem)' }}\n                onClick={handleSignUp}\n                id=\"btnSignup\"\n              >\n                submit <i className=\"fas fa-paper-plane\"></i>\n              </button>\n            </div>\n            <div>\n              {error && <p style={{ color: 'red' }}>{error}</p>}\n              {isEmailVerified ? (\n                <p style={{ color: 'green' }}>{verificationMessage}</p>\n              ) : (\n                <p style={{ color: 'green' }}>{verificationMessage}</p>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUpBox;","import React, { useState, useRef } from 'react';\nimport { getAuth, sendPasswordResetEmail } from \"firebase/auth\";\nimport { Link } from 'react-router-dom'; // Assuming you use React Router for navigation\n\nfunction PasswordBox({ onGoBack }) {\n  const [email, setEmail] = useState(\"\");\n  const [resetSuccess, setResetSuccess] = useState(false);\n  const [resetError, setResetError] = useState(null);\n  const resetButtonRef = useRef(null);\n\n  const handleResetPassword = () => {\n    const auth = getAuth();\n\n    sendPasswordResetEmail(auth, email)\n      .then(() => {\n        // Password reset email sent successfully\n        setResetSuccess(true);\n        setResetError(null);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // Handle the error, you can display an error message to the user\n        setResetSuccess(false);\n        setResetError(errorMessage);\n      });\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleResetPassword();\n\n      // Set focus on the submit button\n      const submitButton = document.getElementById('resetButton');\n      if (submitButton) {\n        submitButton.focus();\n      }\n    }\n  };\n\n\n\n  return (\n<div className=\"login-box\" id=\"loginBox\">\n  <div className=\"log-in-text\">\n    <div className=\"opening-second\">\n      <div className=\"go-back\">\n        <button className=\"go-back-button\" onClick={onGoBack}>\n          <i className=\"fas fa-backspace\"></i>\n        </button>\n        <div className=\"center-text\">\n          <h4 className=\"log-in-text-opening\">New password?</h4>\n        </div>\n      </div>\n    </div>\n    <h6 className=\"log-in-text-closing\">Please type the email address associated with your account</h6>\n  </div>\n\n  <div className=\"signup-form\">\n        <div className=\"col-lg-12 mb-3 mt-5\">\n          <input\n            type=\"email\"\n            placeholder=\"email address\"\n            id=\"request-NewPassword\"\n            className=\"shadow form-control form-control-lg\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onKeyPress={handleKeyPress} // Call handleKeyPress on key press\n          />\n        </div>\n      </div>\n\n      <div className=\"col-lg-12 mb-3 mt-5\">\n      <button\n          id=\"resetButton\"\n          className=\"signup-button\"\n          type=\"button\"\n          onClick={handleResetPassword}\n          onKeyPress={handleKeyPress} // Listen for \"Enter\" key press\n        >\n          Submit\n        </button>\n      </div>\n\n      {resetSuccess && (\n        <div>\n          <p className=\"fw-light\" style={{ color: 'green' }}>\n      <span\n        onClick={onGoBack}\n        style={{ color: 'green', cursor: 'pointer' }}\n      >\n        Password reset email sent successfully! Click here to login!\n      </span>\n    </p>\n        </div>\n      )}\n      {resetError && (\n        <p  className=\"fw-light\"  style={{ color: 'red' }}>The email adress is wrong or does not exist.</p>\n      )}\n    </div>\n  );\n}\n\nexport default PasswordBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport LoginBox from './LoginBox';\nimport SignUpBox from './SignUpBox';\nimport Navbar from '../components/Navbar';\nimport PasswordBox from './PasswordBox';\n\nfunction App() {\n  const [showLoginBox, setShowLoginBox] = useState(false);\n  const [showSignUpBox, setShowSignUpBox] = useState(false);\n  const [showPasswordBox, setShowPasswordBox] = useState(false);\n\n  const closeAllPopups = () => {\n    setShowLoginBox(false);\n    setShowSignUpBox(false);\n    setShowPasswordBox(false);\n  };\n\n  const showSignUp = () => {\n    closeAllPopups();\n    setShowSignUpBox(true);\n  };\n\n  const showPassword = () => {\n    closeAllPopups();\n    setShowPasswordBox(true);\n  };\n\n  const handleLoginButtonClick = () => {\n    closeAllPopups();\n    setShowLoginBox(true);\n  };\n\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (event.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    const handleClickOutside = (event) => {\n      if (\n        popupRef.current &&\n        !popupRef.current.contains(event.target) &&\n        event.target.getAttribute('id') !== 'loginButtonNav'\n      ) {\n        closeAllPopups();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Navbar onLoginButtonClick={handleLoginButtonClick} />\n\n      <div ref={popupRef}>\n        {showLoginBox && (\n          <LoginBox\n            showSignUpBox={showSignUp}\n            showPasswordBox={showPassword}\n            onLoginSuccess={closeAllPopups}\n          />\n        )}\n        {showSignUpBox && (\n          <SignUpBox\n            onGoBack={handleLoginButtonClick}\n            onSignUpSuccess={() => {}}\n            showPasswordBox={showPassword}\n          />\n        )}\n\n        {showPasswordBox && <PasswordBox onGoBack={handleLoginButtonClick} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"names":["props","_ref","_ref2","showPasswordBox","onLoginSuccess","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleSignIn","signInWithEmailAndPassword","auth","then","userCredential","user","console","log","catch","handlePasswordInputKeyDown","event","key","_jsxs","className","id","children","_jsx","onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","firstName","wrap","_context","prev","next","signInWithRedirect","googleProvider","sent","displayName","split","t0","stop","apply","arguments","type","style","fontWeight","xmlns","viewBox","height","width","fill","d","_callee2","_context2","facebookProvider","placeholder","autoComplete","onChange","e","target","value","onKeyDown","fontSize","showSignUpBox","href","rel","color","textDecoration","onGoBack","onSignUpSuccess","setFirstName","lastName","setLastName","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","setIsEmailVerified","_useState13","_useState14","verificationMessage","setVerificationMessage","checkEmailVerification","checkForVerifiedInterval","setInterval","currentUser","reload","emailVerified","clearInterval","handleSignUp","createUserWithEmailAndPassword","fullName","concat","updateProfile","sendEmailVerification","handleInputKeyDown","submitButton","document","getElementById","focus","useEffect","paddingBottom","resetSuccess","setResetSuccess","resetError","setResetError","handleResetPassword","useRef","getAuth","sendPasswordResetEmail","code","errorMessage","message","handleKeyPress","onKeyPress","cursor","showLoginBox","setShowLoginBox","setShowSignUpBox","setShowPasswordBox","closeAllPopups","showPassword","handleLoginButtonClick","popupRef","handleClickOutside","current","contains","getAttribute","window","addEventListener","removeEventListener","Navbar","onLoginButtonClick","ref","LoginBox","SignUpBox","PasswordBox"],"sourceRoot":""}