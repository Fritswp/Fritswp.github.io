{"version":3,"file":"static/js/93.52a3d867.chunk.js","mappings":"4NAylBA,UAjlBA,YACwBA,EAAAA,EAAAA,MAAdC,UAAR,IACAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgDjB,EAAAA,EAAAA,UAAS,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAvDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA8BrB,EAAAA,EAAAA,UAAS,CAAEsB,KAAM,GAAIC,KAAM,KAAKC,GAAAtB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvDI,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0C3B,EAAAA,EAAAA,UAAS,CAAEsB,KAAM,GAAIC,KAAM,KAAKK,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAAnEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA4C/B,EAAAA,EAAAA,WAAS,GAAMgC,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA8BnC,EAAAA,EAAAA,UAAS,IAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwBvC,EAAAA,EAAAA,UAAS,IAAGwC,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4B3C,EAAAA,EAAAA,UAAS,IAAG4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAgC/C,EAAAA,EAAAA,UAAS,IAAGgD,IAAA9C,EAAAA,EAAAA,GAAA6C,EAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAAwCnD,EAAAA,EAAAA,UAAS,IAAGoD,IAAAlD,EAAAA,EAAAA,GAAAiD,GAAA,GAA7CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAAwBvD,EAAAA,EAAAA,UAAS,IAAGwD,IAAAtD,EAAAA,EAAAA,GAAAqD,GAAA,GAA7BE,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACpBG,IAA0B3D,EAAAA,EAAAA,UAAS,IAAG4D,IAAA1D,EAAAA,EAAAA,GAAAyD,GAAA,GAA/BE,GAAKD,GAAA,GAAEE,GAAQF,GAAA,GACtBG,IAAwC/D,EAAAA,EAAAA,UAAS,MAAKgE,IAAA9D,EAAAA,EAAAA,GAAA6D,GAAA,GAGtDE,IAHmBD,GAAA,GAAiBA,GAAA,IAGEhE,EAAAA,EAAAA,WAAS,IAAMkE,IAAAhE,EAAAA,EAAAA,GAAA+D,GAAA,GAA9CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,IAGlCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcC,EAAAA,GAAKC,mBAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACrDP,EAAS,CAADK,EAAAE,KAAA,QAGqD,OAF/DjF,EAAQ0E,GAEFC,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgBT,EAASU,KAAIL,EAAAE,KAAA,GACjCI,EAAAA,EAAAA,IAAOV,GAAY,KAAD,GAA1CC,EAAeG,EAAAO,MACDC,WACZV,EAAWD,EAAgBY,QACpB7E,SACXC,EAAYiE,EAASlE,UAErBC,EAAY8D,EAAS/D,UAEvBP,EAAayE,EAAS1E,WAAauE,EAASe,YAAYC,MAAM,KAAK,IAAM,IACzElF,EAAYqE,EAAStE,UAAYmE,EAASe,YAAYC,MAAM,KAAK,IAAM,IACvExD,EAAW2C,EAAS5C,SAAW,IAC/BK,EAAQuC,EAASxC,MAAQ,IACzBK,EAAUmC,EAASpC,QAAU,IAC7BK,GAAY+B,EAAShC,UAAY,IACjCK,GAAgB2B,EAAS5B,cAAgB,IACzCK,GAAQuB,EAASxB,MAAQ,IACzBK,GAASgB,EAASjB,SAElBrD,EAAasE,EAASe,YAAYC,MAAM,KAAK,IAAM,IACnDlF,EAAYkE,EAASe,YAAYC,MAAM,KAAK,IAAM,IAClD9E,EAAY8D,EAAS/D,UACrB+C,GAASgB,EAASjB,QACnBsB,EAAAE,KAAA,gBAED/C,EAAW,IACXI,EAAQ,IACRI,EAAU,IACVI,GAAY,IACZI,GAAgB,IAChBtC,EAAY,MACZ8C,GAAS,IACTJ,GAAQ,IAAI,yBAAAyB,EAAAY,OAAA,GAAAlB,EAAA,KAEf,gBAAAmB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAE,CAAF,CAtC0C,IAwC3C,OAAO,WACL5B,GACF,CACF,GAAG,IAEH,IAAM6B,GAAiB,eAAAC,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,EAAOC,GAAW,IAAAvB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAO,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAIiB,OAH3DrE,EAAYsF,GAGNvB,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgBpF,EAAKqF,KAAIe,EAAAlB,KAAA,GACrDmB,EAAAA,EAAAA,IAAUzB,EAAY,CAAEhE,SAAUuF,IAAe,KAAD,mBAAAC,EAAAR,OAAA,GAAAM,EAAA,KACvD,gBANsBI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAyFnBQ,GAAiB,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,IAAA,IAAA7B,EAAA8B,EAAAC,EAAA,OAAAnC,EAAAA,EAAAA,KAAAO,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,UACnBlF,EAAK,CAAD4G,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,iBAOP,GAPOD,EAAA3B,KAAA,EAKDL,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgBpF,EAAKqF,MAGnDrE,EAAiB,CAAD4F,EAAA1B,KAAA,SAIlB,OAHMwB,EAActC,EAAAA,GAAK0C,YACnBH,EAAcD,EAAY9F,SAEhCgG,EAAA1B,KAAA,GACM6B,EAAAA,EAAAA,IACJnC,EACA,CACEc,YAAY,GAADsB,OAAK5G,EAAS,KAAA4G,OAAIxG,GAC7BkD,MAAOA,GACPR,aAAc+D,SAASC,eAAe,qBAAqBC,MAC3D7D,KAAM2D,SAASC,eAAe,aAAaC,MAC3CjF,QAAS+E,SAASC,eAAe,gBAAgBC,MACjD7E,KAAM2E,SAASC,eAAe,aAAaC,MAC3CzE,OAAQuE,SAASC,eAAe,eAAeC,MAC/CrE,SAAUmE,SAASC,eAAe,iBAAiBC,MACnDvG,SAAU+F,GAEZ,CAAES,OAAO,IACT,KAAD,EAGDnG,EAAoB,MAEpBM,EAAW,CAAEJ,KAAM,+BAAgCC,KAAM,YAAawF,EAAA1B,KAAA,wBAAA0B,EAAA1B,KAAA,IAGhE6B,EAAAA,EAAAA,IACJnC,EACA,CACEc,YAAY,GAADsB,OAAK5G,EAAS,KAAA4G,OAAIxG,GAC7BkD,MAAOA,GACPR,aAAc+D,SAASC,eAAe,qBAAqBC,MAC3D7D,KAAM2D,SAASC,eAAe,aAAaC,MAC3CjF,QAAS+E,SAASC,eAAe,gBAAgBC,MACjD7E,KAAM2E,SAASC,eAAe,aAAaC,MAC3CzE,OAAQuE,SAASC,eAAe,eAAeC,MAC/CrE,SAAUmE,SAASC,eAAe,iBAAiBC,MACnDvG,SAAUA,GAEZ,CAAEwG,OAAO,IACT,KAAD,GAGDnG,EAAoB,MAEpBU,EAAiB,CAAER,KAAM,+BAAgCC,KAAM,YAAa,QAAAwF,EAAA1B,KAAA,iBAAA0B,EAAA3B,KAAA,GAAA2B,EAAAS,GAAAT,EAAA,SAI9EjF,EAAiB,CAAER,KAAK,2BAAD6F,OAA6BJ,EAAAS,GAAM/F,SAAWF,KAAM,UAG3EkG,YAAW,WAnEb3F,EAAiB,CAAER,KAAM,GAAIC,KAAM,IAmEI,GAAE,KAAM,yBAAAwF,EAAAhB,OAAA,GAAAa,EAAA,mBAEhD,kBAhEsB,OAAAD,EAAAV,MAAA,KAAAC,UAAA,KAkEjBwB,GAAmB,WACvBC,QAAQC,IAAI,iBACZxD,IAAe,EACjB,EAoBA,OACAyD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAIfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAEfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACrC9F,GAAkBlB,IAClB8G,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEC,IAAKlH,EACLmH,IAAI,eACJJ,UAAU,gCACVK,QAAS,kBAAMjG,GAAkB,EAAK,EACtCkG,QAASV,GACTW,MAAO,CAAEC,OAAQ,cAGnBN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAWM,QAASV,GAAiBK,UACpDC,EAAAA,EAAAA,KAAA,OAAKO,MAAM,6BAA6BC,QAAQ,YAAYC,YAAa,EAAGC,OAAO,QAAQZ,UAAU,UAASC,UAClHC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,kCAQpD5G,IACC+F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,OACEC,IAAG,GAAAd,OAAK2B,GAAsB,0BAC9BZ,IAAI,mBACJJ,UAAU,+CACVM,QAASV,GACTW,MAAO,CAAEC,OAAQ,mBAOnBT,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACoB,UAAjBtG,EAAQF,OACPyG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWO,MAAO,CAAEU,MAAO,OAAQhB,SAAEtG,EAAQH,OAE1C,YAAjBG,EAAQF,OACPyG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWO,MAAO,CAAEU,MAAO,SAAUhB,SAAEtG,EAAQH,OAE5C,aAAjBG,EAAQF,OACPyG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWO,MAAO,CAAEU,MAAO,QAAShB,SAAEtG,EAAQH,WAG/DuG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAA,GAAAZ,OAAK5G,EAAS,KAAA4G,OAAIxG,MAC7CqH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,SAAEtE,cAUtDoE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEC,SAAA,EACjBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,aAEAH,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaC,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,GAAEC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,yBACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,kBAC9BC,EAAAA,EAAAA,KAAA,SACAzG,KAAK,OACLuG,UAAU,+BACVkB,YAAY,GACZ,aAAW,aACX1B,MAAO/G,EACP0I,SAAU,SAACC,GAAC,OAAK1I,EAAa0I,EAAEC,OAAO7B,MAAM,QAG7CO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,iBAC9BC,EAAAA,EAAAA,KAAA,SACAzG,KAAK,OACLuG,UAAU,+BACVkB,YAAY,GACZ,aAAW,YACX1B,MAAO3G,EACPsI,SAAU,SAACC,GAAC,OAAKtI,EAAYsI,EAAEC,OAAO7B,MAAM,QAG5CO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,cAActB,UAAU,aAAYC,SAAC,aACpDC,EAAAA,EAAAA,KAAA,SACAzG,KAAK,QACLuG,UAAU,+BACVuB,GAAG,cACH/B,MAAOnH,EAAOA,EAAK0D,MAAQ,GAC3ByF,UAAQ,QAGRzB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,qBAC9BC,EAAAA,EAAAA,KAAA,SACAqB,GAAG,oBACH9H,KAAK,OACLuG,UAAU,+BACVkB,YAAY,0BACZ,aAAW,eACX1B,MAAOjE,GACP4F,SAAU,SAACC,GAAC,OAAK5F,GAAgB4F,EAAEC,OAAO7B,MAAM,QAGhDO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,sBAC9BC,EAAAA,EAAAA,KAAA,SACAqB,GAAG,YACH9H,KAAK,OACLuG,UAAU,+BACVkB,YAAY,4BACZ,aAAW,YACX1B,MAAO7D,GACPwF,SAAU,SAACC,GAAC,OAAKxF,GAAQwF,EAAEC,OAAO7B,MAAM,WAIxCU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,aAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,aAC9BC,EAAAA,EAAAA,KAAA,SACAqB,GAAG,eACH9H,KAAK,OACLuG,UAAU,+BACVkB,YAAY,0BACZ1B,MAAOjF,EACP4G,SAAU,SAACC,GAAC,OAAK5G,EAAW4G,EAAEC,OAAO7B,MAAM,QAG3CO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,UAC9BC,EAAAA,EAAAA,KAAA,SACAqB,GAAG,YACH9H,KAAK,OACLuG,UAAU,+BACVkB,YAAY,aACZ1B,MAAO7E,EACPwG,SAAU,SAACC,GAAC,OAAKxG,EAAQwG,EAAEC,OAAO7B,MAAM,QAGxCO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,YAC9BC,EAAAA,EAAAA,KAAA,SACAqB,GAAG,cACH9H,KAAK,OACLuG,UAAU,+BACVkB,YAAY,SACZ1B,MAAOzE,EACPoG,SAAU,SAACC,GAAC,OAAKpG,EAAUoG,EAAEC,OAAO7B,MAAM,QAG1CO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,SACAqB,GAAG,gBACH9H,KAAK,OACLuG,UAAU,+BACVkB,YAAY,WACZ1B,MAAOrE,GACPgG,SAAU,SAACC,GAAC,OAAKhG,GAAYgG,EAAEC,OAAO7B,MAAM,aAM5CO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,UACIzG,KAAK,SACLuG,UAAU,8BACVM,QAAS1B,GAAkBqB,SAE1B,oBAGDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACsB,UAAvBlG,EAAcN,OACbyG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWO,MAAO,CAAEU,MAAO,OAAQhB,SAAElG,EAAcP,OAE1C,YAAvBO,EAAcN,OACbyG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWO,MAAO,CAAEU,MAAO,SAAUhB,SAAElG,EAAcP,uBA8GtE0G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDAAoDC,UACnEC,EAAAA,EAAAA,KAAA,UAAQzG,KAAK,SAASuG,UAAU,wBAAuBC,SAAC,+BAQvD5D,KACO6D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UAE1BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,CACtBvI,YAAaA,EACbkB,kBAAmBA,EACnBsH,WAxViB,WACjBpF,IAAe,EACjB,EAuVErD,SAAUA,EACVoF,kBAAmBA,GACnBsD,iBAhWuB,WACvBvH,GAAkB,EACpB,EA+VE/B,KAAMA,EACNuJ,eAAe,uBAOjB,C,oIChZA,IA9LA,SAAqBjF,GAOjB,IANF+E,EAAU/E,EAAV+E,WACAzI,EAAQ0D,EAAR1D,SACAoF,EAAiB1B,EAAjB0B,kBACAnF,EAAWyD,EAAXzD,YACAb,EAAIsE,EAAJtE,KACAuJ,EAAcjF,EAAdiF,eAEA3J,GAA0BC,EAAAA,EAAAA,UAASe,GAASd,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC4J,EAAK1J,EAAA,GAAE2J,EAAQ3J,EAAA,GACtBI,GAAwCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCwJ,GAAFvJ,EAAA,GAAiBA,EAAA,IACpCG,GAAkDT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvCqJ,GAAFpJ,EAAA,GAAsBA,EAAA,IAC9CG,GAAgDb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAvDkJ,EAAgBjJ,EAAA,GAAEkJ,EAAmBlJ,EAAA,GAC5CG,GAA4BjB,EAAAA,EAAAA,UAAS,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAnCgJ,EAAM/I,EAAA,GAAEgJ,EAAShJ,EAAA,GAClBiJ,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAeD,EAAAA,EAAAA,QAAO,MAC5B/I,GAA8CrB,EAAAA,EAAAA,WAAS,GAAMwB,GAAAtB,EAAAA,EAAAA,GAAAmB,EAAA,GAAtDiJ,EAAe9I,EAAA,GAAE+I,EAAkB/I,EAAA,GASpCgJ,EAAmB,SAACtB,GACxB,IAAMuB,EAAOvB,EAAEC,OAAOuB,MAAM,GAG5B,GAFAb,EAAgBY,GAEZA,EAAM,CACRT,EAAoBS,EAAKE,MACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACfnB,EAASmB,EAAM5B,OAAO6B,OACxB,EACAJ,EAAOK,cAAcR,EACvB,CACF,EAMMS,EAAY,eAAA9E,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,IAAA,IAAA8E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7G,EAAAA,EAAAA,KAAAO,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAC4B,KAAzC+F,EAA2B,QAArBD,EAAGhB,EAAWsB,eAAO,IAAAN,OAAA,EAAlBA,EAAoBO,aACxB,CAADnF,EAAAlB,KAAA,eAAAkB,EAAAlB,KAAA,EACW,IAAIsG,SAAQ,SAACC,GAAO,OAAKR,EAAOS,OAAOD,EAAS,aAAa,IAAE,KAAD,GAA3EP,EAAI9E,EAAAb,QAGF4F,GAAaQ,EAAAA,EAAAA,IAAIC,EAAAA,GAAQ,iBAAD5E,OAAmB4C,IAC3CwB,EAAW,CAAES,YAAa,eAE1BR,GAAaS,EAAAA,EAAAA,IAAqBX,EAAYD,EAAME,IAE/CW,GACT,iBACA,SAACC,GACC,IAEF,SAACC,GACC,IAEF,YAEEC,EAAAA,EAAAA,IAAeb,EAAWW,SAASL,KAAKQ,KAAI,eAAAC,GAAA7H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOyB,GAAW,OAAA3B,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACzDiB,EAAY,CAADnB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,GAEPmB,EAAAA,EAAAA,IAAUyD,EAAQ,CAAElJ,SAAUuF,IAAe,KAAD,EAClDH,EAAkBG,GAClBiE,GAAmB,GACnB9C,YAAW,WACT8C,GAAmB,EACrB,GAAG,KAAM,wBAAApF,EAAAY,OAAA,GAAAlB,EAAA,KAEZ,gBAAAmB,GAAA,OAAAuG,EAAAtG,MAAA,KAAAC,UAAE,CAAF,CAV2C,GAW9C,KAEH,wBAAAK,EAAAR,OAAA,GAAAM,EAAA,KAEJ,kBApCiB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAuCZsG,EAAiB,eAAAC,GAAA/H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8H,IAAA,IAAAC,EAAA,OAAAhI,EAAAA,EAAAA,KAAAO,MAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,WACpBlF,IAAQA,EAAKqF,IAAG,CAAAoH,EAAAvH,KAAA,QAC+B,OAA3CsH,EAAe,GAAAxF,OAAM2B,GAAsB,0BAAA8D,EAAAvH,KAAA,GAC3CmB,EAAAA,EAAAA,IAAUyD,EAAQ,CAAElJ,SAAU4L,IAAmB,KAAD,EACtD3L,EAAY2L,GACZ7C,GAAqB,GAAO,wBAAA8C,EAAA7G,OAAA,GAAA2G,EAAA,KAE/B,kBAPsB,OAAAD,EAAAxG,MAAA,KAAAC,UAAA,KA+BvB,OArBA7B,EAAAA,EAAAA,YAAU,WACRgG,EAAaoB,QAAUrE,SAASyF,cAAc,SAC9CxC,EAAaoB,QAAQlK,KAAO,OAC5B8I,EAAaoB,QAAQqB,OAAS,UAC9BzC,EAAaoB,QAAQsB,iBAAiB,SAAUvC,GAEhD,IAAMzF,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAWmE,EAAgBvJ,EAAKqF,KACvD0E,EAAUnF,GAEV,IAIMT,GAAc0I,EAAAA,EAAAA,IAAWjI,GAAY,SAACO,GAAS,IAAD2H,GAJvB,SAACnG,GAC5B8C,EAAS9C,EACX,CAIEoG,CAD8B,QAAbD,EAAG3H,EAAIM,cAAM,IAAAqH,OAAA,EAAVA,EAAYlM,SAElC,IAEA,OAAO,kBAAMuD,GAAc,CAC7B,GAAG,CAACnE,EAAKqF,IAAKkE,KAGZ7B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE8E,YAAa,QAASpF,SAAC,mBACrCC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWM,QAASoB,EAAWzB,UACrDC,EAAAA,EAAAA,KAAA,OAAKO,MAAM,6BAA6B6E,KAAK,OAAO5E,QAAQ,YAAaE,OAAO,QAAQD,YAAY,MAAOX,UAAS,sBAAwBC,UACpIC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,iCAI3Db,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAA0CC,SAGtD4B,GACC3B,EAAAA,EAAAA,KAACqF,EAAAA,IAAO,CACNvB,IAAK3B,EACLlC,IAAK0B,EACL2D,iBAAkBC,EAAAA,IAClBC,aAAc,CACZC,MAAM,KAIR,YAOR5F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWM,QA3GN,WACrBiC,EAAaoB,QAAQiC,OACvB,EAyGqD3F,UACnDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKO,MAAM,6BAA6B6E,KAAK,OAAO5E,QAAQ,YAAYE,OAAO,QAAQD,YAAY,MAAMX,UAAS,sBAAwBC,UACxIC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,6VACjD,kBAKVb,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWM,QAAS8C,EAAanD,UAC7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKU,MAAM,6BAA6B6E,KAAK,OAAO5E,QAAQ,YAAYE,OAAO,QAAQD,YAAY,MAAMX,UAAS,sBAAwBC,SAAA,EACxIC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,uWACrDb,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,sFACjD,oBAKTyB,IACLtC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAClCC,EAAAA,EAAAA,KAAA,OAAKO,MAAM,6BAA6BQ,MAAM,UAAUqE,KAAK,OAAO5E,QAAQ,YAAYC,YAAa,EAAGC,OAAO,eAAcX,UAC3HC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,+BAOzDb,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWM,QAASoE,EAAkBzE,UACtDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKO,MAAM,6BAA6B6E,KAAK,OAAO5E,QAAQ,YAAYE,OAAO,QAAQD,YAAY,MAAMX,UAAS,sBAAwBC,UACxIC,EAAAA,EAAAA,KAAA,QAAMW,cAAc,QAAQC,eAAe,QAAQC,EAAE,8ZACjD,yBAUZ,C","sources":["Users/UserProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, setDoc } from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nfunction UserProfile() {\n  const { customURL } = useParams();\n  const [user, setUser] = useState(null);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [photoURL, setPhotoURL] = useState(null);\n  const [previousPhotoRef, setPreviousPhotoRef] = useState(null);\n  const [message, setMessage] = useState({ text: '', type: '' });\n  const [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\n  const [imageLoadError, setImageLoadError] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [county, setCounty] = useState('');\n  const [postcode, setPostcode] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [role, setRole] = useState('');\n  const [email, setEmail] = useState(''); // Added email state\n  const [selectedFile, setSelectedFile] = useState(null);\n\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n\n        const userDocRef = doc(firestore, 'userProfiles', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          if (userData.photoURL) {\n            setPhotoURL(userData.photoURL);\n          } else {\n            setPhotoURL(authUser.photoURL);\n          }\n          setFirstName(userData.firstName || authUser.displayName.split(' ')[0] || '');\n          setLastName(userData.lastName || authUser.displayName.split(' ')[1] || '');\n          setAddress(userData.address || '');\n          setCity(userData.city || '');\n          setCounty(userData.county || '');\n          setPostcode(userData.postcode || '');\n          setMobileNumber(userData.mobileNumber || '');\n          setRole(userData.role || '');\n          setEmail(authUser.email); // Set email from authUser\n        } else {\n          setFirstName(authUser.displayName.split(' ')[0] || '');\n          setLastName(authUser.displayName.split(' ')[1] || '');\n          setPhotoURL(authUser.photoURL);\n          setEmail(authUser.email); // Set email from authUser\n        }\n      } else {\n        setAddress('');\n        setCity('');\n        setCounty('');\n        setPostcode('');\n        setMobileNumber('');\n        setPhotoURL(null);\n        setEmail(''); // Clear email\n        setRole('');\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const handleImageUpload = async (downloadURL) => {\n    setPhotoURL(downloadURL);\n  \n    // Update Firestore document with new photoURL\n    const userDocRef = doc(firestore, 'userProfiles', user.uid);\n    await updateDoc(userDocRef, { photoURL: downloadURL });\n  };\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024;\n\nconst handleFileUpload = async (event) => {\n  const file = event.target.files[0];\n  setSelectedFile(file); //\n  if (file) {\n    if (file.size > MAX_FILE_SIZE) {\n      setMessage({ text: 'File size is too big, max 500kb. Please select a smaller file.', type: 'error' });\n      setTimeout(() => setMessage({ text: '', type: '' }), 3000); // Clear the message after 3 seconds\n      return;\n    }\n\n    const metadata = {\n      contentType: file.type,\n    };\n\n    if (previousPhotoRef) {\n      try {\n        await deleteObject(previousPhotoRef);\n        setMessage({ text: 'Profile photo removed', type: 'progress' });\n        console.log('Profile photo removed');\n      } catch (error) {\n        setMessage({ text: `Error deleting previous photo: ${error.message}`, type: 'error' });\n        console.error('Error deleting previous photo:', error);\n      }\n    }\n\n    const storageRef = ref(storage, `profileImages/${file.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setMessage({ text: `Upload is ${progress.toFixed(2)}% done`, type: 'progress' });\n      },\n      (error) => {\n        setMessage({ text: `Error uploading image: ${error.message}`, type: 'error' });\n        console.error('Error uploading image:', error);\n        setImageLoadError(true); // Handle image load error\n        // Clear the error message after 3 seconds\n        setTimeout(() => setMessage({ text: '', type: '' }), 3000);\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          console.log('File available at', downloadURL);\n          updateProfile(user, { photoURL: downloadURL })\n            .then(async () => {\n              setMessage({ text: 'Profile photo updated successfully', type: 'success' });\n              console.log('Profile photo updated successfully');\n              setPhotoURL(downloadURL);\n              setPreviousPhotoRef(uploadTask.snapshot.ref);\n              setImageLoadError(false); // Reset imageLoadError to false on successful upload\n              // Update Firestore document with new photoURL\n              const userDocRef = doc(firestore, 'userProfiles', user.uid);\n              await updateDoc(userDocRef, { photoURL: downloadURL });\n              // Clear the message after 3 seconds\n              setTimeout(() => setMessage({ text: '', type: '' }), 3000);\n            })\n            .catch((error) => {\n              setMessage({ text: `Error updating profile photo: ${error.message}`, type: 'error' });\n              console.error('Error updating profile photo:', error);\n              // Clear the error message after 3 seconds\n              setTimeout(() => setMessage({ text: '', type: '' }), 3000);\n            });\n        });\n      }\n    );\n  }\n};\n\n\n\n\n\nconst clearUpdateMessage = () => {\n  setUpdateMessage({ text: '', type: '' });\n};\n\n\n\nconst updateProfileInfo = async () => {\n  if (!user) {\n    return;\n  }\n\n  try {\n    const userDocRef = doc(firestore, 'userProfiles', user.uid);\n\n    // Check if a new photo has been selected and update it\n    if (previousPhotoRef) {\n      const updatedUser = auth.currentUser;\n      const newPhotoURL = updatedUser.photoURL;\n\n      // Create or update Firestore document with new profile information\n      await setDoc(\n        userDocRef,\n        {\n          displayName: `${firstName} ${lastName}`,\n          email: email, // Use the stored email\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          role: document.getElementById('inputRole').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          photoURL: newPhotoURL,\n        },\n        { merge: true } // Use merge: true to update or create the document\n      );\n\n      // Clear the previousPhotoRef state\n      setPreviousPhotoRef(null);\n\n      setMessage({ text: 'Profile updated successfully', type: 'success' });\n    } else {\n      // If no new photo has been selected, update other profile information\n      await setDoc(\n        userDocRef,\n        {\n          displayName: `${firstName} ${lastName}`,\n          email: email, // Use the stored email\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          role: document.getElementById('inputRole').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          photoURL: photoURL, // Include the current photo URL\n        },\n        { merge: true } // Use merge: true to update or create the document\n      );\n\n      // Clear the previousPhotoRef state\n      setPreviousPhotoRef(null);\n\n      setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n    }\n  } catch (error) {\n    // Set the error message\n    setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n\n    // Clear the error message after 3 seconds\n    setTimeout(() => clearUpdateMessage(), 3000);\n  }\n};\n\nconst handleImageClick = () => {\n  console.log('Image clicked'); // Check if this message appears in the console\n  setIsModalOpen(true);\n};\n\n\nconst handleImageError = () => {\n  setImageLoadError(true);\n};\n\n\nconst closeModal = () => {\n  setIsModalOpen(false);\n};\n\n\nconst openModal = () => {\n  setIsModalOpen(true);\n};\n\n\n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"profile-intro-section\">\n<div className=\"container\">\n\n</div>\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row\">\n<div className=\"card-profile\">\n</div>\n<div className=\"row g-3\">\n<div className=\"card-body\">\n<div className=\"d-flex position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      {/* Plus symbol */}\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n\n      </div>\n \n    </div>\n  )}\n\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n   \n    </div>\n  )}\n</div>\n\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{role}</div>\n      </div>\n     \n\n    </div>\n</div>\n\n\n\n\n<div className=\"\">\n<h3>My Profile</h3>\n<hr />\n</div>\n<form className=\"file-upload\">\n\n<div className=\"row mb-4 gx-4\">\n<div className=\"col-xl-8 col-12\">\n<div className=\"\">\n<div className=\"card-body card-profile\">\n<div className=\"row g-3\">\n<h4 className=\"mb-4\">General information</h4>\n<div className=\"col-md-6\">\n<label className=\"form-label\">First Name *</label>\n<input\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"\"\naria-label=\"First name\"\nvalue={firstName} // Display user's first name here\nonChange={(e) => setFirstName(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Last Name *</label>\n<input\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"\"\naria-label=\"Last name\"\nvalue={lastName} // Display user's last name here\nonChange={(e) => setLastName(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n<input\ntype=\"email\"\nclassName=\"form-control form-control-lg\"\nid=\"inputEmail4\"\nvalue={user ? user.email : ''} // Display user's email here\nreadOnly // Mark it as read-only\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Mobile number *</label>\n<input\nid=\"inputMobileNumber\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your Phone number\"\naria-label=\"Phone number\"\nvalue={mobileNumber} // Display user's mobile number here\nonChange={(e) => setMobileNumber(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Role/Expertise *</label>\n<input\nid=\"inputRole\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your role/expertise\"\naria-label=\"your Role\"\nvalue={role} // Display user's mobile number here\nonChange={(e) => setRole(e.target.value)}\n/>\n</div>\n</div>\n<div className=\"py-5 rounded mt-4\">\n<div className=\"row g-3\">\n<h4 className=\"mb-4 mt-0\">Address</h4>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Address</label>\n<input\nid=\"inputAddress\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter your home address\"\nvalue={address} // Display user's address here\nonChange={(e) => setAddress(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">City</label>\n<input\nid=\"inputCity\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Enter City\"\nvalue={city} // Display user's city here\nonChange={(e) => setCity(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">County</label>\n<input\nid=\"inputCounty\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"County\"\nvalue={county} // Display user's county here\nonChange={(e) => setCounty(e.target.value)}\n/>\n</div>\n<div className=\"col-md-6\">\n<label className=\"form-label\">Postcode</label>\n<input\nid=\"inputPostcode\"\ntype=\"text\"\nclassName=\"form-control form-control-lg\"\nplaceholder=\"Postcode\"\nvalue={postcode} // Display user's postcode here\nonChange={(e) => setPostcode(e.target.value)}\n/>\n</div>\n\n</div>\n</div>\n<div className='mt-3'>\n<button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg mb-4\"\n    onClick={updateProfileInfo}\n    \n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n</div>\n</div>\n</div>\n</div>\n\n{/*<div className=\"col-xl-4 col-12\">\n<div className=\"\">\n<div className=\"card-profile\">\n<div className=\"profile-cover rounded-top\">\n</div>\n<div className=\"row g-3 \">\n<div className=\"text-center\">\n<div className=\"pb-5 card-body\">\n{!imageLoadError && photoURL && (\n  <img\n    src={photoURL}\n    alt=\"User Profile\"\n    className=\"card-img user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-5\"\n    onError={() => setImageLoadError(true)}\n    onChange={(e) => setPhotoURL(e.target.value)}\n    onClick={handleImageClick}\n  />\n)}\n\n{imageLoadError && (\n  <img\n    src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n    alt=\"Custom 404 Image\"\n    className=\"card-img user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-5\"\n    onChange={(e) => setPhotoURL(e.target.value)}\n    onClick={handleImageClick}\n  />\n)}\n\n<div>\n{message.type === 'error' && (\n<p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n)}\n{message.type === 'success' && (\n<p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n)}\n{message.type === 'progress' && (\n<p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n)}\n</div>\n<div className=\"card-title h5\">{`${firstName} ${lastName}`} </div>\n<div className=\"fw-normal card-subtitle mb-4 h6\">{role}</div>\n<button type=\"button\" className=\"me-4 btn btn-primary btn-sm rounded-pill pt-2 pb-2\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n<path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n</svg>\n<span className=\"me-2\">Connect</span> \n</button>\n<button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill pt-2 pb-2\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n<path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n</svg>\n<span className=\"me-2\">Message</span> \n</button>\n\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<div className=\"\">\n<div className=\"card-body card-profile\">\n<div className=\"row g-3\">\n<h5 className=\"mb-4\">Select profile photo</h5>\n<div className=\"d-xl-flex align-items-center\">\n<div className=\"file-field\">\n<div className=\"d-flex justify-content-xl-center\">\n<div className=\"d-flex\">\n<span\nclassName=\"icon icon-md\"\nonClick={() => {\ndocument.getElementById('customFile').click();\n}}\nstyle={{ cursor: 'pointer' }}\n>\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"45\" className=\"w-6 h-6 me-3\">\n<path fillRule=\"evenodd\" d=\"M18.97 3.659a2.25 2.25 0 00-3.182 0l-10.94 10.94a3.75 3.75 0 105.304 5.303l7.693-7.693a.75.75 0 011.06 1.06l-7.693 7.693a5.25 5.25 0 11-7.424-7.424l10.939-10.94a3.75 3.75 0 115.303 5.304L9.097 18.835l-.008.008-.007.007-.002.002-.003.002A2.25 2.25 0 015.91 15.66l7.81-7.81a.75.75 0 011.061 1.06l-7.81 7.81a.75.75 0 001.054 1.068L18.97 6.84a2.25 2.25 0 000-3.182z\" clipRule=\"evenodd\" />\n</svg>\n</span>\n<input\ntype=\"file\"\naccept=\"image/*\"\nid=\"customFile\"\nonChange={handleFileUpload}\nstyle={{ display: 'none' }}\n/>\n<div className=\"d-md-block text-start\">\n<div className=\"fw-normal text-dark mb-1\">Choose Image</div>\n<div className=\"text-gray small\">JPG, GIF or PNG. Max size of 800K</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n*/}\n</div>\n<div className=\"gap-3 d-md-flex justify-content-md-end text-center\">\n<button type=\"button\" className=\"btn btn-danger btn-lg\">\nDelete profile\n</button>\n</div>\n</form>\n</div>\n</div>\n</div>\n{isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modalcrop \">\n          \n           <ImageCropper\n  setPhotoURL={setPhotoURL}\n  setImageLoadError={setImageLoadError}\n  closeModal={closeModal}\n  photoURL={photoURL}\n  handleImageUpload={handleImageUpload}\n  handleImageError={handleImageError}\n  user={user}\n  collectionName=\"userProfiles\" \n/>\n          </div>\n        </div>\n      )}\n</div>\n);\n}\n\nexport default UserProfile;","import React, { useState, useRef, useEffect } from 'react'; // Import React and useState\nimport { CropperRef, Cropper, CircleStencil } from 'react-advanced-cropper';\nimport 'react-advanced-cropper/dist/style.css';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { doc, getDoc, updateDoc, deleteField, setDoc, onSnapshot } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\nimport 'react-advanced-cropper/dist/themes/corners.css';\n\n\nfunction ImageCropper({\n  closeModal,\n  photoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n}) {\n  const [image, setImage] = useState(photoURL);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDeleteConfirmed, setIsDeleteConfirmed] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null); // Added local state for the document reference\n  const cropperRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [isUploadSuccess, setIsUploadSuccess] = useState(false);\n\n  const CustomCheckmark = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n);\n\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file); // Update the selectedFile state with the file\n  \n    if (file) {\n      setSelectedFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImage(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleNewPhoto = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleUpload = async () => {\n    const canvas = cropperRef.current?.getCanvas();\n    if (canvas) {\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg'));\n  \n      if (blob) {\n        const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n        const metadata = { contentType: 'image/jpeg' };\n  \n        const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n  \n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            // Handle upload progress here\n          },\n          (error) => {\n            // Handle upload error here\n          },\n          () => {\n            // Handle upload success here\n            getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n              if (downloadURL) {\n                // Update the Firestore document immediately before handling the upload success\n                await updateDoc(docRef, { photoURL: downloadURL });\n                handleImageUpload(downloadURL);\n                setIsUploadSuccess(true);\n                setTimeout(() => {\n                  setIsUploadSuccess(false);\n                }, 3000);\n              }\n            });\n          }\n        );\n      }\n    }\n  };\n  \n\n  const handleDeletePhoto = async () => {\n    if (user && user.uid) {\n      const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n      await updateDoc(docRef, { photoURL: defaultImageURL });\n      setPhotoURL(defaultImageURL);\n      setIsDeleteConfirmed(false);\n    }\n  };\n  \n\n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'image/*';\n    fileInputRef.current.addEventListener('change', handleFileUpload);\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef); // Set the local state for document reference\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n  \n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.photoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n  \n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n\n  return (\n    <div className=\"modalimage align-items-center\">\n      <div className=\"top-section\">\n        <div style={{ marginRight: '10px' }}>Profile image</div>\n        <button className=\"btn-crop\" onClick={closeModal}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div className='centerimage'>\n      <div className=\"croppers-wizard__body\">\n        <div className='default-cropper croppers-wizard__cropper'>\n\n       \n          {image ? (\n            <Cropper\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n              }}\n         \n            />\n          ) : null}\n</div>\n\n</div>\n\n      </div>\n      \n      <div className=\"button-section with-divider\">\n  <button className=\"btn-crop\" onClick={handleNewPhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42\" />\n      </svg>\n      New Photo\n    </div>\n  </button>\n\n  <button className=\"btn-crop\" onClick={handleUpload}>\n        <div className=\"button-content\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n          </svg>\n          Upload Photo\n        </div>\n      </button>\n\n      {isUploadSuccess && (\n  <div className=\"upload-success-icon\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n    </svg>\n  </div>\n)}\n\n \n\n  <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n      </svg>\n      Delete Photo\n    </div>\n  </button>\n</div>\n\n\n\n    </div>\n  );\n}\n\nexport default ImageCropper;\n"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","previousPhotoRef","setPreviousPhotoRef","_useState11","text","type","_useState12","message","setMessage","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","role","setRole","_useState29","_useState30","email","setEmail","_useState31","_useState32","_useState33","_useState34","isModalOpen","setIsModalOpen","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","displayName","split","stop","_x","apply","arguments","handleImageUpload","_ref2","_callee2","downloadURL","_context2","updateDoc","_x2","updateProfileInfo","_ref6","_callee6","updatedUser","newPhotoURL","_context6","abrupt","currentUser","setDoc","concat","document","getElementById","value","merge","t0","setTimeout","handleImageClick","console","log","_jsxs","className","children","_jsx","src","alt","onError","onClick","style","cursor","xmlns","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","process","color","placeholder","onChange","e","target","htmlFor","id","readOnly","ImageCropper","closeModal","handleImageError","collectionName","image","setImage","setSelectedFile","setIsDeleteConfirmed","selectedFileName","setSelectedFileName","docRef","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","handleFileUpload","file","files","name","reader","FileReader","onload","event","result","readAsDataURL","handleUpload","_cropperRef$current","canvas","blob","storageRef","metadata","uploadTask","current","getCanvas","Promise","resolve","toBlob","ref","storage","contentType","uploadBytesResumable","on","snapshot","error","getDownloadURL","then","_ref3","handleDeletePhoto","_ref4","_callee3","defaultImageURL","_context3","createElement","accept","addEventListener","onSnapshot","_doc$data","handlePhotoURLChange","marginRight","fill","Cropper","stencilComponent","CircleStencil","stencilProps","grid","click"],"sourceRoot":""}