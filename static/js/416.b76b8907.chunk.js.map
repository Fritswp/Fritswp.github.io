{"version":3,"file":"static/js/416.b76b8907.chunk.js","mappings":"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","sources":["Users/ExpertProfile.js","components/FlashMessage.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, firestore, storage } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteDoc, setDoc, collection, onSnapshot, addDoc, getDocs  } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL,deleteObject } from \"firebase/storage\";\nimport { updateProfile } from 'firebase/auth';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \nimport FlashMessage from '../components/FlashMessage';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport LoadingCircle from '../components/LoadingCircle';\n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\nconst [selectedLabel, setSelectedLabel] = useState('');\nconst [isModalOpen, setIsModalOpen] = useState(false);\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [gallery, setGallery] = useState([]);\nconst [isLoadingGallery, setIsLoadingGallery] = useState(false); // State variable for gallery loading state\nconst [isLoadingCarousel, setIsLoadingCarousel] = useState(false);\nconst [isDraggingFile, setIsDraggingFile] = useState(false);\nconst [uploadStatus, setUploadStatus] = useState(null);\nconst [uploadStatusLink, setUploadStatusLink] = useState(null);\nconst [linkUrl, setLinkUrl] = useState('');\nconst [links, setLinks] = useState([]);\nconst [isLoadingLinks, setIsLoadingLinks] = useState(false);\nconst [linkDescription, setLinkDescription] = useState(''); \nconst [languages, setLanguages] = useState(['']);\nconst [education, setEducation] = useState(['']);\nconst [employmentHistory, setEmploymentHistory] = useState([]);\nconst [currentEmployer, setCurrentEmployer] = useState('');\nconst [currentPosition, setCurrentPosition] = useState('');\nconst [startDate, setStartDate] = useState('');\nconst [endDate, setEndDate] = useState('');\nconst [isCurrentlyEmployed, setIsCurrentlyEmployed] = useState(false);\n\n\n\nconst [isUploadSuccess, setIsUploadSuccess] = useState(false);\nconst [originalPhotoURL, setOriginalPhotoURL] = useState(null);\n\nuseEffect(() => {\n  const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      setUser(authUser);\n\n      const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n\n      if (userDocSnapshot.exists() && userDocSnapshot.data().approved) {\n        // User is an expert, delete their old profile\n        const oldProfileDocRef = doc(firestore, 'userProfiles', authUser.uid);\n        await deleteDoc(oldProfileDocRef);\n      }\n\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        setPhotoURL(userData.photoURL || authUser.photoURL);\n        setOriginalPhotoURL(userData.originalPhotoURL || null);\n        setFirstName(userData.firstName || (authUser.displayName ? authUser.displayName.split(' ')[0] : ''));\n        setLastName(userData.lastName || (authUser.displayName ? authUser.displayName.split(' ')[1] : ''));\n        setAddress(userData.address || '');\n        setCity(userData.city || '');\n        setCounty(userData.county || '');\n        setPostcode(userData.postcode || '');\n        setMobileNumber(userData.mobileNumber || '');\n        setRole(userData.occupation || '');\n        setEmail(authUser.email); // Set email from authUser\n        setDescription(userData.description || '');\n        setSelectedLabel(userData.labels || '');\n        setLanguages(userData.languages || ['']); // Set languages state\n        setEducation(userData.education || ['']); // Set languages state\n\n        // Fetch employment history data from Firestore\n        const employmentHistoryData = userData.employmentHistory || [];\n        setEmploymentHistory(employmentHistoryData);\n        console.log('Employment History Data:', employmentHistoryData); // Log employmentHistoryData to verify the data structure\n      } else {\n        setPhotoURL(authUser.photoURL);\n        setOriginalPhotoURL(null);\n      }\n\n      const userImagesCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/files`);\n\n      const unsubscribeSnapshot = onSnapshot(userImagesCollectionRef, (querySnapshot) => {\n        const galleryList = querySnapshot.docs.map((doc) => {\n          const data = doc.data();\n          const isImage = /\\.(jpeg|jpg|gif|png|webp|svg)$/i.test(data.url.split('?')[0]);\n          return { id: doc.id, url: data.url, description: data.description || '', title: data.title || '', isImage };\n        });\n\n        console.log('Gallery List:', galleryList); // Log galleryList to verify the data structure\n        setGallery(galleryList);\n      });\n\n      // Fetch links data from Firestore\n      const userLinksCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/links`);\n      const linksSnapshot = await getDocs(userLinksCollectionRef);\n\n      const linksData = linksSnapshot.docs.map((doc) => {\n        const data = doc.data();\n        return { id: doc.id, url: data.url, description: data.description };\n      });\n\n      setLinks(linksData);\n\n      \n\n      return () => {\n        unsubscribeSnapshot();\n      };\n    } else {\n      setAddress('');\n      setCity('');\n      setCounty('');\n      setPostcode('');\n      setMobileNumber('');\n      setPhotoURL(null);\n      setEmail(''); // Clear email\n      setRole('');\n      setDescription('');\n      setLinks([]); // Clear links if not authenticated\n    }\n  });\n\n  return unsubscribe;\n}, []);\n\n\nconst handleFileUpload = async (files, title) => {\n  const file = files[0];\n  const description = \"\"; // Replace with actual description or user input\n  const fileName = title || file.name; // Use title as filename if provided, otherwise use the original filename\n  const userFilesCollectionRef = collection(firestore, `expertApplications/${user.uid}/files`);\n  // Check if file size exceeds the limit (1MB)\n  if (file.size > 1 * 1024 * 1024) {\n    setUploadStatus({ type: 'error', message: 'File size exceeds the limit (1MB).' });\n    return; // Abort file upload\n  }\n  try {\n    const scaledFile = file.size > 1 * 1024 * 1024 ? await scaledFile(file) : file;\n    const downloadURL = await uploadFile(scaledFile, description, fileName, userFilesCollectionRef); // Pass title and file name\n    console.log('Download URL:', downloadURL);\n    setUploadStatus({ type: 'success', message: 'File uploaded successfully!' });\n  } catch (error) {\n    console.error('Error processing file:', error);\n    setUploadStatus({ type: 'error', message: 'Error uploading file. Please try again.' });\n  }\n\n  // Clear upload status message after 3 seconds\n  setTimeout(() => {\n    setUploadStatus(null);\n  }, 3000);\n};\n\nconst uploadFile = async (file, description, fileName, collectionRef) => {\n  const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n\n  try {\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    const snapshot = await uploadTask;\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    const uploadedFiles = { id: fileName, url: downloadURL, description, title: '' }; // Set title to empty string\n    setGallery(prevGallery => [...prevGallery, uploadedFiles]);\n    const docRef = doc(collectionRef, fileName);\n    await setDoc(docRef, { url: downloadURL, description, title: '' }); // Set title to empty string\n\n    console.log(\"Files uploaded and stored successfully\");\n    return downloadURL;\n  } catch (error) {\n    console.error('Error uploading Files:', error);\n  }\n};\n\n\nconst handleRemovePhoto = async (index, event) => {\n  try {\n    console.log('Gallery before removal:', gallery); // Log entire gallery array\n    const files = gallery[index];\n    console.log(' object:', files); \n    if (!files) {\n      console.error('Error removing photo:  not found in gallery');\n      return;\n    }\n    const fileName = files.id;\n    console.log(' name:', fileName); \n    const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n    await deleteObject(storageRef);\n    console.log(' removed successfully from Storage');\n    const docPath = `expertApplications/${user.uid}/files/${fileName}`;\n    console.log('Firestore document path:', docPath); // Log Firestore document path\n    const docRef = doc(firestore, docPath);\n    await deleteDoc(docRef);\n    console.log('Document removed successfully from Firestore');\n    const updatedGallery = gallery.filter((_, i) => i !== index);\n    console.log('Updated gallery:', updatedGallery); // Log updated gallery\n    setGallery(updatedGallery);\n  } catch (error) {\n    console.error('Error removing photo:', error);\n  }\n};\n\nconst handleTitleChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, title: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n\nconst handleDescriptionChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, description: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n \nconst handleUploadDescription = async (index) => {\n  const photo = gallery[index];\n  const docRef = doc(collection(firestore, `expertApplications/${user.uid}/files`), photo.id); // Use photo.id (image name) as document ID\n  try {\n    await Promise.all([\n      updateDoc(docRef, { description: photo.description, title: photo.title }), // Update both description and title\n    ]);\n    console.log(\"Description and title updated successfully in Firestore\");\n  } catch (error) {\n    console.error('Error updating description and title:', error);\n  }\n};\n\nconst getFileIcon = (fileName) => {\n if (!fileName) return null;\n\n  const fileNameWithoutParams = fileName.split('?')[0];\n  const extension = fileNameWithoutParams.split('.').pop().toLowerCase();\n\n  switch (extension) {\n    case 'pdf':\n      return <svg style={{ color: \"red\" }}xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 14 16\"> <path d=\"M5.523 12.424c.14-.082.293-.162.459-.238a7.878 7.878 0 0 1-.45.606c-.28.337-.498.516-.635.572a.266.266 0 0 1-.035.012.282.282 0 0 1-.026-.044c-.056-.11-.054-.216.04-.36.106-.165.319-.354.647-.548zm2.455-1.647c-.119.025-.237.05-.356.078a21.148 21.148 0 0 0 .5-1.05 12.045 12.045 0 0 0 .51.858c-.217.032-.436.07-.654.114zm2.525.939a3.881 3.881 0 0 1-.435-.41c.228.005.434.022.612.054.317.057.466.147.518.209a.095.095 0 0 1 .026.064.436.436 0 0 1-.06.2.307.307 0 0 1-.094.124.107.107 0 0 1-.069.015c-.09-.003-.258-.066-.498-.256zM8.278 6.97c-.04.244-.108.524-.2.829a4.86 4.86 0 0 1-.089-.346c-.076-.353-.087-.63-.046-.822.038-.177.11-.248.196-.283a.517.517 0 0 1 .145-.04c.013.03.028.092.032.198.005.122-.007.277-.038.465z\" fill=\"red\"></path> <path fill-rule=\"evenodd\" d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3zM4.165 13.668c.09.18.23.343.438.419.207.075.412.04.58-.03.318-.13.635-.436.926-.786.333-.401.683-.927 1.021-1.51a11.651 11.651 0 0 1 1.997-.406c.3.383.61.713.91.95.28.22.603.403.934.417a.856.856 0 0 0 .51-.138c.155-.101.27-.247.354-.416.09-.181.145-.37.138-.563a.844.844 0 0 0-.2-.518c-.226-.27-.596-.4-.96-.465a5.76 5.76 0 0 0-1.335-.05 10.954 10.954 0 0 1-.98-1.686c.25-.66.437-1.284.52-1.794.036-.218.055-.426.048-.614a1.238 1.238 0 0 0-.127-.538.7.7 0 0 0-.477-.365c-.202-.043-.41 0-.601.077-.377.15-.576.47-.651.823-.073.34-.04.736.046 1.136.088.406.238.848.43 1.295a19.697 19.697 0 0 1-1.062 2.227 7.662 7.662 0 0 0-1.482.645c-.37.22-.699.48-.897.787-.21.326-.275.714-.08 1.103z\" fill=\"red\"></path> </svg>\n          case 'doc':\n    case 'docx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 110.031 107.5\"><path d=\"M57.505 0h7.475v10c13.375.075 26.738-.138 40.101.075 2.85-.288 5.087 1.925 4.825 4.775.212 24.625-.05 49.262.125 73.887-.125 2.525.25 5.325-1.213 7.562-1.825 1.3-4.188 1.138-6.312 1.237-12.514-.061-25.014-.036-37.526-.036v10h-7.812c-19.024-3.475-38.1-6.662-57.162-10-.013-29.162 0-58.325 0-87.475C19.167 6.675 38.343 3.413 57.506 0z\" fill=\"#2a5699\"/><path d=\"M64.98 13.75h41.25v80H64.98v-10h32.5v-5h-32.5V72.5h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V50h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V27.5h32.5v-5h-32.5v-8.75zM25.83 35.837c2.375-.137 4.75-.237 7.125-.362 1.662 8.438 3.362 16.862 5.162 25.262 1.413-8.675 2.976-17.325 4.487-25.987 2.5-.087 5-.225 7.488-.375-2.825 12.112-5.3 24.325-8.388 36.362-2.088 1.088-5.213-.05-7.688.125-1.663-8.274-3.6-16.5-5.088-24.812-1.462 8.075-3.362 16.075-5.037 24.101-2.4-.125-4.812-.275-7.226-.438-2.074-11-4.512-21.925-6.449-32.95 2.137-.1 4.287-.188 6.425-.263 1.287 7.962 2.75 15.888 3.875 23.862 1.765-8.174 3.564-16.349 5.314-24.525z\" fill=\"#fff\"/></svg>;\n    case 'xls':\n    case 'xlsx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.037 107.5\"><path d=\"M57.55 0h7.425v10c12.513 0 25.025.025 37.537-.038 2.113.087 4.438-.062 6.275 1.2 1.287 1.85 1.138 4.2 1.225 6.325-.062 21.7-.037 43.388-.024 65.075-.062 3.638.337 7.35-.425 10.938-.5 2.6-3.625 2.662-5.713 2.75-12.95.037-25.912-.025-38.875 0v11.25h-7.763c-19.05-3.463-38.138-6.662-57.212-10V10.013C19.188 6.675 38.375 3.388 57.55 0z\" fill=\"#207245\"/><path d=\"M64.975 13.75h41.25V92.5h-41.25V85h10v-8.75h-10v-5h10V62.5h-10v-5h10v-8.75h-10v-5h10V35h-10v-5h10v-8.75h-10v-7.5z\" fill=\"#fff\"/><path d=\"M79.975 21.25h17.5V30h-17.5v-8.75z\" fill=\"#207245\"/><path d=\"M37.025 32.962c2.825-.2 5.663-.375 8.5-.512a2607.344 2607.344 0 0 1-10.087 20.487c3.438 7 6.949 13.95 10.399 20.95a716.28 716.28 0 0 1-9.024-.575c-2.125-5.213-4.713-10.25-6.238-15.7-1.699 5.075-4.125 9.862-6.074 14.838-2.738-.038-5.476-.15-8.213-.263C19.5 65.9 22.6 59.562 25.912 53.312c-2.812-6.438-5.9-12.75-8.8-19.15 2.75-.163 5.5-.325 8.25-.475 1.862 4.888 3.899 9.712 5.438 14.725 1.649-5.312 4.112-10.312 6.225-15.45z\" fill=\"#fff\"/><path d=\"M79.975 35h17.5v8.75h-17.5V35zM79.975 48.75h17.5v8.75h-17.5v-8.75zM79.975 62.5h17.5v8.75h-17.5V62.5zM79.975 76.25h17.5V85h-17.5v-8.75z\" fill=\"#207245\"/></svg>;\n    case 'ppt':\n    case 'pptx':\n      return<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.031 107.5\"><path d=\"M57.893 0h7.087v11.25c13.363.075 26.738-.138 40.088.062 2.875-.275 5.125 1.962 4.838 4.837.212 23.35-.05 46.712.125 70.075-.125 2.525.25 5.325-1.2 7.562-1.825 1.325-4.2 1.15-6.338 1.25-12.5-.062-25-.037-37.513-.037v12.5h-7.774c-19.05-3.475-38.138-6.65-57.2-10-.013-29.162 0-58.325 0-87.475C19.292 6.688 38.58 3.288 57.893 0z\" fill=\"#d24625\"/><path d=\"M64.98 15h41.25v76.25H64.98v-10h30v-5h-30V70h30v-5H64.993c-.013-2.45-.013-4.9-.024-7.35 4.95 1.537 10.587 1.5 15.012-1.476 4.788-2.837 7.288-8.25 7.7-13.65-5.487-.038-10.975-.025-16.45-.025-.012-5.438.062-10.875-.112-16.3-2.05.4-4.1.825-6.138 1.262V15z\" fill=\"#fff\"/><path d=\"M73.743 23.587c8.688.4 15.987 7.712 16.45 16.375-5.488.063-10.975.038-16.463.038 0-5.475-.012-10.95.013-16.413z\" fill=\"#d24625\"/><path d=\"M20.055 33.025c6.788.325 15.013-2.688 20.638 2.4 5.388 6.538 3.963 18.562-4.025 22.476-2.837 1.449-6.087 1.25-9.175 1.149-.013 4.888-.024 9.775-.013 14.663a1323.27 1323.27 0 0 0-7.438-.625c-.112-13.351-.136-26.713.013-40.063z\" fill=\"#fff\"/><path d=\"M27.48 39.788c2.463-.113 5.513-.562 7.176 1.75 1.425 2.45 1.35 5.675.162 8.2-1.425 2.575-4.65 2.325-7.138 2.625-.263-4.188-.237-8.376-.2-12.575z\" fill=\"#d24625\"/></svg>;\n    default:\n      return null; \n  }\n};\n\nuseEffect(() => {\n  const isGalleryLoading = gallery.length === 0 || gallery.some(photo => !photo.description || (photo.description && photo.description !== '' && photo.isUploadingDescription));\n  setIsLoadingGallery(isGalleryLoading);\n\n  const isCarouselLoading = gallery.filter(photo => photo.isImage).length === 0 || gallery.some(photo => photo.isUploading);\n  setIsLoadingCarousel(isCarouselLoading);\n}, [gallery]);\n\n\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n  updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      console.error('Error updating profile photo:', error);\n    });\n};\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false;\n        const customURLStatus = userData.customURL || false;\n        const existingPoints = userData.points || 0;\n        const originalPhotoURL = userData.originalPhotoURL || '';\n  \n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n  \n        await updateDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus,\n          customURL: customURLStatus,\n          originalPhotoURL: originalPhotoURL,\n          keywords: currentKeywords,\n          points: existingPoints,\n          labels: selectedLabel,\n          languages: languages.filter(Boolean), // Filter out empty strings\n          education: education.filter(Boolean), // Filter out empty strings\n          employmentHistory: employmentHistory,\n        });\n  \n        setPreviousPhotoRef(null);\n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n          setSelectedLabel(userData.labels || '');\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 6  ) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n    const MAX_KEYWORDS_LIMIT = 5; \n    \n    const handleImageClick = () => {\n      console.log('Image clicked');\n      setIsModalOpen(true);\n    };\n\n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n    const enableScroll = () => {\n      document.body.style.overflow = '';\n    };\n  \n    const handleDragEnter = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(true);\n    };\n  \n    const handleDragLeave = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n    };\n  \n    const handleDrop = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n      const files = e.dataTransfer.files;\n      handleFileUpload(files);\n    };\n\n    const handleAddLink = async (e) => {\n      e.preventDefault(); // Prevent default form submission behavior\n      if (!linkUrl.trim() || !linkDescription.trim()) {\n        return;\n      }\n      try {\n        setIsLoadingLinks(true);\n        const formattedUrl = linkUrl.startsWith('http://') || linkUrl.startsWith('https://') ? linkUrl : `https://${linkUrl}`;\n        const userLinksCollectionRef = collection(firestore, `expertApplications/${user.uid}/links`);\n        const docRef = await addDoc(userLinksCollectionRef, { url: formattedUrl, description: linkDescription });\n        const newLink = { id: docRef.id, url: formattedUrl, description: linkDescription };\n        setLinks([...links, newLink]); // Update links state with the new link\n        setLinkUrl('');\n        setLinkDescription(''); // Clear the description field after adding the link\n        setUploadStatusLink({ type: 'success', message: 'Link added successfully!', context: 'links' });\n      } catch (error) {\n        console.error('Error adding link:', error);\n        setUploadStatusLink({ type: 'error', message: 'Error adding link. Please try again.' });\n      } finally {\n        setIsLoadingLinks(false);\n      }\n      // Clear upload status message after 3 seconds\n      setTimeout(() => {\n        setUploadStatusLink(null);\n      }, 3000);\n    };\n    \n    \n    \n    const handleRemoveLink = async (e, index) => {\n      e.preventDefault(); // Prevent default form submission behavior\n      try {\n        setIsLoadingLinks(true);\n        const linkId = links[index].id;\n        const linkDocRef = doc(firestore, `expertApplications/${user.uid}/links`, linkId);\n        await deleteDoc(linkDocRef);\n        const updatedLinks = links.filter((_, i) => i !== index);\n        setLinks(updatedLinks);\n        setUploadStatusLink({ type: 'success', message: 'Link removed successfully!', context: 'links' });\n      } catch (error) {\n        console.error('Error removing link:', error);\n        setUploadStatusLink({ type: 'error', message: 'Error removing link. Please try again.' });\n      } finally {\n        setIsLoadingLinks(false);\n      }\n      // Clear upload status message after 3 seconds\n      setTimeout(() => {\n        setUploadStatusLink(null);\n      }, 3000);\n    };\n    \n    const addLanguage = (event, index, value) => {\n      if (event?.key === 'Enter' && event.target.value) {\n        setLanguages([...languages, event.target.value]);\n        event.target.value = '';\n      } else if (index !== undefined && languages[index]) {\n        setLanguages([...languages, languages[index]]);\n        setLanguages(languages.filter((_, i) => i !== index));\n      } else if (value) {\n        setLanguages([...languages, value]);\n      }\n    };\n    \n    const addEducation = (event, index, value) => {\n      if (event?.key === 'Enter' && event.target.value) {\n        setEducation([...education, event.target.value]);\n        event.target.value = '';\n      } else if (index !== undefined && education[index]) {\n        setEducation([...education, education[index]]);\n        setEducation(education.filter((_, i) => i !== index));\n      } else if (value) {\n        setEducation([...education, value]);\n      }\n    };\n\n    const handleRemoveLanguage = (index) => {\n      setLanguages(languages.filter((_, i) => i !== index));\n    };\n    \n    const handleRemoveEducation = (index) => {\n      setEducation(education.filter((_, i) => i !== index));\n    };\n    \n    \n    const handleAddEmployment = () => {\n      if (currentEmployer && currentPosition && startDate) {\n        const isStartDateBeforeEndDate = !isCurrentlyEmployed ? startDate < endDate : true;\n        const isEndDateNotInFuture = !isCurrentlyEmployed ? endDate <= new Date() : true;\n    \n        if (isStartDateBeforeEndDate && isEndDateNotInFuture) {\n          const formattedStartDate = startDate.toLocaleDateString('en-GB', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric'\n          });\n    \n          const formattedEndDate = isCurrentlyEmployed ? 'Present' : endDate.toLocaleDateString('en-GB', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric'\n          });\n    \n          setEmploymentHistory([...employmentHistory, { employer: currentEmployer, position: currentPosition, startDate: formattedStartDate, endDate: formattedEndDate }]);\n          setCurrentEmployer('');\n          setCurrentPosition('');\n          setStartDate('');\n          setEndDate('');\n          setIsCurrentlyEmployed(false);\n        } else {\n          alert('Please enter valid dates. The start date should be before the end date, and the end date should not be in the future.');\n        }\n      }\n    };\n    \n    \n    const handleRemoveEmployment = (index) => {\n      setEmploymentHistory(employmentHistory.filter((_, i) => i !== index));\n    };\n    \n \n    \n    \n    \n    \n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n      </div>\n    </div>\n  )}\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n    </div>\n    <h3>My Profile</h3>\n    <hr />\n    <form className=\"file-upload\">\n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-12 col-12\">\n\n\n\n\n    <div className=\"row g-3\">\n\n{/* LANGUAGES and EDUCATION */}\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n\n    <div className='col-md-4'>\n  <div className=\"row g-2\">\n    <h4>Languages</h4>\n    {languages.map((language, index) => (\n      <div className=\"langauges-spacing \" key={index}>\n        <span\n          className=\"form-control form-control-lg employment-entry\"\n          onClick={() => handleRemoveLanguage(index)}\n        >\n          {language}\n        </span>\n        <svg onClick={() => handleRemoveLanguage(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>\n      </div>\n    ))}\n    <div className=\"d-flex align-items-center\">\n      <input\n        id=\"language-input\"\n        type=\"text\"\n        className=\"form-control form-control-lg\"\n        placeholder=\"Enter language\"\n        aria-label=\"Language\"\n        onKeyDown={(event) => addLanguage(event, null)}\n      />\n    </div>\n    <div className='col-md-12'>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary ms-2\"\n        onClick={() => {\n          const input = document.querySelector('#language-input');\n          addLanguage(null, null, input.value);\n          input.value = '';\n        }}\n      >\n        Add Language\n      </button>\n    </div>\n  </div>\n</div>\n\n<div className='col-md-2'></div>\n\n<div className='col-md-4'>\n  <div className=\"row g-2\">\n    <h4>Education</h4>\n    {education.map((education, index) => (\n      <div className=\"langauges-spacing employment-entry\" key={index}>\n        <span\n          className=\"form-control form-control-lg\"\n          onClick={() => handleRemoveEducation(index)}\n        >\n          {education}\n        </span>\n        <svg onClick={() => handleRemoveEducation(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>\n      </div>\n    ))}\n    <div className=\"d-flex align-items-center\">\n      <input\n        id=\"education-input\"\n        type=\"text\"\n        className=\"form-control form-control-lg\"\n        placeholder=\"Enter Education\"\n        aria-label=\"Education\"\n        onKeyDown={(event) => addEducation(event, null)}\n      />\n    </div>\n    <div className='col-md-12'>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary ms-2\"\n        onClick={() => {\n          const input = document.querySelector('#education-input');\n          addEducation(null, null, input.value);\n          input.value = '';\n        }}\n      >\n        Add Education\n      </button>\n    </div>\n  </div>\n</div>\n\n\n\n</div>\n</div>\n\n{/* GENERAL INFORMATION */}\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <div className=\"col-md-8\">\n        <h4 className=\"mb-4\">General information</h4>\n        <div className=\"col-md-12\">\n    <div className=\"row g-3\">\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">First Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"First name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Last Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"Last name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n            <input\n                type=\"email\"\n                className=\"form-control form-control-lg\"\n                id=\"inputEmail4\"\n                value={user ? user.email : ''}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Mobile number *</label>\n            <input\n                id=\"inputMobileNumber\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your Phone number\"\n                aria-label=\"Phone number\"\n                value={mobileNumber}\n                onChange={(e) => setMobileNumber(e.target.value)}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Role/Expertise *</label>\n            <input\n                id=\"inputExpertise\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your role/expertise\"\n                aria-label=\"your Role\"\n                value={occupation}\n                onChange={(e) => setRole(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Description of Expertise</label>\n            <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                className=\"form-control\"\n                rows=\"4\"\n                placeholder=\"Enter a brief description of your expertise or how you can help\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ resize: 'none' }}\n            />\n        </div>\n\n        \n \n  \n\n\n\n\n\n\n\n\n\n    </div>\n</div>\n</div>\n<div className=\"col-md-4\">\n<div className=\"form-group\">\n<label className=\"form-label\">Categories</label>\n  <ul className=\"listcard expert-listcard\">\n  <li className=\"form-check expert-form-check \">\n      <input type=\"radio\" className=\"form-check-input listboxes \" id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Computer')}\n         checked={selectedLabel === 'Computer'} \n      />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Computer\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Sport'}   onChange={() => setSelectedLabel('Sport')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Sport\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Food'} \n         onChange={() => setSelectedLabel('Food')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Food\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Health'} \n      name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Health')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Health\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Work'} \n      name=\"jobSuccess\"\n         onChange={() => setSelectedLabel('Work')} />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Work\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\"\n          checked={selectedLabel === 'Hobbies'} \n      id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Hobbies')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Hobbies\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n  </ul>\n</div>\n    </div>\n</div>\n    \n    </div>\n    </div>\n    </div>\n\n    {/* LINKS AND IMAGES */}\n\n    <div className=\"card-body card-profile\">\n    <div className=\"link-section\">\n  <h4>Links</h4>\n\n  <div className=\"link-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter link URL\"\n      className=\"form-control\"\n      value={linkUrl}\n      onChange={(e) => setLinkUrl(e.target.value)}\n    />\n    <input\n      type=\"text\"\n      placeholder=\"Enter link description\"\n      className=\"form-control\"\n      value={linkDescription}\n      onChange={(e) => setLinkDescription(e.target.value)}\n    />\n    <button className=\"btn btn-primary mt-2 mb-2\" onClick={(e) => handleAddLink(e)}>Add Link</button>\n  </div>\n\n  <div className=\"links-list\">\n  {links.map((link, index) => (\n    <div key={index} className=\"link-item\">\n      <div className=\"links-container\">\n        <div className=\"url-container\">\n          <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.url.replace(/^https?:\\/\\//, '')}</a>\n        </div>\n        {link.description && <div className=\"description-container\">{link.description}</div>}\n      </div>\n      <button className=\"btn remove-link\" onClick={(e) => handleRemoveLink(e, index)}>❌</button>\n    </div>\n  ))}\n</div>\n\n  {/* Upload status message for links */}\n  {uploadStatusLink && (\n    <div className={`alert alert-${uploadStatusLink.type}`} role=\"alert\">\n      {uploadStatusLink.message}\n    </div>\n  )}\n</div>\n\n<h4>File Gallery</h4>\n  <div\n    className={`upload-container-profile ${isDraggingFile ? 'drag-over-profile' : ''}`}\n    onDragEnter={handleDragEnter}\n    onDragOver={handleDragEnter} // This line is crucial for triggering the drag enter event\n    onDragLeave={handleDragLeave}\n    onDrop={handleDrop}\n  >\n    <label htmlFor=\"file-upload-profile\" className=\"upload-label-profile\">\n      <input\n        id=\"file-upload-profile\"\n        type=\"file\"\n        className=\"upload-field-profile\"\n        onChange={(e) => handleFileUpload(e.target.files)}\n        multiple\n      />\n      <div className=\"upload-wrapper\">\n        <div className=\"upload-icon-profile\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n          </svg>\n        </div>\n        <div className=\"upload-text-profile\">\n      <div>\n      <div className=\"choosefile mt-2\">\n        Choose file \n      </div>\n      {' '}\n      or{' '}\n      </div>\n      <div className=\"draghere\">\n        drag here\n      </div>\n    </div>\n      </div>\n    </label>\n  </div>\n  {uploadStatus && (\n    <div className={`alert alert-${uploadStatus.type}`} role=\"alert\">\n      {uploadStatus.message}\n    </div>\n  )}\n</div>\n\n\n \n          {gallery.some(photo => !photo.isImage && photo.url) && (\n                       <div className='bg-white shadow-sm mb-4 card border-light'>\n           <div className='card-body card-profile'>\n              <div className=\"gallery-container\">\n                {gallery.map((photo, index) => {\n                  // Render the gallery item only if there is a file and it's not an image\n                  if (!photo.isImage && photo.url) {\n                    return (\n                      <div key={index} className=\"gallery-item\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Enter title\"\n                          className=\"form-control form-control-lg borderradius\"\n                          value={photo.title || ''}\n                          onChange={(e) => handleTitleChange(e.target.value, index)}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              handleUploadDescription(index);\n                            }\n                          }}\n                        />\n\n                        {/* Render the file-container only if there is a file */}\n                        {photo.url && (\n                          <div className=\"file-container\">\n                            <div className=\"file-icon\">{getFileIcon(photo.url)}</div>\n                          </div>\n                        )}\n\n                        <textarea\n                          type=\"text\"\n                          placeholder=\"Enter description\"\n                          className=\"form-control form-control-lg borderradius\"\n                          value={photo.description}\n                          onChange={(e) => handleDescriptionChange(e.target.value, index)}\n                        />\n                        <div className='button-container-profile mt-2'>\n                          <button className=\"btn btn-primary\" onClick={(e) => { \n                            e.preventDefault(); // Prevent default form submission behavior\n                            handleUploadDescription(index); // Call the function to handle description upload\n                          }}>Upload Description</button>\n                          <button className=\"btn btn-secondary\" onClick={(e) => { e.preventDefault(); handleRemovePhoto(index); }}>❌ Remove</button>\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return null; // Don't render anything if there is no file or it's an image\n                  }\n                })}\n              </div>\n            </div>\n            </div>\n          )}\n    \n\n    {gallery.some(photo => photo.isImage) && (\n                 <div className='bg-white shadow-sm mb-4 card border-light'>\n <div className='card-body card-profile'>\n    {isLoadingCarousel ? (\n      <div className=\"image-loading-container\">\n        <LoadingCircle />\n      </div>\n    ) : (\n      <Carousel data-bs-theme=\"dark\">\n        {gallery.filter(photo => photo.isImage).map((photo, index) => (\n          <Carousel.Item key={photo.id}>\n            <div className=\"image-loading-container\">\n              {photo.isUploading ? ( // Check if the photo is being uploaded\n                <LoadingCircle />\n              ) : (\n                <img\n                  className=\"carousel-image\"\n                  src={photo.url}\n                  alt={`Gallery ${index + 1}`}\n                />\n              )}\n            </div>\n            <Carousel.Caption>\n              <input\n                type=\"text\"\n                placeholder=\"Enter title\"\n                className=\"form-control form-control-lg\"\n                value={photo.title || ''}\n                onChange={(e) => handleTitleChange(e.target.value, photo.id)}\n              />\n              <textarea\n                type=\"text\"\n                placeholder=\"Enter description\"\n                className=\"form-control form-control-lg mb-2\"\n                value={photo.description}\n                onChange={(e) => handleDescriptionChange(e.target.value, photo.id)}\n              />\n              <div className='button-container-profile mt-2'>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={(e) => {\n                    e.preventDefault(); // Prevent default form submission behavior\n                    handleUploadDescription(index);\n                  }}\n                >\n                  Upload Changes\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={(e) => {\n                    e.preventDefault(); // Prevent default form submission behavior\n                    handleRemovePhoto(index);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </Carousel.Caption>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    )}\n  </div>\n  </div>\n)}\n\n\n    <div className=\"col-xl-12 col-12\">\n   \n    <div className=\"pt-5 rounded\">\n\n\n    {/* ADRESS */}\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    \n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n\n\n    {/* KEYWORDS */}\n\n\n    <div className='row g-3'>\n      <div className='col-md-6'>\n    <div className=\"row g-3\">\n      <div className='card-body card-profile'>\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n    <div className=\"mb-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n    </div>\n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n    </div>\n    </div>\n    </div>\n\n    {/* Employement History */}\n    <div className='col-md-6'>\n  <div className='card-body card-profile'>\n    <h5 className=\"mb-2\">Employment History</h5>\n    <div className=\"me-3\">\n      <input\n        type=\"text\"\n        className='form-control form-control-lg'\n        placeholder=\"Enter employer name\"\n        value={currentEmployer}\n        onChange={(e) => setCurrentEmployer(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        className='form-control form-control-lg'\n        placeholder=\"Enter position\"\n        value={currentPosition}\n        onChange={(e) => setCurrentPosition(e.target.value)}\n      />\n <div className=\"d-flex\">\n  <div className=\"form-group me-3\">\n    <label htmlFor=\"startDate\">Start Date:</label>\n    <DatePicker\n      selected={startDate}\n      onChange={date => setStartDate(date)}\n      dateFormat=\"dd/MM/yyyy\"\n      className=\"form-control\"\n    />\n  </div>\n\n  <div className=\"form-group\">\n    <label htmlFor=\"endDate\">End Date:</label>\n    <DatePicker\n      selected={endDate}\n      onChange={date => setEndDate(date)}\n      dateFormat=\"dd/MM/yyyy\"\n      className=\"form-control\"\n      disabled={isCurrentlyEmployed}\n    />\n  </div>\n  <div className=\"form-check\">\n  <input\n    type=\"checkbox\"\n    className=\"form-check-input\"\n    id=\"currentlyEmployed\"\n    checked={isCurrentlyEmployed}\n    onChange={(e) => setIsCurrentlyEmployed(e.target.checked)}\n  />\n  <p className=\"form-check-label\" htmlFor=\"currentlyEmployed\">\n    Current Employee\n  </p>\n</div>\n\n\n</div>\n\n\n      <button type=\"button\" className='btn btn-primary mt-2 mb-2  ' onClick={handleAddEmployment}>Add Employment</button>\n    </div>\n    <div className=\"employment-list\">\n    {employmentHistory.map((employment, index) => (\n  <div key={employment.id} onClick={() => handleRemoveEmployment(employment.id)} className=\"employment-entry form-control form-control-lg d-inline-flex align-items-center mb-2\">\n    {employment.employer} - {employment.position} ({employment.startDate} - {employment.endDate})\n    <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>\n  </div>\n))}\n    </div>\n  </div>\n</div>\n\n    \n    </div>\n\n\n\n    {/* UPDATE BUTTON */}\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    </div>\n    </div>\n   </div>\n    </div>\n    </form>\n    </div>\n    </div>\n    </div>\n    {isModalOpen && (\n  <ImageCropper\n    setPhotoURL={setPhotoURL}\n    setImageLoadError={setImageLoadError}\n    closeModal={closeModal}\n    photoURL={photoURL}\n    originalPhotoURL={originalPhotoURL}\n    handleImageUpload={handleImageUpload}\n    handleImageError={handleImageError}\n    user={user}\n    collectionName=\"expertApplications\"\n    setIsUploadSuccess={setIsUploadSuccess}\n  />\n)}\n{isUploadSuccess && <FlashMessage />}\n    </div>\n    );\n    }\nexport default ExpertProfile;\n","import React, { useState, useEffect } from 'react';\n\nfunction FlashMessage() {\n  const [showFlash, setShowFlash] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowFlash(false);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className={showFlash ? 'flash' : ''}>\n      {/* ... flash message content ... */}\n    </div>\n  );\n}\n\nexport default FlashMessage;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Cropper from 'react-easy-crop';\nimport imageCompression from 'browser-image-compression';\nimport LoadingCircle from '../components/LoadingCircle';\n\nimport {\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject\n} from 'firebase/storage';\nimport { doc, onSnapshot, updateDoc, getDoc } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\nfunction ImageCropper({\n  closeModal,\n  originalPhotoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n  setIsUploadSuccess,\n}) {\n  const [image, setImage] = useState(originalPhotoURL);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null);\n  const fileInputRef = useRef(null);\n  const [cropperRef, setCropperRef] = useState(null);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const [showFlash, setShowFlash] = useState(false); // State for flash effect\n  const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n  const [originalImage, setOriginalImage] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n\n\n  useEffect(() => {\n    document.body.classList.add('modal-open');\n\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, []);\n\n\n\n  const handleUpload = async () => {\n    if (!croppedAreaPixels) {\n      return;\n    }\n    setIsUploading(true); \n    // Get a reference to the current user's document in Firestore\n    const userDocRef = doc(firestore, collectionName, user.uid);\n  \n    // Get the current photoURL from the user's document\n    const docSnap = await getDoc(userDocRef);\n    const currentPhotoURL = docSnap.data()?.photoURL;\n  \n    // If there's a current photoURL, delete the old cropped image from Firebase Storage\n    if (currentPhotoURL && currentPhotoURL.startsWith('https://firebasestorage.googleapis.com')) {\n      const oldCroppedImageStorageRef = ref(storage, currentPhotoURL);\n      try {\n        await deleteObject(oldCroppedImageStorageRef);\n      } catch (error) {\n        console.error('Error deleting old cropped image from storage:', error);\n      }\n    }\n    \n  \n    try {\n      const originalImageBlob = await fetch(image).then((res) => res.blob());\n      const croppedImageBlob = await new Promise((resolve) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const imageToCrop = new Image();\n  \n        imageToCrop.onload = async () => {\n          canvas.width = croppedAreaPixels.width;\n          canvas.height = croppedAreaPixels.height;\n  \n          ctx.drawImage(\n            imageToCrop,\n            croppedAreaPixels.x,\n            croppedAreaPixels.y,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height,\n            0,\n            0,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height\n          );\n  \n          canvas.toBlob(resolve, 'image/jpeg');\n        };\n  \n        imageToCrop.src = URL.createObjectURL(originalImageBlob);\n      });\n  \n      // Log the size of the original cropped image\n      console.log('Original cropped image size:', croppedImageBlob.size, 'bytes');\n  \n      // Convert croppedImageBlob to a File object\n      const croppedImageFile = new File([croppedImageBlob], selectedFileName, { type: 'image/jpeg' });\n  \n      // Compress the cropped image file\n      const options = {\n        maxSizeMB: 0.5,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true,\n      };\n      const compressedFile = await imageCompression(croppedImageFile, options);\n  \n      // Log the size of the compressed image\n      console.log('Compressed image size:', compressedFile.size, 'bytes');\n  \n      // Convert compressedFile back to Blob\n      const compressedBlob = await compressedFile.arrayBuffer().then(arrayBuffer => new Blob([arrayBuffer]));\n  \n      // Upload original image\n      const originalImageStorageRef = ref(storage, `originalImages/${selectedFileName}`);\n      const originalImageMetadata = { contentType: 'image/jpeg' };\n      const originalImageUploadTask = uploadBytesResumable(originalImageStorageRef, originalImageBlob, originalImageMetadata);\n  \n      originalImageUploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle upload progress here\n        },\n        (error) => {\n        },\n        async () => {\n          const originalImageDownloadURL = await getDownloadURL(originalImageUploadTask.snapshot.ref);\n          if (originalImageDownloadURL) {\n            await updateDoc(userDocRef, { originalPhotoURL: originalImageDownloadURL });\n          }\n        }\n      );\n  \n      // Upload compressed cropped image\n      const croppedImageStorageRef = ref(storage, `profileImages/${selectedFileName}`);\n      const croppedImageUploadTask = uploadBytesResumable(croppedImageStorageRef, compressedBlob);\n  \n      croppedImageUploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle upload progress here\n        },\n        (error) => {\n        },\n        async () => {\n          const croppedImageDownloadURL = await getDownloadURL(croppedImageUploadTask.snapshot.ref);\n          if (croppedImageDownloadURL) {\n            // Update the Firestore document immediately before handling the upload success\n            await updateDoc(userDocRef, { photoURL: croppedImageDownloadURL });\n            handleImageUpload(croppedImageDownloadURL);\n            setIsUploadSuccess(true); // add this line\n            closeModal();\n            // Set the original image as the new image in the Cropper\n            if (originalImageBlob) {\n              const reader = new FileReader();\n              reader.onload = (event) => {\n                setImage(event.target.result);\n              };\n              reader.readAsDataURL(originalImageBlob);\n            }\n            setCroppedAreaPixels(null); // Reset cropped area\n            setZoom(1); // Reset zoom level\n            setCrop({ x: 0, y: 0 }); // Reset crop position\n          }\n        }\n      );\n    } catch (error) {\n      setIsUploading(false); \n    }\n  };\n  \n  \n\n  \n  \n\nconst handleDeletePhoto = async () => {\n  if (user && user.uid && docRef) {\n    // Get storage references for both images\n    const originalImageStorageRef = ref(storage, `originalImages/${selectedFileName}`);\n    const croppedImageStorageRef = ref(storage, `profileImages/${selectedFileName}`);\n\n    // Delete images from Firebase Storage\n    try {\n      await deleteObject(originalImageStorageRef);\n      await deleteObject(croppedImageStorageRef);\n    } catch (error) {\n      console.error('Error deleting images from storage:', error);\n    }\n\n    // Update the Firestore document to remove URLs\n    await updateDoc(docRef, {\n      photoURL: null,\n      originalPhotoURL: null,\n    });\n\n    // Update local state\n    setPhotoURL(defaultImageURL);\n    setImage(defaultImageURL);\n  }\n};\n\n\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n  \n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'capture=camera';\n  \n    // Add an event listener for file changes\n    fileInputRef.current.addEventListener('change', (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        setSelectedFileName(file.name);\n        setOriginalImage(file);\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          setImage(event.target.result);\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  \n    // Append the input element to the DOM\n    document.body.appendChild(fileInputRef.current);\n  \n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef);\n  \n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n  \n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.originalPhotoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n  \n    return () => {\n      unsubscribe();\n      // Remove the input element from the DOM when the component unmounts\n      document.body.removeChild(fileInputRef.current);\n    };\n  }, [user.uid, collectionName]);\n  \n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modalcrop\">\n        <div className=\"top-section\">\n          <div style={{ marginRight: '10px' }}>Profile image</div>\n          <button className=\"btn-crop\" onClick={closeModal}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"white\"\n              strokeWidth=\"1.5\"\n              className={`w-6 h-6 smaller-svg`}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className={showFlash ? 'flash' : ''}></div> {/* Flash effect */}\n        <div className='centerimage'>\n\n          {image && (\n            <Cropper\n              ref={setCropperRef}\n              image={image}\n              crop={crop}\n              zoom={zoom}\n              onCropChange={setCrop}\n              onZoomChange={setZoom}\n              onCropComplete={onCropComplete}\n              cropShape=\"round\"\n              aspect={4 / 4}\n            />\n\n          )}\n\n        </div>\n        <div className=\"button-section\">\n          <button\n            className=\"btn-crop\"\n            onClick={() => fileInputRef.current.click()}\n          >\n            <div className=\"button-content\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                className={`w-6 h-6 smaller-svg`}\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\"\n                />\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\"\n                />\n              </svg>\n              New Photo\n            </div>\n          </button>\n          <div className=\"success\">\n  <div className=\"button-container\">\n    {isUploading ? (\n      <LoadingCircle />\n    ) : (\n      <button className=\"btn-crop\" onClick={handleUpload}>\n        <div className=\"button-content\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"white\"\n            strokeWidth=\"1.5\"\n            className={`w-6 h-6 smaller-svg`}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"\n            />\n          </svg>\n          Upload Photo\n        </div>\n      </button>\n    )}\n  </div>\n</div>\n\n          <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n            <div className=\"button-content\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                className={`w-6 h-6 smaller-svg`}\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                />\n              </svg>\n              Delete Photo\n            </div>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCropper;"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","selectedLabel","setSelectedLabel","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","gallery","setGallery","_useState45","_useState46","setIsLoadingGallery","_useState47","_useState48","isLoadingCarousel","setIsLoadingCarousel","_useState49","_useState50","isDraggingFile","setIsDraggingFile","_useState51","_useState52","uploadStatus","setUploadStatus","_useState53","_useState54","uploadStatusLink","setUploadStatusLink","_useState55","_useState56","linkUrl","setLinkUrl","_useState57","_useState58","links","setLinks","_useState59","_useState60","setIsLoadingLinks","_useState61","_useState62","linkDescription","setLinkDescription","_useState63","_useState64","languages","setLanguages","_useState65","_useState66","education","setEducation","_useState67","_useState68","employmentHistory","setEmploymentHistory","_useState69","_useState70","currentEmployer","setCurrentEmployer","_useState71","_useState72","currentPosition","setCurrentPosition","_useState73","_useState74","startDate","setStartDate","_useState75","_useState76","endDate","setEndDate","_useState77","_useState78","isCurrentlyEmployed","setIsCurrentlyEmployed","_useState79","_useState80","isUploadSuccess","setIsUploadSuccess","_useState81","_useState82","originalPhotoURL","setOriginalPhotoURL","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","oldProfileDocRef","userData","employmentHistoryData","userImagesCollectionRef","unsubscribeSnapshot","userLinksCollectionRef","linksSnapshot","linksData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","approved","deleteDoc","displayName","split","email","labels","console","log","collection","concat","onSnapshot","querySnapshot","galleryList","docs","map","isImage","test","url","id","title","getDocs","abrupt","stop","_x","apply","arguments","handleFileUpload","_ref2","_callee2","files","file","fileName","userFilesCollectionRef","scaledFile","downloadURL","_context2","name","size","t0","uploadFile","t1","error","setTimeout","_x2","_x3","_ref3","_callee3","collectionRef","storageRef","uploadTask","snapshot","uploadedFiles","docRef","_context3","ref","storage","uploadBytesResumable","getDownloadURL","prevGallery","_toConsumableArray","setDoc","_x4","_x5","_x6","_x7","handleRemovePhoto","_ref4","_callee4","index","event","docPath","updatedGallery","_context4","deleteObject","filter","_","i","_x8","_x9","handleTitleChange","value","photoId","photo","_objectSpread","handleDescriptionChange","handleUploadDescription","_ref5","_callee5","_context5","Promise","all","updateDoc","_x10","getFileIcon","pop","toLowerCase","_jsxs","style","color","xmlns","width","height","viewBox","children","_jsx","d","fill","isGalleryLoading","length","some","isUploadingDescription","isCarouselLoading","isUploading","handleImageUpload","_ref6","_callee6","_context6","updateProfile","then","catch","_x11","clearUpdateMessage","updateProfileInfo","_ref7","_callee7","approvedStatus","customURLStatus","existingPoints","_originalPhotoURL","updatedUser","newPhotoURL","_context7","points","currentUser","document","getElementById","Boolean","_ref8","_callee8","_context8","_x12","handleRemoveKeyword","updatedKeywords","splice","removeKeyword","handleImageClick","enableScroll","body","overflow","handleDragEnter","e","preventDefault","handleAddLink","_ref9","_callee9","formattedUrl","newLink","_context9","trim","startsWith","addDoc","context","finish","_x13","handleRemoveLink","_ref10","_callee10","linkId","linkDocRef","updatedLinks","_context10","_x14","_x15","addLanguage","key","target","undefined","addEducation","handleRemoveLanguage","handleRemoveEducation","className","src","alt","onError","onClick","cursor","strokeWidth","stroke","strokeLinecap","strokeLinejoin","process","language","marginLeft","placeholder","onKeyDown","input","querySelector","onChange","readOnly","pointerEvents","htmlFor","rows","resize","checked","link","href","rel","replace","role","onDragEnter","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","LoadingCircle","Carousel","Item","Caption","window","innerWidth","handleAddKeyword","disabled","keyword","DatePicker","selected","date","dateFormat","isStartDateBeforeEndDate","isEndDateNotInFuture","Date","formattedStartDate","toLocaleDateString","day","month","year","formattedEndDate","employer","position","alert","employment","handleRemoveEmployment","ImageCropper","closeModal","handleImageError","collectionName","FlashMessage","showFlash","setShowFlash","timer","clearTimeout","image","setImage","selectedFileName","setSelectedFileName","setDocRef","fileInputRef","useRef","setCropperRef","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","defaultImageURL","setOriginalImage","setIsUploading","classList","add","remove","handleUpload","_docSnap$data","docSnap","currentPhotoURL","oldCroppedImageStorageRef","originalImageBlob","croppedImageBlob","croppedImageFile","options","compressedFile","compressedBlob","originalImageStorageRef","originalImageMetadata","originalImageUploadTask","croppedImageStorageRef","croppedImageUploadTask","fetch","res","blob","resolve","canvas","createElement","ctx","getContext","imageToCrop","Image","onload","drawImage","toBlob","URL","createObjectURL","File","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","arrayBuffer","Blob","contentType","on","originalImageDownloadURL","croppedImageDownloadURL","reader","FileReader","result","readAsDataURL","handleDeletePhoto","current","accept","addEventListener","appendChild","_doc$data","handlePhotoURLChange","removeChild","marginRight","Cropper","onCropChange","onZoomChange","onCropComplete","croppedArea","cropShape","aspect","click"],"sourceRoot":""}