{"version":3,"file":"static/js/915.2962732e.chunk.js","mappings":"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","sources":["Users/ExpertProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, firestore, storage } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteDoc, setDoc, collection, onSnapshot, addDoc  } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL,deleteObject } from \"firebase/storage\";\nimport { updateProfile } from 'firebase/auth';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\n\n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\nconst [selectedLabel, setSelectedLabel] = useState('');\nconst [isModalOpen, setIsModalOpen] = useState(false);\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [gallery, setGallery] = useState([]);\n\nconst [isDraggingFile, setIsDraggingFile] = useState(false);\n\n\n\n\nuseEffect(() => {\n  const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      setUser(authUser);\n\n      const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      \n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        setPhotoURL(userData.photoURL || authUser.photoURL);\n        setFirstName(userData.first_name || (authUser.displayName ? authUser.displayName.split(' ')[0] : ''));\n        setLastName(userData.last_name || (authUser.displayName ? authUser.displayName.split(' ')[1] : ''));\n        setAddress(userData.address || '');\n        setCity(userData.city || '');\n        setCounty(userData.county || '');\n        setPostcode(userData.postcode || '');\n        setMobileNumber(userData.mobileNumber || '');\n        setRole(userData.occupation || '');\n        setEmail(authUser.email); // Set email from authUser\n        setDescription(userData.description || '');\n        setSelectedLabel(userData.labels || '');\n      } else {\n        setPhotoURL(authUser.photoURL);\n      }\n      \n      const userImagesCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/files`);\n      \n      const unsubscribeSnapshot = onSnapshot(userImagesCollectionRef, (querySnapshot) => {\n        const galleryList = querySnapshot.docs.map((doc) => {\n          const data = doc.data();\n          const isImage = /\\.(jpeg|jpg|gif|png|webp|svg)$/i.test(data.url.split('?')[0]);\n          return { id: doc.id, url: data.url, description: data.description || '', title: data.title || '', isImage };\n        });\n        \n        console.log('Gallery List:', galleryList); // Log galleryList to verify the data structure\n        setGallery(galleryList);\n      });\n\n      return () => {\n        unsubscribeSnapshot();\n      };\n    } else {\n      setAddress('');\n      setCity('');\n      setCounty('');\n      setPostcode('');\n      setMobileNumber('');\n      setPhotoURL(null);\n      setEmail(''); // Clear email\n      setRole('');\n      setDescription('');\n    }\n  });\n\n  return unsubscribe;\n}, []);\n\n\n\nconst handleFileUpload = async (files, title) => {\n  const file = files[0];\n  const description = \"\"; // Replace with actual description or user input\n  const fileName = title || file.name; // Use title as filename if provided, otherwise use the original filename\n  const userFilesCollectionRef = collection(firestore, `expertApplications/${user.uid}/files`);\n  try {\n    const scaledFile = file.size > 1 * 1024 * 1024 ? await scaledFile(file) : file;\n    const downloadURL = await uploadFile(scaledFile, description, fileName, userFilesCollectionRef); // Pass title and file name\n    console.log('Download URL:', downloadURL); // Add this log statement\n  } catch (error) {\n    console.error('Error processing file:', error);\n  }\n};\n\nconst uploadFile = async (file, description, fileName, collectionRef) => {\n  const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n\n  try {\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    const snapshot = await uploadTask;\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    const uploadedFiles = { id: fileName, url: downloadURL, description, title: '' }; // Set title to empty string\n    setGallery(prevGallery => [...prevGallery, uploadedFiles]);\n    const docRef = doc(collectionRef, fileName);\n    await setDoc(docRef, { url: downloadURL, description, title: '' }); // Set title to empty string\n\n    console.log(\"Files uploaded and stored successfully\");\n    return downloadURL;\n  } catch (error) {\n    console.error('Error uploading Files:', error);\n  }\n};\n\n\nconst handleRemovePhoto = async (index, event) => {\n  try {\n    console.log('Gallery before removal:', gallery); // Log entire gallery array\n    const files = gallery[index];\n    console.log(' object:', files); \n    if (!files) {\n      console.error('Error removing photo:  not found in gallery');\n      return;\n    }\n    const fileName = files.id;\n    console.log(' name:', fileName); \n    const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n    await deleteObject(storageRef);\n    console.log(' removed successfully from Storage');\n    const docPath = `expertApplications/${user.uid}/files/${fileName}`;\n    console.log('Firestore document path:', docPath); // Log Firestore document path\n    const docRef = doc(firestore, docPath);\n    await deleteDoc(docRef);\n    console.log('Document removed successfully from Firestore');\n    const updatedGallery = gallery.filter((_, i) => i !== index);\n    console.log('Updated gallery:', updatedGallery); // Log updated gallery\n    setGallery(updatedGallery);\n  } catch (error) {\n    console.error('Error removing photo:', error);\n  }\n};\n\nconst handleTitleChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, title: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n\nconst handleDescriptionChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, description: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n \n\n\n\nconst handleUploadDescription = async (index) => {\n  const photo = gallery[index];\n  const docRef = doc(collection(firestore, `expertApplications/${user.uid}/files`), photo.id); // Use photo.id (image name) as document ID\n  try {\n    await Promise.all([\n      updateDoc(docRef, { description: photo.description, title: photo.title }), // Update both description and title\n    ]);\n    console.log(\"Description and title updated successfully in Firestore\");\n  } catch (error) {\n    console.error('Error updating description and title:', error);\n  }\n};\n\n\nconst getFileIcon = (fileName) => {\n if (!fileName) return null;\n\n  const fileNameWithoutParams = fileName.split('?')[0];\n  const extension = fileNameWithoutParams.split('.').pop().toLowerCase();\n\n  switch (extension) {\n    case 'pdf':\n      return <svg style={{ color: \"red\" }}xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 14 16\"> <path d=\"M5.523 12.424c.14-.082.293-.162.459-.238a7.878 7.878 0 0 1-.45.606c-.28.337-.498.516-.635.572a.266.266 0 0 1-.035.012.282.282 0 0 1-.026-.044c-.056-.11-.054-.216.04-.36.106-.165.319-.354.647-.548zm2.455-1.647c-.119.025-.237.05-.356.078a21.148 21.148 0 0 0 .5-1.05 12.045 12.045 0 0 0 .51.858c-.217.032-.436.07-.654.114zm2.525.939a3.881 3.881 0 0 1-.435-.41c.228.005.434.022.612.054.317.057.466.147.518.209a.095.095 0 0 1 .026.064.436.436 0 0 1-.06.2.307.307 0 0 1-.094.124.107.107 0 0 1-.069.015c-.09-.003-.258-.066-.498-.256zM8.278 6.97c-.04.244-.108.524-.2.829a4.86 4.86 0 0 1-.089-.346c-.076-.353-.087-.63-.046-.822.038-.177.11-.248.196-.283a.517.517 0 0 1 .145-.04c.013.03.028.092.032.198.005.122-.007.277-.038.465z\" fill=\"red\"></path> <path fill-rule=\"evenodd\" d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3zM4.165 13.668c.09.18.23.343.438.419.207.075.412.04.58-.03.318-.13.635-.436.926-.786.333-.401.683-.927 1.021-1.51a11.651 11.651 0 0 1 1.997-.406c.3.383.61.713.91.95.28.22.603.403.934.417a.856.856 0 0 0 .51-.138c.155-.101.27-.247.354-.416.09-.181.145-.37.138-.563a.844.844 0 0 0-.2-.518c-.226-.27-.596-.4-.96-.465a5.76 5.76 0 0 0-1.335-.05 10.954 10.954 0 0 1-.98-1.686c.25-.66.437-1.284.52-1.794.036-.218.055-.426.048-.614a1.238 1.238 0 0 0-.127-.538.7.7 0 0 0-.477-.365c-.202-.043-.41 0-.601.077-.377.15-.576.47-.651.823-.073.34-.04.736.046 1.136.088.406.238.848.43 1.295a19.697 19.697 0 0 1-1.062 2.227 7.662 7.662 0 0 0-1.482.645c-.37.22-.699.48-.897.787-.21.326-.275.714-.08 1.103z\" fill=\"red\"></path> </svg>\n          case 'doc':\n    case 'docx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 110.031 107.5\"><path d=\"M57.505 0h7.475v10c13.375.075 26.738-.138 40.101.075 2.85-.288 5.087 1.925 4.825 4.775.212 24.625-.05 49.262.125 73.887-.125 2.525.25 5.325-1.213 7.562-1.825 1.3-4.188 1.138-6.312 1.237-12.514-.061-25.014-.036-37.526-.036v10h-7.812c-19.024-3.475-38.1-6.662-57.162-10-.013-29.162 0-58.325 0-87.475C19.167 6.675 38.343 3.413 57.506 0z\" fill=\"#2a5699\"/><path d=\"M64.98 13.75h41.25v80H64.98v-10h32.5v-5h-32.5V72.5h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V50h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V27.5h32.5v-5h-32.5v-8.75zM25.83 35.837c2.375-.137 4.75-.237 7.125-.362 1.662 8.438 3.362 16.862 5.162 25.262 1.413-8.675 2.976-17.325 4.487-25.987 2.5-.087 5-.225 7.488-.375-2.825 12.112-5.3 24.325-8.388 36.362-2.088 1.088-5.213-.05-7.688.125-1.663-8.274-3.6-16.5-5.088-24.812-1.462 8.075-3.362 16.075-5.037 24.101-2.4-.125-4.812-.275-7.226-.438-2.074-11-4.512-21.925-6.449-32.95 2.137-.1 4.287-.188 6.425-.263 1.287 7.962 2.75 15.888 3.875 23.862 1.765-8.174 3.564-16.349 5.314-24.525z\" fill=\"#fff\"/></svg>;\n    case 'xls':\n    case 'xlsx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.037 107.5\"><path d=\"M57.55 0h7.425v10c12.513 0 25.025.025 37.537-.038 2.113.087 4.438-.062 6.275 1.2 1.287 1.85 1.138 4.2 1.225 6.325-.062 21.7-.037 43.388-.024 65.075-.062 3.638.337 7.35-.425 10.938-.5 2.6-3.625 2.662-5.713 2.75-12.95.037-25.912-.025-38.875 0v11.25h-7.763c-19.05-3.463-38.138-6.662-57.212-10V10.013C19.188 6.675 38.375 3.388 57.55 0z\" fill=\"#207245\"/><path d=\"M64.975 13.75h41.25V92.5h-41.25V85h10v-8.75h-10v-5h10V62.5h-10v-5h10v-8.75h-10v-5h10V35h-10v-5h10v-8.75h-10v-7.5z\" fill=\"#fff\"/><path d=\"M79.975 21.25h17.5V30h-17.5v-8.75z\" fill=\"#207245\"/><path d=\"M37.025 32.962c2.825-.2 5.663-.375 8.5-.512a2607.344 2607.344 0 0 1-10.087 20.487c3.438 7 6.949 13.95 10.399 20.95a716.28 716.28 0 0 1-9.024-.575c-2.125-5.213-4.713-10.25-6.238-15.7-1.699 5.075-4.125 9.862-6.074 14.838-2.738-.038-5.476-.15-8.213-.263C19.5 65.9 22.6 59.562 25.912 53.312c-2.812-6.438-5.9-12.75-8.8-19.15 2.75-.163 5.5-.325 8.25-.475 1.862 4.888 3.899 9.712 5.438 14.725 1.649-5.312 4.112-10.312 6.225-15.45z\" fill=\"#fff\"/><path d=\"M79.975 35h17.5v8.75h-17.5V35zM79.975 48.75h17.5v8.75h-17.5v-8.75zM79.975 62.5h17.5v8.75h-17.5V62.5zM79.975 76.25h17.5V85h-17.5v-8.75z\" fill=\"#207245\"/></svg>;\n    case 'ppt':\n    case 'pptx':\n      return<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.031 107.5\"><path d=\"M57.893 0h7.087v11.25c13.363.075 26.738-.138 40.088.062 2.875-.275 5.125 1.962 4.838 4.837.212 23.35-.05 46.712.125 70.075-.125 2.525.25 5.325-1.2 7.562-1.825 1.325-4.2 1.15-6.338 1.25-12.5-.062-25-.037-37.513-.037v12.5h-7.774c-19.05-3.475-38.138-6.65-57.2-10-.013-29.162 0-58.325 0-87.475C19.292 6.688 38.58 3.288 57.893 0z\" fill=\"#d24625\"/><path d=\"M64.98 15h41.25v76.25H64.98v-10h30v-5h-30V70h30v-5H64.993c-.013-2.45-.013-4.9-.024-7.35 4.95 1.537 10.587 1.5 15.012-1.476 4.788-2.837 7.288-8.25 7.7-13.65-5.487-.038-10.975-.025-16.45-.025-.012-5.438.062-10.875-.112-16.3-2.05.4-4.1.825-6.138 1.262V15z\" fill=\"#fff\"/><path d=\"M73.743 23.587c8.688.4 15.987 7.712 16.45 16.375-5.488.063-10.975.038-16.463.038 0-5.475-.012-10.95.013-16.413z\" fill=\"#d24625\"/><path d=\"M20.055 33.025c6.788.325 15.013-2.688 20.638 2.4 5.388 6.538 3.963 18.562-4.025 22.476-2.837 1.449-6.087 1.25-9.175 1.149-.013 4.888-.024 9.775-.013 14.663a1323.27 1323.27 0 0 0-7.438-.625c-.112-13.351-.136-26.713.013-40.063z\" fill=\"#fff\"/><path d=\"M27.48 39.788c2.463-.113 5.513-.562 7.176 1.75 1.425 2.45 1.35 5.675.162 8.2-1.425 2.575-4.65 2.325-7.138 2.625-.263-4.188-.237-8.376-.2-12.575z\" fill=\"#d24625\"/></svg>;\n    default:\n      return null; \n  }\n};\n\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n  updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      console.error('Error updating profile photo:', error);\n    });\n};\n\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; \n        const customURLStatus = userData.customURL || false;\n        const existingPoints = userData.points || 0;\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus,\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints,\n          labels: selectedLabel, \n        });\n        setPreviousPhotoRef(null);\n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n          setSelectedLabel(userData.labels || '');\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 6  ) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n    const MAX_KEYWORDS_LIMIT = 5; \n    const handleImageClick = () => {\n      console.log('Image clicked');\n      setIsModalOpen(true);\n    };\n\n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n    const enableScroll = () => {\n      document.body.style.overflow = '';\n    };\n  \n    const handleDragEnter = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(true);\n    };\n  \n    const handleDragLeave = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n    };\n  \n    const handleDrop = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n      const files = e.dataTransfer.files;\n      handleFileUpload(files);\n    };\n\n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n      </div>\n    </div>\n  )}\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n      </div>\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n    </div>\n    <h3>My Profile</h3>\n    <hr />\n    <form className=\"file-upload\">\n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-12 col-12\">\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <div className=\"col-md-8\">\n        <h4 className=\"mb-4\">General information</h4>\n        <div className=\"col-md-12\">\n    <div className=\"row g-3\">\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">First Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"First name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Last Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"Last name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n            <input\n                type=\"email\"\n                className=\"form-control form-control-lg\"\n                id=\"inputEmail4\"\n                value={user ? user.email : ''}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Mobile number *</label>\n            <input\n                id=\"inputMobileNumber\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your Phone number\"\n                aria-label=\"Phone number\"\n                value={mobileNumber}\n                onChange={(e) => setMobileNumber(e.target.value)}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Role/Expertise *</label>\n            <input\n                id=\"inputExpertise\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your role/expertise\"\n                aria-label=\"your Role\"\n                value={occupation}\n                onChange={(e) => setRole(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Description of Expertise</label>\n            <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                className=\"form-control\"\n                rows=\"4\"\n                placeholder=\"Enter a brief description of your expertise or how you can help\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ resize: 'none' }}\n            />\n        </div>\n\n        \n \n  \n\n\n\n\n\n\n\n\n\n    </div>\n</div>\n</div>\n<div className=\"col-md-4\">\n<div className=\"form-group\">\n<label className=\"form-label\">Categories</label>\n  <ul className=\"listcard expert-listcard\">\n  <li className=\"form-check expert-form-check \">\n      <input type=\"radio\" className=\"form-check-input listboxes \" id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Computer')}\n         checked={selectedLabel === 'Computer'} \n      />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Computer\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Sport'}   onChange={() => setSelectedLabel('Sport')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Sport\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Food'} \n         onChange={() => setSelectedLabel('Food')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Food\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Health'} \n      name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Health')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Health\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Work'} \n      name=\"jobSuccess\"\n         onChange={() => setSelectedLabel('Work')} />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Work\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\"\n          checked={selectedLabel === 'Hobbies'} \n      id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Hobbies')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Hobbies\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n  </ul>\n</div>\n    </div>\n</div>\n    \n    </div>\n    </div>\n\n\n    <div className=\"card-body card-profile\">\n      <h4>File Gallery</h4>\n      <div\n        className={`upload-container-profile ${isDraggingFile ? 'drag-over-profile' : ''}`}\n        onDragEnter={handleDragEnter}\n        onDragOver={handleDragEnter} // This line is crucial for triggering the drag enter event\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n      >\n        <label htmlFor=\"file-upload-profile\" className=\"upload-label-profile\">\n          <input\n            id=\"file-upload-profile\"\n            type=\"file\"\n            className=\"upload-field-profile\"\n            onChange={(e) => handleFileUpload(e.target.files)}\n            multiple\n          />\n          <div className=\"upload-icon-profile\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n            </svg>\n          </div>\n          <div className=\"upload-text-profile\">\n            <div className=\"choose-file-profile\">Choose file</div>\n            <div className=\"drag-here-profile\">or drag here</div>\n          </div>\n        </label>\n      </div>\n    </div>\n\n    {gallery.some(photo => !photo.isImage && photo.url) && (\n  <div className=\"carousel-container mb-4\">\n    <div className=\"gallery-container\">\n      {gallery.map((photo, index) => {\n        // Render the gallery item only if there is a file and it's not an image\n        if (!photo.isImage && photo.url) {\n          return (\n            <div key={index} className=\"gallery-item\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter title\"\n                className=\"form-control form-control-lg borderradius\"\n                value={photo.title || ''}\n                onChange={(e) => handleTitleChange(e.target.value, index)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    e.preventDefault();\n                    handleUploadDescription(index);\n                  }\n                }}\n              />\n\n              {/* Render the file-container only if there is a file */}\n              {photo.url && (\n                <div className=\"file-container\">\n                  <div className=\"file-icon\">{getFileIcon(photo.url)}</div>\n                </div>\n              )}\n\n              <textarea\n                type=\"text\"\n                placeholder=\"Enter description\"\n                className=\"form-control form-control-lg borderradius\"\n                value={photo.description}\n                onChange={(e) => handleDescriptionChange(e.target.value, index)}\n              />\n              <div className='button-container-profile mt-2'>\n                <button className=\"btn btn-primary\" onClick={(e) => { \n                  e.preventDefault(); // Prevent default form submission behavior\n                  handleUploadDescription(index); // Call the function to handle description upload\n                }}>Upload Description</button>\n                <button className=\"btn btn-secondary\" onClick={(e) => { e.preventDefault(); handleRemovePhoto(index); }}>❌ Remove</button>\n              </div>\n            </div>\n          );\n        } else {\n          return null; // Don't render anything if there is no file or it's an image\n        }\n      })}\n    </div>\n  </div>\n)}\n\n\n\n\n  {gallery.some(photo => photo.isImage) && (\n<div className=\"carousel-container\">\n    <Carousel data-bs-theme=\"dark\">\n      {gallery.filter(photo => photo.isImage).map((photo, index) => (\n        <Carousel.Item key={photo.id}>\n          <img\n            className=\"carousel-image\"\n            src={photo.url}\n            alt={`Gallery ${index + 1}`}\n          />\n          <Carousel.Caption>\n            <input\n              type=\"text\"\n              placeholder=\"Enter title\"\n              className=\"form-control form-control-lg\"\n              value={photo.title || ''}\n              onChange={(e) => handleTitleChange(e.target.value, photo.id)}\n            />\n            <textarea\n              type=\"text\"\n              placeholder=\"Enter description\"\n              className=\"form-control form-control-lg mb-2\"\n              value={photo.description}\n              onChange={(e) => handleDescriptionChange(e.target.value, photo.id)}\n            />\n            <div className='button-container-profile mt-2'>\n            <button\n  className=\"btn btn-primary\"\n  onClick={(e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    handleUploadDescription(index);\n  }}\n>\n  Upload Changes\n</button>\n\n  <button\n  className=\"btn btn-secondary\"\n  onClick={(e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    handleRemovePhoto(index);\n  }}\n>\n  ❌ Remove\n</button>\n\n           \n            </div>\n          </Carousel.Caption>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n    </div>\n\n  )}\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n    <div className=\"col-xl-12 col-12\">\n   \n    <div className=\"pt-5 rounded\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    \n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n   \n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n    <div className=\"me-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n    </div>\n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n    </div>\n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    </div>\n    </div>\n   \n    </div>\n    </form>\n    </div>\n    </div>\n    </div>\n    {isModalOpen && (\n          <ImageCropper\n              setPhotoURL={setPhotoURL}\n              setImageLoadError={setImageLoadError}\n              closeModal={closeModal}\n              photoURL={photoURL}\n              handleImageUpload={handleImageUpload}\n              handleImageError={handleImageError}\n              user={user}\n              collectionName=\"expertApplications\"\n            />\n      )}\n    </div>\n    );\n    }\nexport default ExpertProfile;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Cropper, CircleStencil } from 'react-advanced-cropper';\nimport { updateDoc, doc, onSnapshot } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { storage, firestore } from '../firebase';\nimport 'react-advanced-cropper/dist/style.css';\n\nfunction ImageCropper({\ncloseModal,\nphotoURL,\nhandleImageUpload,\nsetPhotoURL,\nuser,\ncollectionName,\n}) {\nconst [image, setImage] = useState(photoURL);\nconst [selectedFile, setSelectedFile] = useState(null);\nconst [selectedFileName, setSelectedFileName] = useState(null);\nconst [docRef, setDocRef] = useState(null);\nconst cropperRef = useRef(null);\nconst fileInputRef = useRef(null);\nconst [isUploadSuccess, setIsUploadSuccess] = useState(false);\nconst [mobileSize, setMobileSize] = useState({ width: window.screen.width, height: window.screen.height });\nconst [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n\nconst isMobileDevice = () => {\nreturn window.innerWidth <= 768; // Adjust the threshold as needed\n};\n\nuseEffect(() => {\ndocument.body.classList.add('modal-open');\nreturn () => {\ndocument.body.classList.remove('modal-open');\n};\n}, []);\n\nuseEffect(() => {\nfileInputRef.current = document.createElement('input');\nfileInputRef.current.type = 'file';\nfileInputRef.current.accept = 'image/*';\nfileInputRef.current.addEventListener('change', handleFileUpload);\n\nconst userDocRef = doc(firestore, collectionName, user.uid);\nsetDocRef(userDocRef);\n\nconst handlePhotoURLChange = (newPhotoURL) => {\nsetImage(newPhotoURL);\n};\n\nconst unsubscribe = onSnapshot(userDocRef, (doc) => {\nconst newPhotoURL = doc.data()?.photoURL;\nhandlePhotoURLChange(newPhotoURL);\n});\n\nreturn () => unsubscribe();\n}, [user.uid, collectionName]);\n\nconst handleFileUpload = (e) => {\nconst file = e.target.files[0];\nsetSelectedFile(file);\nif (file) {\nsetSelectedFileName(file.name);\nconst reader = new FileReader();\nreader.onload = async (event) => {\nconst img = new Image();\nimg.onload = async function () {\nconsole.log('Image Size (Natural):', this.naturalWidth, 'x', this.naturalHeight);\nlet resizedImage = this;\n// Check if the image width exceeds the maximum width\nif (this.naturalWidth > mobileSize.width) {\nconst ratio = mobileSize.width / this.naturalWidth;\nconst newWidth = mobileSize.width;\nconst newHeight = this.naturalHeight * ratio;\n// Create a canvas and resize the image\nconst canvas = document.createElement('canvas');\ncanvas.width = newWidth;\ncanvas.height = newHeight;\nconst ctx = canvas.getContext('2d');\nctx.drawImage(this, 0, 0, newWidth, newHeight);\n// Convert the canvas back to an image\nresizedImage = new Image();\nresizedImage.src = canvas.toDataURL('image/jpeg');\n}\n// Set the resized image as the current image state\nsetImage(resizedImage.src);\n};\nimg.src = event.target.result;\n};\nreader.readAsDataURL(file);\n}\n};\n\nconst handleNewPhoto = () => {\nfileInputRef.current.click();\n};\n\nconst handleUpload = async () => {\n  const canvas = cropperRef.current?.getCanvas();\n  if (canvas) {\n      let maxWidth, maxHeight;\n      // Check if it's a mobile device\n      if (isMobileDevice()) {\n          maxWidth = window.innerWidth; // Use window.innerWidth for mobile\n          maxHeight = window.innerHeight; // Use window.innerHeight for mobile\n      } else {\n          maxWidth = 414; // Set your desired maxWidth for desktop\n          maxHeight = 736; // Set your desired maxHeight for desktop\n      }\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg', 1));\n      if (blob) {\n          const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n          const metadata = { contentType: 'image/jpeg' };\n          const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n          uploadTask.on(\n              'state_changed',\n              (snapshot) => {\n                  // Handle upload progress here\n              },\n              (error) => {\n                  // Handle upload error here\n              },\n              async () => {\n                  const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n                  if (downloadURL) {\n                      // Set the uploaded image as the source for the cropper\n                      setImage(downloadURL);\n                      await updateDoc(docRef, { photoURL: downloadURL });\n                      handleImageUpload(downloadURL);\n                      setIsUploadSuccess(true);\n                      setTimeout(() => {\n                          setIsUploadSuccess(false);\n                      }, 3000);\n                  }\n              }\n          );\n      }\n  }\n};\n\n\n\nconst handleDeletePhoto = async () => {\nif (user && user.uid) {\nconst defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\nawait updateDoc(docRef, { photoURL: defaultImageURL });\nsetPhotoURL(defaultImageURL);\n}\n};\n\n\n\nuseEffect(() => {\nconst handleResize = () => {\nsetMobileSize({ width: window.screen.width, height: window.screen.height });\n};\n\nwindow.addEventListener('resize', handleResize);\n\nreturn () => {\nwindow.removeEventListener('resize', handleResize);\n};\n}, []);\n\nuseEffect(() => {\nif (cropperRef.current && cropperRef.current.getCanvas()) {\nconst canvas = cropperRef.current.getCanvas();\nsetImageSize({ width: canvas.width, height: canvas.height });\n}\n}, [image]);\n\nreturn (\n<div className=\"modal-overlay\">\n<div className=\"modalcrop\">\n<div className=\"top-section\">\n<div style={{ marginRight: '10px' }}>Profile image</div>\n<button className=\"btn-crop\" onClick={closeModal}>\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n</svg>\n</button>\n</div>\n<div className='centerimage'>\n{image && (\n            <Cropper\n            className=\"cropper-container\"\n            defaultSize={{\n              width: 350,\n              height: 350,\n      }}\n              imageRestriction=\"fillArea\" // Ensure the image fills the available area\n              transformImage={true} // Enable image transformation\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n                handlers: {\n                  eastNorth: true,\n                  north: false,\n                  westNorth: true,\n                  west: false,\n                  westSouth: true,\n                  south: false,\n                  eastSouth: true,\n                  east: false,\n                }\n              }}\n              adjustStencil={false}\n            />\n        )}\n</div>\n<div className=\"button-section\">\n<button className=\"btn-crop\" onClick={handleNewPhoto}>\n<div className=\"button-content\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n</svg>\nNew Photo\n</div>\n</button>\n<button className=\"btn-crop\" onClick={handleUpload}>\n<div className=\"button-content\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\n</svg>\nUpload Photo\n</div>\n</button>\n{isUploadSuccess && (\n<div className=\"upload-success-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n</svg>\n</div>\n)}\n<button className=\"btn-crop\" onClick={handleDeletePhoto}>\n<div className=\"button-content\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n</svg>\nDelete Photo\n</div>\n</button>\n</div>\n</div>\n</div>\n);\n}\n\nexport default ImageCropper;\n\n"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","selectedLabel","setSelectedLabel","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","gallery","setGallery","_useState45","_useState46","isDraggingFile","setIsDraggingFile","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","userImagesCollectionRef","unsubscribeSnapshot","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","labels","collection","concat","onSnapshot","querySnapshot","galleryList","docs","map","isImage","test","url","id","title","console","log","abrupt","stop","_x","apply","arguments","handleFileUpload","_ref2","_callee2","files","file","fileName","userFilesCollectionRef","scaledFile","downloadURL","_context2","name","size","t0","uploadFile","t1","error","_x2","_x3","_ref3","_callee3","collectionRef","storageRef","uploadTask","snapshot","uploadedFiles","docRef","_context3","ref","storage","uploadBytesResumable","getDownloadURL","prevGallery","_toConsumableArray","setDoc","_x4","_x5","_x6","_x7","handleRemovePhoto","_ref4","_callee4","index","event","docPath","updatedGallery","_context4","deleteObject","deleteDoc","filter","_","i","_x8","_x9","handleTitleChange","value","photoId","photo","_objectSpread","handleDescriptionChange","handleUploadDescription","_ref5","_callee5","_context5","Promise","all","updateDoc","_x10","getFileIcon","pop","toLowerCase","_jsxs","style","color","xmlns","width","height","viewBox","children","_jsx","d","fill","handleImageUpload","_ref6","_callee6","_context6","updateProfile","then","catch","_x11","clearUpdateMessage","updateProfileInfo","_ref7","_callee7","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context7","approved","points","currentUser","document","getElementById","setTimeout","_ref8","_callee8","_context8","_x12","handleRemoveKeyword","updatedKeywords","splice","removeKeyword","handleImageClick","enableScroll","body","overflow","handleDragEnter","e","preventDefault","className","src","alt","onError","onClick","cursor","strokeWidth","stroke","strokeLinecap","strokeLinejoin","process","placeholder","onChange","target","readOnly","pointerEvents","htmlFor","rows","resize","checked","onDragEnter","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","some","onKeyDown","key","Carousel","Item","Caption","window","innerWidth","trim","length","handleAddKeyword","disabled","keyword","marginLeft","ImageCropper","closeModal","handleImageError","collectionName","image","setImage","setSelectedFile","selectedFileName","setSelectedFileName","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","screen","mobileSize","setMobileSize","setImageSize","classList","add","remove","current","createElement","accept","addEventListener","_doc$data","handlePhotoURLChange","reader","FileReader","onload","img","Image","resizedImage","ratio","newWidth","newHeight","canvas","this","naturalWidth","naturalHeight","getContext","drawImage","toDataURL","result","readAsDataURL","handleUpload","_cropperRef$current","blob","metadata","getCanvas","innerHeight","resolve","toBlob","contentType","on","handleDeletePhoto","defaultImageURL","handleResize","removeEventListener","marginRight","Cropper","defaultSize","imageRestriction","transformImage","stencilComponent","CircleStencil","stencilProps","grid","handlers","eastNorth","north","westNorth","west","westSouth","south","eastSouth","east","adjustStencil","click"],"sourceRoot":""}