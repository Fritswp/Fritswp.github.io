{"version":3,"file":"static/js/915.44e0ff4e.chunk.js","mappings":"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","sources":["Users/ExpertProfile.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, firestore, storage } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteDoc, setDoc, collection, getDocs, addDoc,   } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL,deleteObject } from \"firebase/storage\";\nimport { updateProfile } from 'firebase/auth';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\nconst [selectedLabel, setSelectedLabel] = useState('');\nconst [isModalOpen, setIsModalOpen] = useState(false);\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [gallery, setGallery] = useState([]);\nconst [files, setFiles] = useState([]); \n\nuseEffect(() => {\n  const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      setUser(authUser);\n\n      const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        if (userData.photoURL) {\n          setPhotoURL(userData.photoURL);\n        } else {\n          setPhotoURL(authUser.photoURL);\n        }\n        setFirstName(userData.first_name || authUser.displayName.split(' ')[0] || '');\n        setLastName(userData.last_name || authUser.displayName.split(' ')[1] || '');\n        setAddress(userData.address || '');\n        setCity(userData.city || '');\n        setCounty(userData.county || '');\n        setPostcode(userData.postcode || '');\n        setMobileNumber(userData.mobileNumber || '');\n        setRole(userData.occupation || '');\n        setEmail(authUser.email); // Set email from authUser\n        setDescription(userData.description)\n        setSelectedLabel(userData.labels || '');\n      } else {\n        setPhotoURL(authUser.photoURL);\n      }\n\n      // Fetch gallery images\n      const userImagesCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/images`);\n      try {\n        const querySnapshot = await getDocs(userImagesCollectionRef);\n        const galleryList = querySnapshot.docs.map((doc) => {\n          const data = doc.data();\n          return { id: doc.id, url: data.url, description: data.description };\n          // Ensure to set the id property for each image object\n        });\n        setGallery(galleryList);\n        console.log('Gallery List:', galleryList);\n      } catch (error) {\n        console.error('Error fetching gallery images:', error);\n      }\n    } else {\n      setAddress('');\n      setCity('');\n      setCounty('');\n      setPostcode('');\n      setMobileNumber('');\n      setPhotoURL(null);\n      setEmail(''); // Clear email\n      setRole('');\n      setDescription('')\n    }\n  });\n\n  return () => {\n    unsubscribe();\n  };\n}, []);\n\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n  updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      console.error('Error updating profile photo:', error);\n    });\n};\n\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; \n        const customURLStatus = userData.customURL || false;\n        const existingPoints = userData.points || 0;\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus,\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints,\n          labels: selectedLabel, \n        });\n        setPreviousPhotoRef(null);\n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n          setSelectedLabel(userData.labels || '');\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 6  ) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n    const MAX_KEYWORDS_LIMIT = 5; \n    const handleImageClick = () => {\n      console.log('Image clicked');\n      setIsModalOpen(true);\n    };\n\n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n  const enableScroll = () => {\n    document.body.style.overflow = '';\n  };\n\n  const uploadImage = async (file, description, collectionRef, imageName) => {\n    const storageRef = ref(storage, `expertFiles/${user.uid}/${imageName}`); // Use image name for storage reference\n    \n    try {\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      const snapshot = await uploadTask; // Await completion of upload\n      const downloadURL = await getDownloadURL(snapshot.ref);\n  \n      // Add the uploaded image to the gallery immediately\n      const uploadedImage = { id: imageName, url: downloadURL, description }; // Set id as imageName\n      setGallery(prevGallery => [...prevGallery, uploadedImage]); // Add the uploaded image to the gallery state\n  \n      // Update Firestore with the correct image name\n      const docRef = doc(collectionRef, imageName); // Use imageName as document ID\n      await setDoc(docRef, { url: downloadURL, description });\n  \n      console.log(\"Image uploaded and stored successfully\");\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  \n  \n\n  const handleFileUpload = async (files) => {\n    const file = files[0];\n    const description = \"\"; // Replace with actual description or user input\n    const imageName = file.name; // Get image name\n    const userImagesCollectionRef = collection(firestore, `expertApplications/${user.uid}/images`);\n  \n    try {\n      const scaledFile = file.size > 1 * 1024 * 1024 ? await scaleImage(file) : file;\n      await uploadImage(scaledFile, description, userImagesCollectionRef, imageName); // Pass image name\n    } catch (error) {\n      console.error('Error processing image:', error);\n    }\n  };\n  \n\n\n  const handleRemovePhoto = async (index) => {\n    try {\n      console.log('Gallery before removal:', gallery); // Log entire gallery array\n  \n      const image = gallery[index];\n      console.log('Image object:', image); // Log the image object\n  \n      if (!image) {\n        console.error('Error removing photo: Image not found in gallery');\n        return;\n      }\n  \n      const imageName = image.id;\n      console.log('Image name:', imageName); // Log imageName\n  \n      // Remove from storage\n      const storageRef = ref(storage, `expertFiles/${user.uid}/${imageName}`);\n      await deleteObject(storageRef);\n      console.log('Image removed successfully from Storage');\n  \n      // Remove from Firestore using document path\n      const docPath = `expertApplications/${user.uid}/images/${imageName}`;\n      const docRef = doc(firestore, docPath);\n      await deleteDoc(docRef);\n      console.log('Document removed successfully from Firestore');\n  \n      // Update gallery state\n      const updatedGallery = gallery.filter((_, i) => i !== index);\n      console.log('Updated gallery:', updatedGallery); // Log updated gallery\n      setGallery(updatedGallery);\n    } catch (error) {\n      console.error('Error removing photo:', error);\n    }\n  };\n  \n  \n\n\n\n  const handleDescriptionChange = (description, index) => {\n    const updatedGallery = [...gallery];\n    updatedGallery[index].description = description;\n    setGallery(updatedGallery);\n  };\n  \n// Handler for uploading description\nconst handleUploadDescription = async (index) => {\n  const photo = gallery[index];\n  const docRef = doc(collection(firestore, `expertApplications/${user.uid}/images`), photo.id); // Use photo.id (image name) as document ID\n\n  try {\n    await updateDoc(docRef, { description: photo.description });\n    console.log(\"Description updated successfully in Firestore\");\n  } catch (error) {\n    console.error('Error updating description:', error);\n  }\n};\n\n  \n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n      </div>\n    </div>\n  )}\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n      </div>\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n    </div>\n    <h3>My Profile</h3>\n    <hr />\n    <form className=\"file-upload\">\n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-12 col-12\">\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <div className=\"col-md-8\">\n        <h4 className=\"mb-4\">General information</h4>\n        <div className=\"col-md-12\">\n    <div className=\"row g-3\">\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">First Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"First name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Last Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"Last name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n            <input\n                type=\"email\"\n                className=\"form-control form-control-lg\"\n                id=\"inputEmail4\"\n                value={user ? user.email : ''}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Mobile number *</label>\n            <input\n                id=\"inputMobileNumber\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your Phone number\"\n                aria-label=\"Phone number\"\n                value={mobileNumber}\n                onChange={(e) => setMobileNumber(e.target.value)}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Role/Expertise *</label>\n            <input\n                id=\"inputExpertise\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your role/expertise\"\n                aria-label=\"your Role\"\n                value={occupation}\n                onChange={(e) => setRole(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Description of Expertise</label>\n            <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                className=\"form-control\"\n                rows=\"4\"\n                placeholder=\"Enter a brief description of your expertise or how you can help\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ resize: 'none' }}\n            />\n        </div>\n\n        \n \n  \n\n\n\n\n\n\n\n\n\n    </div>\n</div>\n</div>\n<div className=\"col-md-4\">\n<div className=\"form-group\">\n<label className=\"form-label\">Categories</label>\n  <ul className=\"listcard expert-listcard\">\n  <li className=\"form-check expert-form-check \">\n      <input type=\"radio\" className=\"form-check-input listboxes \" id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Computer')}\n         checked={selectedLabel === 'Computer'} \n      />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Computer\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Sport'}   onChange={() => setSelectedLabel('Sport')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Sport\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Food'} \n         onChange={() => setSelectedLabel('Food')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Food\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Health'} \n      name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Health')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Health\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Work'} \n      name=\"jobSuccess\"\n         onChange={() => setSelectedLabel('Work')} />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Work\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\"\n          checked={selectedLabel === 'Hobbies'} \n      id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Hobbies')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Hobbies\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n  </ul>\n</div>\n    </div>\n</div>\n    \n    </div>\n   \n    </div>\n\n    <div className=\"card-body card-profile\">\n  <h4>File Gallery</h4>\n  <div className=\"uploadcontainer\">\n    <input\n      className=\"uploadfile\"\n      type=\"file\"\n      onChange={(e) => handleFileUpload(e.target.files)}\n      multiple\n    />\n    <div className=\"documentupload\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n      </svg>\n      <div>\n        <div className=\"choosefile mt-2\">\n          Choose file\n        </div>\n        {' '}\n        or{' '}\n        <div className=\"draghere\">\n          drag here\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div>\n<div className=\"gallery\">\n  <div className=\"gallery-container\">\n  {gallery.map((photo, index) => (\n    <div key={index} className=\"gallery-item\">\n      <div className=\"image-container\">\n        <img src={photo.url} alt={`Gallery ${index + 1}`} className=\"gallery-image\" />\n      </div>\n      <textarea\n        type=\"text\"\n        placeholder=\"Enter description\"\n        className=\"form-control form-control-lg borderradius\"\n        value={photo.description} // Show the current description in the textarea\n        onChange={(e) => handleDescriptionChange(e.target.value, index)}\n      />\n      <div className='d-flex'>\n      <button onClick={(e) => { e.preventDefault(); handleUploadDescription(index); }}>Upload Description</button>\n      <button  onClick={() => handleRemovePhoto(index)}>❌ Remove</button>\n      </div>\n    </div>\n  ))}\n</div>\n</div>\n</div>\n\n \n    <div className=\"col-xl-12 col-12\">\n   \n    <div className=\"pt-5 rounded\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    \n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n   \n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n    <div className=\"me-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n    </div>\n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n    </div>\n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    </div>\n    </div>\n   \n    </div>\n    </form>\n    </div>\n    </div>\n    </div>\n    {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modalcrop \">\n          <ImageCropper\n              setPhotoURL={setPhotoURL}\n              setImageLoadError={setImageLoadError}\n              closeModal={closeModal}\n              photoURL={photoURL}\n              handleImageUpload={handleImageUpload}\n              handleImageError={handleImageError}\n              user={user}\n              collectionName=\"expertApplications\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n    );\n    }\nexport default ExpertProfile;\n\n","import React, { useState, useRef, useEffect } from 'react'; // Import React and useState\nimport { CropperRef, Cropper, CircleStencil } from 'react-advanced-cropper';\nimport 'react-advanced-cropper/dist/style.css';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { doc, getDoc, updateDoc, deleteField, setDoc, onSnapshot } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\n\nfunction ImageCropper({\n  closeModal,\n  photoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n}) {\n  const [image, setImage] = useState(photoURL);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isDeleteConfirmed, setIsDeleteConfirmed] = useState(false);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null); // Added local state for the document reference\n  const cropperRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [isUploadSuccess, setIsUploadSuccess] = useState(false);\n\n  const CustomCheckmark = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n);\n\nuseEffect(() => {\n  document.body.classList.add('modal-open');\n\n  // Cleanup: Remove 'modal-open' class when the modal is closed\n  return () => {\n    document.body.classList.remove('modal-open');\n  };\n}, []);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file); // Update the selectedFile state with the file\n  \n    if (file) {\n      setSelectedFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImage(event.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleNewPhoto = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleUpload = async () => {\n    const canvas = cropperRef.current?.getCanvas();\n    if (canvas) {\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg'));\n  \n      if (blob) {\n        const storageRef = ref(storage, `profileImages/${selectedFileName}`);\n        const metadata = { contentType: 'image/jpeg' };\n  \n        const uploadTask = uploadBytesResumable(storageRef, blob, metadata);\n  \n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            // Handle upload progress here\n          },\n          (error) => {\n            // Handle upload error here\n          },\n          () => {\n            // Handle upload success here\n            getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n              if (downloadURL) {\n                // Update the Firestore document immediately before handling the upload success\n                await updateDoc(docRef, { photoURL: downloadURL });\n                handleImageUpload(downloadURL);\n                setIsUploadSuccess(true);\n                setTimeout(() => {\n                  setIsUploadSuccess(false);\n                }, 3000);\n              }\n            });\n          }\n        );\n      }\n    }\n  };\n  \n\n  const handleDeletePhoto = async () => {\n    if (user && user.uid) {\n      const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n      await updateDoc(docRef, { photoURL: defaultImageURL });\n      setPhotoURL(defaultImageURL);\n      setIsDeleteConfirmed(false);\n    }\n  };\n  \n\n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'image/*';\n    fileInputRef.current.addEventListener('change', handleFileUpload);\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef); // Set the local state for document reference\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n  \n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.photoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n  \n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n  \n\n  return (\n    <div className=\"modalimage align-items-center\">\n      <div className=\"top-section\">\n        <div style={{ marginRight: '10px' }}>Profile image</div>\n        <button className=\"btn-crop\" onClick={closeModal}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div className='centerimage'>\n      <div className=\"croppers-wizard__body\">\n        <div className='default-cropper croppers-wizard__cropper'>\n\n       \n          {image ? (\n            <Cropper\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n                handlers: {\n                  eastNorth: true,\n                  north: false,\n                  westNorth: true,\n                  west: false,\n                  westSouth: true,\n                  south: false,\n                  eastSouth: true,\n                  east: false,\n              }\n              }}\n         \n            />\n          ) : null}\n</div>\n\n</div>\n\n      </div>\n      \n      <div className=\"button-section with-divider\">\n  <button className=\"btn-crop\" onClick={handleNewPhoto}>\n    <div className=\"button-content\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n          </svg>\n      New Photo\n    </div>\n  </button>\n\n  <button className=\"btn-crop\" onClick={handleUpload}>\n        <div className=\"button-content\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\" />\n          </svg>\n          Upload Photo\n        </div>\n      </button>\n\n\n\n      {isUploadSuccess && (\n  <div className=\"upload-success-icon\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#009E60\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n    </svg>\n  </div>\n)}\n\n \n\n  <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n    <div className=\"button-content\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\" strokeWidth=\"1.5\" className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n      </svg>\n      Delete Photo\n    </div>\n  </button>\n</div>\n\n\n\n    </div>\n  );\n}\n\nexport default ImageCropper;\n"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","selectedLabel","setSelectedLabel","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","gallery","setGallery","_useState45","_useState46","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","userImagesCollectionRef","querySnapshot","galleryList","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","labels","collection","concat","getDocs","docs","map","id","url","console","log","t0","error","stop","_x","apply","arguments","handleImageUpload","_ref2","_callee2","downloadURL","_context2","updateDoc","updateProfile","then","catch","_x2","clearUpdateMessage","updateProfileInfo","_ref3","_callee3","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context3","abrupt","approved","points","deleteDoc","currentUser","setDoc","document","getElementById","value","setTimeout","_ref4","_callee4","_context4","_x3","handleRemoveKeyword","index","updatedKeywords","_toConsumableArray","splice","removeKeyword","handleImageClick","enableScroll","body","style","overflow","uploadImage","_ref5","_callee5","file","collectionRef","imageName","storageRef","uploadTask","snapshot","uploadedImage","docRef","_context5","ref","storage","uploadBytesResumable","getDownloadURL","prevGallery","_x4","_x5","_x6","_x7","handleFileUpload","_ref6","_callee6","files","scaledFile","_context6","name","size","scaleImage","t1","_x8","handleRemovePhoto","_ref7","_callee7","image","docPath","updatedGallery","_context7","deleteObject","filter","_","i","_x9","handleUploadDescription","_ref8","_callee8","photo","_context8","_x10","_jsxs","className","children","_jsx","src","alt","onError","onClick","cursor","xmlns","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","process","color","placeholder","onChange","e","target","readOnly","pointerEvents","htmlFor","rows","resize","checked","fill","height","width","multiple","handleDescriptionChange","preventDefault","window","innerWidth","onKeyDown","key","trim","length","handleAddKeyword","disabled","keyword","marginLeft","ImageCropper","closeModal","handleImageError","collectionName","setImage","setSelectedFile","setIsDeleteConfirmed","selectedFileName","setSelectedFileName","setDocRef","cropperRef","useRef","fileInputRef","isUploadSuccess","setIsUploadSuccess","classList","add","remove","reader","FileReader","onload","event","result","readAsDataURL","handleUpload","_cropperRef$current","canvas","blob","metadata","current","getCanvas","Promise","resolve","toBlob","contentType","on","handleDeletePhoto","defaultImageURL","createElement","accept","addEventListener","onSnapshot","_doc$data","handlePhotoURLChange","marginRight","Cropper","stencilComponent","CircleStencil","stencilProps","grid","handlers","eastNorth","north","westNorth","west","westSouth","south","eastSouth","east","click"],"sourceRoot":""}