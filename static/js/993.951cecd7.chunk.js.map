{"version":3,"file":"static/js/993.951cecd7.chunk.js","mappings":"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","sources":["ChatBot/sharechat.js","ChatBot/ChatHistory.js","ChatBot/ExpertBox.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","../node_modules/react-bootstrap/esm/Fade.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { collection, getDocs, query, orderBy, doc, deleteDoc } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\n\nconst ShareChat = ({ selectedSession, closeShareChat, resetChat, closeChatHistoryOnMobile }) => {\n    const [sharedChatData, setSharedChatData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const shareChatRef = useRef(null);\n\n  useEffect(() => {\n    const fetchSharedChatData = async () => {\n      try {\n        if (selectedSession) {\n          const messagesCollectionRef = collection(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession, 'messages');\n          const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n          const messagesData = messagesSnapshot.docs.map((doc) => {\n            const { prompt, response } = doc.data();\n            return { prompt, response };\n          });\n          setSharedChatData(messagesData);\n          setIsLoading(false);\n          console.log('Fetched messages for discussionId:', selectedSession, messagesData);\n        }\n      } catch (error) {\n        console.error('Error fetching shared chat messages:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchSharedChatData();\n  }, [selectedSession]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (shareChatRef.current && !shareChatRef.current.contains(event.target)) {\n        // Clicked outside the ShareChat component\n        closeShareChat();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [closeShareChat]);\n\n  const handleDeleteSession = async () => {\n    try {\n      // Delete the selectedSession document from Firestore\n      const sessionDocRef = doc(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession);\n      await deleteDoc(sessionDocRef);\n      console.log('Discussion deleted:', selectedSession);\n      closeShareChat(); // Close the ShareChat component after deletion\n      resetChat(); // Reset the chat by setting selectedSession to null\n      startNewChat(); \n      closeChatHistoryOnMobile();\n    } catch (error) {\n      console.error('Error deleting discussion:', error);\n    }\n  };\n  \n  return (\n    <div ref={shareChatRef}   className=\"blurred-background\">\n    <div className=\"white-box-chathistory\">\n      <div className=\"go-back-svg\">\n        <button onClick={closeShareChat}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <h2>Share link to Chat</h2>\n      <div className='divider '></div>\n      <p>\n        Messages you send after creating your link won't be shared. Anyone with the URL will be able to view the shared chat.\n      </p>\n      <div className=\"shared-chat scroll-cat mb-5\">\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          sharedChatData.map((message, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>\n                <ReactMarkdown>{message.prompt}</ReactMarkdown>\n\n              </strong>\n              <ReactMarkdown>{message.response}</ReactMarkdown>\n              <div className='divider '></div>\n            </div>\n          ))\n        )}\n      </div>\n      <div className='delete-svg' >\n      <button className='delete-button' onClick={handleDeleteSession}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\" />\n</svg>\n</button>\n</div>\n    </div>\n    </div>\n  );\n};\n\nexport default ShareChat;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { auth, firestore, db } from '../firebase';\nimport { collection, query, orderBy, onSnapshot } from 'firebase/firestore';\nimport ShareChat from './sharechat';\nimport LoadingCircle from '../components/LoadingCircle';\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick, resetChatMessages, selectedSession, setShowGreeting }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [isShareChatOpen, setIsShareChatOpen] = useState(false);\n  const [isLoadingSessions, setIsLoadingSessions] = useState(true);\n\n  const [selectedSessionForSVG, setSelectedSessionForSVG] = useState(null);\n\n  const groupSessionsByDate = (sessions) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n  \n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    yesterday.setHours(0, 0, 0, 0);\n  \n    const groupedSessions = {\n      today: [],\n      yesterday: [],\n      previously: [],\n    };\n  \n    sessions.forEach((session) => {\n      const sessionDate = session.timestamp?.seconds\n        ? new Date(session.timestamp.seconds * 1000)\n        : null;\n  \n      if (sessionDate) {\n        sessionDate.setHours(0, 0, 0, 0);\n  \n        if (sessionDate.getTime() === today.getTime()) {\n          groupedSessions.today.push(session);\n        } else if (sessionDate.getTime() === yesterday.getTime()) {\n          groupedSessions.yesterday.push(session);\n        } else {\n          groupedSessions.previously.push(session);\n        }\n      }\n    });\n  \n    return groupedSessions;\n  };\n  \n  \n  const [groupedSessions, setGroupedSessions] = useState({\n    today: [],\n    yesterday: [],\n    previously: [],\n  });\n  \n\n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n\n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n  \n        const q = query(\n          collection(firestore, 'users', userUid, 'discussions'),\n          orderBy('timestamp', 'desc')\n        );\n  \n        const unsubscribe = onSnapshot(q, (snapshot) => {\n          const sessionData = snapshot.docs.map((doc) => ({\n            id: doc.id,\n            timestamp: doc.data().timestamp,\n          }));\n  \n          setSessions(sessionData);\n          setGroupedSessions(groupSessionsByDate(sessionData));\n  \n  \n          if (sessionData.length > 0) {\n            const newlyCreatedDiscussion = sessionData[0].id;\n          }\n  \n          setIsLoadingSessions(false);\n        });\n  \n        // Make sure to unsubscribe when the component is unmounted or no longer needs updates\n        return () => unsubscribe();\n      } else {\n        setIsLoadingSessions(false);\n      }\n    } catch (error) {\n      setIsLoadingSessions(false);\n    }\n  };\n  \n\n\n  const startNewChat = () => {\n    resetChatMessages();\n    onSessionClick(null);\n    setShowGreeting(false); \n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen); // Toggle the button visibility when dropdown is opened/closed\n  };\n\n  const handleClickOutside = (event) => {\n    if (\n      chatHistoryRef.current &&\n      !chatHistoryRef.current.contains(event.target) &&\n      !(event.target.tagName === \"svg\" && isShareChatOpen)\n    ) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n  \n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, isShareChatOpen]); // Add isShareChatOpen as a dependency\n  \n\n  const closeChatHistoryOnMobile = () => {\n    const isMobile = window.innerWidth <= 768;\n    if (isMobile) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n\n  const closeShareChat = () => {\n    setIsShareChatOpen(false);\n\n    setIsDropdownOpen(false);\n    setIsIconRotated(false);\n    startNewChat(); \n  };\n  \n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n     \n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isOpen && (\n        <>\n   \n        <div className='chatbot-previous'>\n          <div style={{ display: 'flex' }}>\n            <button\n              className=\"chat-history-btn\"\n              onClick={() => {\n                startNewChat();\n                if (window.innerWidth <= 768) {\n                  toggleDropdown();\n                }\n              }}\n            >\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n                <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n              </div>\n              <div className='ms-auto'>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                </svg>\n              </div>\n            </button>\n          </div>\n          <div className=\"content-container\">\n      {isLoadingSessions ? (\n        <div className=\"loading-container\">\n          <LoadingCircle />\n        </div>\n      ) : (\n      <>\n\n{groupedSessions.today.length > 0 && (\n  <>\n    <p className=\"text-sm text-muted mt-3 no-mb\">Today:</p>\n    <ul className=\"fade-ulist no-scroll\">\n      {groupedSessions.today.map((session) => (\n        <li\n          className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n          key={session.id}\n          onClick={() => {\n            onSessionClick(session.id);\n            if (window.innerWidth <= 768) {\n              toggleDropdown();\n            }\n          }}\n        >\n                <div className=\"text-container\">\n       {session.id}\n       </div>\n                <div className=\"svg-chathistory-container\">\n                <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={(e) => {\n    // Prevent toggleDropdown when clicking on the SVG\n    e.stopPropagation();\n    // Set the selected session for SVG click\n    setSelectedSessionForSVG(session.id);\n    setIsShareChatOpen(true);\n  }}\n>\n\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n              </li>\n              \n              ))}\n              </ul>\n            </>\n          )}\n\n{groupedSessions.yesterday.length > 0 && (\n  <>\n    <p className=\"text-sm text-muted mt-3 no-mb\">Yesterday:</p>\n    <ul className=\"fade-ulist no-scroll\">\n      {groupedSessions.yesterday.map((session) => (\n        <li\n          className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n          key={session.id}\n          onClick={() => {\n            onSessionClick(session.id);\n            if (window.innerWidth <= 768) {\n              toggleDropdown();\n            }\n          }}\n        >\n               <div className=\"text-container\">\n{session.id}\n      </div>\n                 <div className=\"svg-chathistory-container\">\n                 <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={(e) => {\n    // Prevent toggleDropdown when clicking on the SVG\n    e.stopPropagation();\n    // Set the selected session for SVG click\n    setSelectedSessionForSVG(session.id);\n    setIsShareChatOpen(true);\n  }}\n>\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n \n <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n </svg>\n </div>\n \n               </li>\n               \n               ))}\n               </ul>\n             </>\n           )}\n{groupedSessions.previously.length > 0 && (\n  <>\n    <p className=\"text-sm text-muted mt-3 no-mb\">Previously:</p>\n    <ul className=\"fade-ulist no-scroll\">\n      {groupedSessions.previously.map((session) => (\n        <li\n          className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n          key={session.id}\n          onClick={() => {\n            onSessionClick(session.id);\n            if (window.innerWidth <= 768) {\n              toggleDropdown();\n            }\n          }}\n        >\n       <div className=\"text-container\">\n{session.id}\n      </div>\n               <div className=\"svg-chathistory-container\">\n               <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={(e) => {\n    // Prevent toggleDropdown when clicking on the SVG\n    e.stopPropagation();\n    // Set the selected session for SVG click\n    setSelectedSessionForSVG(session.id);\n    setIsShareChatOpen(true);\n  }}\n>\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n             </li>\n                 ))}\n                 </ul>\n               </>\n            \n             )}\n             </>\n           )}\n        </div>\n   </div>\n{isShareChatOpen && (\n  <ShareChat\n            selectedSession={selectedSessionForSVG}\n            closeShareChat={() => {\n              setIsShareChatOpen(false);\n              setIsDropdownOpen(false);\n              setIsIconRotated(false);\n              startNewChat();\n              closeChatHistoryOnMobile(); // Close ChatHistory on mobile\n            }}\n            resetChat={resetChatMessages}\n            closeChatHistoryOnMobile={closeChatHistoryOnMobile} // Pass the callback\n          />)}  \n\n</>\n      )}\n    </div>\n  );\n};\n\n\nexport default ChatHistory;","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, firestore } from '../firebase';\nimport { collection, doc, setDoc, getDoc } from 'firebase/firestore';\n\nconst ExpertBox = ({ isHovered, displayName, photoURL, skills, description, otherUserUID, occupation, onClose, selectedSession }) => {\n  const navigate = useNavigate();\n  const [currentUserUID, setCurrentUserUID] = useState(null);\n  const discussionID = selectedSession;\n  const [isConnected, setIsConnected] = useState(false);\n  const [showIcon, setShowIcon] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUserUID(user.uid);\n        console.log('Current User UID in ExpertBox:', user.uid);\n      } else {\n        console.error('User is not authenticated in ExpertBox');\n        setCurrentUserUID(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [selectedSession]);\n\n  const handleChatButtonClick = async () => {\n    try {\n      if (!otherUserUID || !currentUserUID || !selectedSession) {\n        throw new Error('otherUserUID, currentUserUID, or selectedSession is undefined or null');\n      }\n  \n      // Combine currentUserUID and otherUserUID to create a unique discussionID\n      const discussionID = `${currentUserUID}_${otherUserUID}`;\n  \n      // Create a new document in the sharedConversations collection\n      const conversationRef = doc(collection(firestore, 'sharedConversations'), discussionID);\n      \n      // Use setDoc to create or update the document with the desired data\n      await setDoc(conversationRef, {\n        selectedSession,\n        currentUserUID,\n        otherUserUID,\n        // Add other fields as needed\n      });\n  \n      // Navigate to the chat page\n      navigate('/chat', {\n        state: {\n          otherUserUID,\n          selectedSession,\n          currentUserUID,\n        },\n      });\n  \n      console.log('New document created successfully.');\n    } catch (error) {\n      console.error('Error handling chat button click:', error.message);\n    }\n  };\n  \n\n  const handleEscapeKey = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isHovered) {\n      document.addEventListener('keydown', handleEscapeKey);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [isHovered]);\n\n\n  const fetchUserContacts = async () => {\n    try {\n      const currentUserUID = auth.currentUser.uid;\n      const userProfileRef = doc(firestore, 'userProfiles', currentUserUID);\n      const expertApplicationRef = doc(firestore, 'expertApplications', currentUserUID);\n  \n      const [userProfileDoc, expertApplicationDoc] = await Promise.all([\n        getDoc(userProfileRef),\n        getDoc(expertApplicationRef),\n      ]);\n  \n      let contacts = {};\n  \n      if (userProfileDoc.exists()) {\n        const userData = userProfileDoc.data();\n        contacts = userData.contacts || {};\n      }\n  \n      if (expertApplicationDoc.exists()) {\n        const expertData = expertApplicationDoc.data();\n        const expertContacts = expertData.contacts || {};\n        contacts = { ...contacts, ...expertContacts };\n      }\n  \n      // Check if the otherUserUID is in the contacts\n      if (otherUserUID && contacts[otherUserUID]) {\n        setIsConnected(true);\n      } else {\n        setIsConnected(false);\n      }\n    } catch (error) {\n      console.error('Error fetching user contacts:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    if ( otherUserUID) {\n      fetchUserContacts();\n    }\n  }, [otherUserUID]);\n\n  const handleConnectButtonClick = async () => {\n    try {\n      const currentUserUID = auth.currentUser.uid;\n  \n      if (otherUserUID) {\n        // Get the current user's document references\n        const userProfileRef = doc(firestore, 'userProfiles', currentUserUID);\n        const expertApplicationRef = doc(firestore, 'expertApplications', currentUserUID);\n  \n        // Fetch the current user's documents from both collections\n        const [userProfileDoc, expertApplicationDoc] = await Promise.all([\n          getDoc(userProfileRef),\n          getDoc(expertApplicationRef),\n        ]);\n  \n        let contacts = {};\n  \n        // Check if the current user's contacts are in the userProfiles collection\n        if (userProfileDoc.exists()) {\n          const userData = userProfileDoc.data();\n          contacts = userData.contacts || {};\n        }\n  \n        // Check if the current user's contacts are in the expertApplications collection\n        if (expertApplicationDoc.exists()) {\n          const expertData = expertApplicationDoc.data();\n          contacts = expertData.contacts || {};\n        }\n  \n        // Update the current user's contacts field with the otherUserUID\n        const updateRef = contacts ? doc(firestore, 'userProfiles', currentUserUID) : doc(firestore, 'expertApplications', currentUserUID);\n        await setDoc(\n          updateRef,\n          {\n            contacts: { ...contacts, [otherUserUID]: true },\n          },\n          { merge: true }\n        );\n  \n        setIsConnected(true);\n      } else {\n        console.log('Other User UID not found');\n      }\n    } catch (error) {\n      console.error('Error connecting:', error);\n    }\n  };\n  \n\n\n  return (\n    isHovered && (\n      \n<div className=\"white-box\" >\n        <div className=\"go-back-svg go-back-svg-padding\">\n    <button onClick={onClose}>                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n\n          <h5 className=\"card-title\"> {displayName}</h5>\n  \n          <h5 className=\"card-title\">Expertise: {occupation}</h5>\n          \n  <div href={photoURL} className=\"d-md-inline\">\n    <img\n      src={photoURL}\n      alt=\"Profile Photo\"\n      className=\"searchimage card-img user-avatar large-avatar rounded-circle mb-2 mx-md-auto mx-0 \" \n    />\n  </div>\n  \n\n          <div className=\"about-container\">\n          <h5 className=\"card-title\"   style={{ display: 'inline' }}>About: </h5> \n<p style={{ display: 'inline' }}>{description}</p>\n</div>\n         \n\n          <div style={{ marginBottom: '0.4rem', marginTop: '0.4rem' }}>\n     \n          <p className=\"font-weight-bold mb-0\">Skills: {skills.join(', ')}</p>\n  {skills && skills.map((skills) => (\n    <button\n      key={skills}\n      type=\"button\"\n      className=\" containerhover keyword-container mb-2 mx-1 pb-1\"\n    >\n      {skills}\n    </button>\n  ))}\n\n</div>\n\n        <div>\n       \n        </div>\n        <div className=\"d-flex justify-content-center\">\n        <Link to=\"/chat\" state={{ otherUserUID, selectedSession }} onClick={handleChatButtonClick}>\n\n            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"me-2\">Message</span> \n            </button>\n            </Link>\n            <button\n  type=\"button\"\n  className=\"btn btn-secondary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\"\n  onClick={handleConnectButtonClick}\n  disabled={isConnected}\n>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n    <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n  </svg>\n  <span className=\"me-2\">{isConnected ? 'Connected' : 'Connect'}</span>\n</button>\n\n\n\n</div>\n</div>\n\n\n   \n    )\n  );\n};\n\nexport default ExpertBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, auth, getDocs } from \"../firebase\"; \nimport ExpertBox from './ExpertBox';\nimport LoadingCircle from '../components/LoadingCircle';\nimport Fuse from 'fuse.js';\n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic, firstUserMessage, selectedSession }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [showExpertBox, setShowExpertBox] = useState(false);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n  const [isLoadingExperts, setIsLoadingExperts] = useState(true);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [loadingExperts, setLoadingExperts] = useState([]);\n\n  const [lastClickedIndex, setLastClickedIndex] = useState(null);\n\n\n  const handleExpertBoxClose = () => {\n    setShowExpertBox(false);\n    setButtonClicked(false);\n    setIsHovered(null);\n  };\n\n  const handleMouseEnter = (index) => {\n    setIsHovered(index);\n  };\n\n  const handleButtonClick = (expertInfo, index) => {\n    if (index === isHovered) {\n      // Check if the device is mobile\n      const isMobile = window.innerWidth <= 768;\n\n      if (isMobile) {\n        // Open ExpertBox directly on mobile\n        setSelectedExpert(expertInfo);\n        setShowExpertBox(true);\n      } else {\n        // Toggle the hover-related logic for desktop\n        setButtonClicked(!buttonClicked);\n        setShowExpertBox(true);\n      }\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!buttonClicked && !showExpertBox) {\n      setShowExpertBox(false);\n      setIsHovered(null);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n    if (!isMobile) {\n      document.addEventListener('mouseenter', handleMouseEnter);\n      document.addEventListener('mouseleave', handleMouseLeave);\n    }\n\n    return () => {\n      if (!isMobile) {\n        document.removeEventListener('mouseenter', handleMouseEnter);\n        document.removeEventListener('mouseleave', handleMouseLeave);\n      }\n    };\n  }, [buttonClicked, showExpertBox]);\n\n\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen();\n  };\n\n  \n  \n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          setIsLoadingExperts(true);\n          let experts;\n  \n          if (selectedTopic) {\n            experts = await getMatchingExpertsForTopic(selectedTopic, selectedSession);\n          } else if (selectedSession) {\n            experts = await getMatchingExperts(selectedSession);\n          }\n  \n          setMatchingExperts(experts || []);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        } finally {\n          setIsLoadingExperts(false);\n          setLoadingExperts(Array(matchingExperts.length).fill(false));\n        }\n        \n      }\n    };\n\n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic, selectedSession]);\n\n  const getMatchingExperts = async (selectedSession) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const uid = auth.currentUser.uid;\n      const messagesCollection = collection(firestore, `users/${uid}/discussions/${selectedSession}/messages`);\n      const messagesSnapshot = await getDocs(messagesCollection);\n      const matchingExperts = [];\n      const processedExperts = new Set();\n\n      messagesSnapshot.forEach((messageDoc) => {\n        const messageData = messageDoc.data();\n        const { prompt, response } = messageData;\n\n        querySnapshot.forEach((doc) => {\n          const data = doc.data();\n          if (data && data.displayName && !processedExperts.has(doc.id)) {\n            const expertInfo = {\n              name: data.displayName,\n              photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n              skills: data.keywords || [],\n              description: data.description,\n              city: data.city,\n              occupation: data.occupation,\n              otherUserUID: doc.id,\n            };\n\n            const fieldsToCheck = ['city', 'occupation', 'description', 'labels'];\n\n            const fuseOptions = {\n              keys: fieldsToCheck,\n              includeScore: true,\n              includeMatches: true,\n              threshold: 0.7,\n            };\n\n            const fuse = new Fuse([data], fuseOptions);\n\n            const sessionMatch = selectedSession && data.occupation.toLowerCase().includes(selectedSession.toLowerCase());\n            const promptMatch = prompt && fuse.search(prompt).length > 0;\n            const responseMatch = response && fuse.search(response).length > 0;\n\n            if (sessionMatch || promptMatch || responseMatch) {\n              matchingExperts.push(expertInfo);\n              processedExperts.add(doc.id);\n            }\n          }\n        });\n      });\n\n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected session:\", error);\n      return [];\n    }\n  };\n\n  const getMatchingExpertsForTopic = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n  \n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n  \n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n  \n          if (\n            (firstUserMessage && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(firstUserMessage.toLowerCase())\n            )) ||\n            (selectedTopic && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(selectedTopic.name.toLowerCase())\n            )) ||\n            (!selectedTopic && !firstUserMessage)\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n  \n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected topic:\", error);\n      return [];\n    }\n  };\n  \n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      {isOpen && (\n        <>\n          <div>\n            <h4>Experts</h4>\n          </div>\n          <div className=\"\">\n      {isLoadingExperts ? (\n        <div className=\"loading-container\">\n          <LoadingCircle />\n        </div>\n        ) : (\n          matchingExperts.map((expertInfo, index) => (\n            <div key={index}>\n              <div className='d-flex'>\n              <button\n                className={`chat-btn expert-btn text-left ${showExpertBox && index === isHovered ? 'open-expert-box' : ''}`}\n                onMouseEnter={() => handleMouseEnter(index)}\n                onMouseLeave={handleMouseLeave}\n                onClick={() => handleButtonClick(expertInfo, index)}\n              >\n                <div className='d-flex flex-column'>\n                  <div className='button-container-login'>\n                    <img\n                      src={expertInfo.photoURL}\n                      alt=\"Avatar\"\n                      className=\"very-small-avatar rounded-circle\"\n                    />\n                    <div className=\"ml-2\">\n                      <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n                    </div>\n                  </div>\n                  {expertInfo.skills && (\n                    <div className=\"text-start mt-2\">\n                      <p className=\"font-weight-bold mb-0\">Skills: {expertInfo.skills.join(', ')}</p>\n                    </div>\n                  )}\n                </div>\n              </button>\n              </div>\n              {index === isHovered && (\n      <ExpertBox\n        isHovered={true}\n        displayName={expertInfo.name}\n        photoURL={expertInfo.photoURL}\n        skills={expertInfo.skills}\n        description={expertInfo.description}\n        city={expertInfo.city}\n        occupation={expertInfo.occupation}\n        otherUserUID={expertInfo.otherUserUID}\n        selectedSession={selectedSession}\n        onClose={handleExpertBoxClose}\n      />\n    )}\n            </div>\n          ))\n        )}\n     </div>\n      </>\n    )}\n  </div>\n);\n};\n\nexport default ChatExperts;\n","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ onSelectTopic, selectedTopic, toggleTopicPicker }) => {\n  const dropdownRef = useRef(null);\n  const [localSelectedTopic, setLocalSelectedTopic] = useState(null);\n  const pickModelDiv = useRef(null);\n  const [selectedTopicId, setSelectedTopicId] = useState(selectedTopic ? selectedTopic.id : null);\n  const [isHovering, setIsHovering] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleTopicSelection = (topic) => {\n    setLocalSelectedTopic(topic);\n    setSelectedTopicId(topic.id);\n    onSelectTopic(topic);\n    toggleTopicPicker();\n  };\n\n  const handleSearch = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        toggleTopicPicker();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, toggleTopicPicker]);\n  \n  const TopicLabel = ({ category, handleTopicSelection, selectedTopicId }) => {\n    const [isHovering, setIsHovering] = useState(false);\n  \n    const handleLabelClick = () => {\n      handleTopicSelection(category);\n      setIsHovering(false);\n    };\n  \n    return (\n      <button\n        className=\"chat-dropdown-model-button\"\n        id={category.id}\n        onClick={handleLabelClick}\n        onMouseEnter={() => setIsHovering(true)}\n        onMouseLeave={() => setIsHovering(false)}\n      >\n        {(category.id === selectedTopicId || category === selectedTopic) && (\n          <div className=\"activated-indicator-topic\"></div>\n        )}\n        {isHovering && category.id !== selectedTopicId && (\n          <div className=\"hover-indicator\"></div>\n        )}\n        <div className=\"icon-container\" style={{ width: '3rem' }}>\n          {category.icon}\n        </div>\n  \n        <div className=\"topic-text-container\">\n          <div className=\"title-container\"> {/* Add a container for the title */}\n            <h5 className=\"m-0\">{category.name}</h5>\n          </div>\n          <h6 className=\"text-muted  m-0\">{category.description}</h6>\n        </div>\n      </button>\n    );\n  };\n  \n  const filteredCategories = categories.filter((category) => {\n    return category.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n\n  return (\n    <div ref={dropdownRef} className={`chat-dropdown-model `}>\n    <div className=\"topic-picker-heading-container\">\n      <h3 className=\"topic-picker-heading\">Select a Topic</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Search topics\"\n        value={searchQuery}\n        onChange={handleSearch}\n        className=\"topic-picker-search-bar\"\n      />\n    </div>\n      <div className='card-profile-border chat-topics-selection  scroll-col'>\n       {filteredCategories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleTopicSelection={handleTopicSelection}\n            selectedTopicId={selectedTopicId}\n            selectedTopic={localSelectedTopic}\n            toggleTopicPicker={toggleTopicPicker}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TopicPicker;\n\n\n\n\n   \nconst categories = [\n  {\n    id: 'computerOption',\n    name: 'Computer',\n    description: 'All your IT solutions',\n    icon: '💻',\n  },\n  {\n    id: 'sportOption',\n    name: 'Sport',\n    description: \"Let Tio help you become fit\",\n    icon: '⚽',\n  },\n  {\n    id: 'foodCategory',\n    name: 'Food',\n    description: 'Ready to become head-chef?',\n    icon: '🍔',\n  },\n  {\n    id: 'healthCategory',\n    name: 'Health',\n    description: 'Here to help',\n    icon: '⛑️',\n  },\n  {\n    id: 'workCategory',\n    name: 'Work',\n    description: 'New Job or career advice',\n    icon: '💼',\n  },\n  {\n    id: 'hobbiesCategory',\n    name: 'Hobbies',\n    description: \"Discover what's possible\",\n    icon: '🎨',\n  },\n];\n\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy, serverTimestamp } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\nimport nlp from 'compromise/three';\nimport { Collapse } from 'react-bootstrap';\nimport { Fade } from 'react-bootstrap';\n\n\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('28px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n  const [sessionToUse, setSessionToUse] = useState(null);\n  const [showGreeting, setShowGreeting] = useState(true);\n  const [greetingVisible, setGreetingVisible] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null); \n  const [isFirstMessage, setIsFirstMessage] = useState(true);\n  const [businessVisible, setBusinessVisible] = useState(false);\n  const [showTopicPicker, setShowTopicPicker] = useState(false);\n\n\n\n  const fetchMessages = async (userUid, discussionId) => {\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: <ReactMarkdown>{prompt}</ReactMarkdown>, user: 'user' },\n          { text: <ReactMarkdown>{response}</ReactMarkdown>, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n    } catch (error) {\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (message.trim() !== '') {\n      setIsBotResponding(true);\n      setShowGreeting(false);\n      const uid = auth.currentUser.uid;\n  \n      try {\n        let currentSessionToUse = selectedSession;\n  \n        if (!currentSessionToUse) {\n          const words = message.split(' ').slice(0, 5); // Get the first five words of the message\n          currentSessionToUse = words.join(' '); // Join the words with a space\n  \n          await setDoc(doc(db, `users/${uid}`), {});\n  \n          const userDocRef = doc(db, `users/${uid}/discussions/${currentSessionToUse}`);\n          const discussionsSnapshot = await getDoc(userDocRef);\n  \n          if (!discussionsSnapshot.exists()) {\n            const timestamp = serverTimestamp();\n            await setDoc(userDocRef, { timestamp });\n  \n            setSessionToUse(currentSessionToUse);\n            setSelectedAndFetchMessages(currentSessionToUse);\n  \n            sessionStorage.setItem('currentDiscussionId', currentSessionToUse);\n          }\n        }\n  \n        const userDocRef = doc(db, `users/${uid}/discussions/${currentSessionToUse}`);\n        const messagesCollectionRef = collection(userDocRef, 'messages');\n        const timestamp = serverTimestamp();\n        const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message, timestamp });\n  \n  \n        setMessage('');\n        handleTextareaResize();\n        setChatMessages((prevChatMessages) => [\n          ...prevChatMessages,\n          { text: message, user: 'user' },\n          { text: '', user: 'bot', isTyping: true },\n        ]);\n\n        if (isFirstMessage) {\n          setIsFirstMessage(false);\n        }\n  \n        const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n          const rawBotResponse = docSnapshot.data()?.response;\n          if (rawBotResponse) {\n            unsubscribe();\n            const initialTypingSpeed = 20;\n            const speedIncreaseRate = 0.1;\n            const formattedBotResponse = rawBotResponse;\n            for (let i = 0; i < formattedBotResponse.length; i++) {\n              const currentTypingSpeed = Math.max(5, initialTypingSpeed - i * speedIncreaseRate);\n              await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n              setChatMessages((prevChatMessages) => [\n                ...prevChatMessages.slice(0, -1),\n                {\n                  text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                  user: 'bot',\n                },\n              ]);\n            }\n            setIsBotResponding(false);\n            if (window.innerWidth < 768 && textareaRef.current) {\n              textareaRef.current.blur();\n            }\n          }\n        });\n  \n        // Move setSelectedSession here, after the timestamp is set\n        setSelectedSession(currentSessionToUse); \n      } catch (error) {\n      }\n    }\n  };\n  \n\n  const handleSessionClick = async (discussionId) => {\n    setSelectedSession(discussionId);\n    setShowGreeting(false); \n    sessionStorage.setItem('lastDiscussionId', discussionId);\n\n    await fetchMessages(auth.currentUser.uid, discussionId);\n  };\n\n  \n  const setSelectedAndFetchMessages = async (sessionId) => {\n    setSelectedSession(sessionId);\n    sessionStorage.setItem('lastDiscussionId', sessionId);\n    await fetchMessages(sessionId); // Add a function to fetch messages for the selected session\n  };\n  \n  \n\n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    const fetchLastDiscussionId = async () => {\n      try {\n        if (auth.currentUser) {\n          const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n  \n          if (lastDiscussionId) {\n          } else {\n          }\n        } else {\n        }\n      } catch (error) {\n      }\n    };\n  \n    fetchLastDiscussionId(); \n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '28px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('28px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  const resetChatMessages = () => {\n    setChatMessages([]);\n  };\n\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      if (auth.currentUser) {\n        setCurrentUser(auth.currentUser);\n        setGreetingVisible(true);\n  \n        setTimeout(() => {\n          setBusinessVisible(true);\n        }, 700); // Set businessVisible to true after a 1.5-second delay\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  \n  \n  \n  const getGreeting = (hour) => {\n    if (hour >= 5 && hour < 12) {\n      return \"Good morning\";\n    } else if (hour >= 12 && hour < 17) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  \n  const toggleTopicPicker = () => {\n    setShowTopicPicker(!showTopicPicker);\n  };\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    toggleTopicPicker();\n  };\n  \n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen}   setShowGreeting={setShowGreeting}  toggleOpen={toggleHistory} onSessionClick={handleSessionClick} selectedSession={selectedSession}  resetChatMessages={resetChatMessages}/>\n<div className='chat-display'>\n{showTopicPicker && (\n  <TopicPicker\n  onSelectTopic={handleTopicSelection}\n  selectedTopic={selectedTopic}\n  toggleTopicPicker={toggleTopicPicker}\n/>\n\n)}        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\" ref={chatContainerRef}>\n\n  {showGreeting && currentUser && (\n  <div className='chat-greeting-flex'>\n    <>\n      <Fade\n        in={greetingVisible}\n        appear={true}\n        timeout={1500}\n        className=\"greeting-fade\" // Add a custom class for the greeting\n      >\n        <div className=\"chat-greeting\">\n          <h1>\n            {getGreeting(new Date().getHours())}, {currentUser.displayName}\n          </h1>\n        </div>\n      </Fade>\n      <Fade\n        in={businessVisible}\n        appear={true}\n        timeout={1000}\n        delay={500}\n        className=\"business-fade\" // Add a custom class for the \"Let's get down to business\" text\n      >\n        <h3>Let's get down to business</h3>\n      </Fade>\n    </>\n  </div>\n)}\n\n\n{chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {!isFirstMessage && chatMessage.isTyping ? ( // Check if it's the first message\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n\n    {chatMessage.user !== 'bot' && currentUser && ( // Check if currentUser is available\n      <div className=\"bot-message\"> {/* Define a CSS class for user's message */}\n        <div className=\"bot-avatar\">\n          <img\n            className=\"user-avatar\"\n            src={currentUser.photoURL} // Use currentUser.photoURL as the source\n            alt=\"User Avatar\"\n          />\n        </div>\n        <div className=\"user-details\">\n          <div className=\"bot-name\">You</div>\n          <div className=\"chat-text\">{chatMessage.text}</div>\n        </div>\n      </div>\n    )}\n  </div>\n))}\n\n      </div>\n      <div className='chatui-wrapper'>\n      <div className='spacing'>\n\n\n      <button type=\"button\" className=\"new-topic-btn rounded-pill\"\n      onClick={toggleTopicPicker}\n      >\n  \n<svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 -960 960 960\"  color=\"white\"\nfill=\"none\"\nstrokeWidth={1}\nstroke=\"white\"\nheight=\"30\"\nwidth=\"30\"\n>\n  <path fill=\"white\" d=\"M308.001-180.309v-406.998q0-27.023 18.5-45.857 18.5-18.835 45.423-18.835h407.767q26.527 0 45.417 18.891 18.891 18.89 18.891 45.417v264.306q0 12.855-4.616 24.504-4.615 11.65-14.211 21.246L682.365-134.828q-9.596 9.596-21.246 14.211-11.649 4.616-24.504 4.616H372.309q-26.527 0-45.417-18.891-18.891-18.89-18.891-45.417Zm-190-515.767q-4.615-25.923 11.135-48.505 15.75-22.581 41.711-27.033l400.383-71.385q25.923-4.615 48.004 11.135t26.534 41.711l10.231 58.462h-52.23L594-783.538q-.769-4.231-4.616-6.731-3.846-2.5-8.462-1.731l-401.537 71.769q-5.385.769-8.077 5-2.693 4.231-1.923 9.616l58.924 330.313v127.223q-14.846-5.846-25.385-18.581-10.538-12.735-13.538-29.034l-71.385-400.382ZM360-587.691v407.382q0 5.385 3.462 8.847 3.462 3.462 8.847 3.462H624l168-168v-251.691q0-5.385-3.462-8.847-3.462-3.462-8.847-3.462H372.309q-5.385 0-8.847 3.462-3.462 3.462-3.462 8.847ZM576-384Zm-25.747 25.999V-276q0 11.05 7.502 18.524 7.503 7.475 18.492 7.475t18.41-7.475q7.42-7.474 7.42-18.524v-82.001h81.689q10.984 0 18.609-7.418 7.624-7.418 7.624-18.384 0-10.966-7.475-18.455-7.474-7.49-18.524-7.49h-82.001v-82.168q0-11.085-7.478-18.584-7.479-7.499-18.534-7.499-11.056 0-18.521 7.499-7.465 7.499-7.465 18.584v82.168H468q-11.05 0-18.524 7.503-7.475 7.503-7.475 18.258 0 11.056 7.499 18.521 7.499 7.465 18.584 7.465h82.169Z\"/></svg>\n\n\n  <span className=\"button-text\">Topic</span>\n</button>\n\n \n  </div>\n      <div className=\"chatui-container\">\n\n      <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col message-input no-left\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (message.trim() !== '') {\n        handleSendMessage();\n      }\n    }\n  }}\n  disabled={isBotResponding}  // Ensure that the disabled prop is bound to isBotResponding\n/>\n\n<button\n  aria-label=\"Send Message\"\n  className=\"svg-container-chat send-btn\"\n  disabled={isBotResponding || message.trim() === ''}\n  onClick={() => {\n    if (message.trim() !== '') {\n      handleSendMessage(selectedSession);\n    }\n  }}\n>\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n       \n<ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} selectedSession={selectedSession} />\n      </div>\n      \n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","selectedSession","closeShareChat","resetChat","closeChatHistoryOnMobile","_useState","useState","_useState2","_slicedToArray","sharedChatData","setSharedChatData","_useState3","_useState4","isLoading","setIsLoading","shareChatRef","useRef","useEffect","fetchSharedChatData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messagesCollectionRef","messagesSnapshot","messagesData","wrap","_context","prev","next","collection","firestore","auth","currentUser","uid","getDocs","query","orderBy","sent","docs","map","doc","_doc$data","data","prompt","response","console","log","t0","error","stop","apply","arguments","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDeleteSession","_ref3","_callee2","sessionDocRef","_context2","deleteDoc","startNewChat","_jsx","ref","className","children","_jsxs","onClick","xmlns","fill","viewBox","strokeWidth","color","stroke","strokeLinecap","strokeLinejoin","d","LoadingCircle","message","index","ReactMarkdown","height","width","isOpen","toggleOpen","onSessionClick","resetChatMessages","setShowGreeting","isDropdownOpen","setIsDropdownOpen","setIsIconRotated","chatHistoryRef","_useState5","_useState6","setSessions","_useState7","_useState8","isShareChatOpen","setIsShareChatOpen","_useState9","_useState10","isLoadingSessions","setIsLoadingSessions","_useState11","_useState12","selectedSessionForSVG","setSelectedSessionForSVG","groupSessionsByDate","sessions","today","Date","setHours","yesterday","setDate","getDate","groupedSessions","previously","forEach","session","_session$timestamp","sessionDate","timestamp","seconds","getTime","push","_useState13","_useState14","setGroupedSessions","fetchSessions","user","userUid","q","unsubscribe","onSnapshot","snapshot","sessionData","id","length","abrupt","toggleDropdown","tagName","isMobile","window","innerWidth","concat","_Fragment","style","display","alignItems","src","process","alt","marginLeft","e","stopPropagation","cx","cy","r","ShareChat","isHovered","displayName","photoURL","skills","description","otherUserUID","occupation","onClose","navigate","useNavigate","currentUserUID","setCurrentUserUID","isConnected","setIsConnected","onAuthStateChanged","handleChatButtonClick","_discussionID","conversationRef","Error","discussionID","setDoc","state","handleEscapeKey","key","fetchUserContacts","_currentUserUID","userProfileRef","expertApplicationRef","_yield$Promise$all","_yield$Promise$all2","userProfileDoc","expertApplicationDoc","contacts","userData","expertData","expertContacts","Promise","all","getDoc","exists","_objectSpread","handleConnectButtonClick","_ref4","_callee3","_currentUserUID2","_yield$Promise$all3","_yield$Promise$all4","updateRef","_context3","_defineProperty","merge","href","marginBottom","marginTop","join","type","Link","to","fillRule","clipRule","disabled","selectedTopic","firstUserMessage","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","setIsHovered","showExpertBox","setShowExpertBox","setSelectedExpert","isLoadingExperts","setIsLoadingExperts","_useState15","_useState16","buttonClicked","setButtonClicked","_useState17","_useState18","setLoadingExperts","_useState19","_useState20","handleExpertBoxClose","handleMouseEnter","handleMouseLeave","fetchMatchingExperts","experts","getMatchingExpertsForTopic","getMatchingExperts","Array","finish","expertsCollection","querySnapshot","messagesCollection","_matchingExperts","processedExperts","Set","messageDoc","messageData","has","expertInfo","name","keywords","city","fuseOptions","keys","includeScore","includeMatches","threshold","fuse","Fuse","sessionMatch","toLowerCase","includes","promptMatch","search","responseMatch","add","_x","_matchingExperts2","fieldsToCheck","some","field","_x2","_x3","onMouseEnter","onMouseLeave","handleButtonClick","ExpertBox","onSelectTopic","toggleTopicPicker","dropdownRef","localSelectedTopic","setLocalSelectedTopic","selectedTopicId","setSelectedTopicId","searchQuery","setSearchQuery","handleTopicSelection","topic","TopicLabel","category","isHovering","setIsHovering","icon","filteredCategories","categories","filter","placeholder","value","onChange","fadeStyles","_fadeStyles","ENTERING","ENTERED","Fade","React","_ref$transitionClasse","transitionClasses","onEnter","rest","_objectWithoutProperties","_excluded","props","in","timeout","mountOnEnter","unmountOnExit","appear","handleEnter","useCallback","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","isHistoryOpen","setIsHistoryOpen","isExpertsOpen","setIsExpertsOpen","chatContainerRef","isBotResponding","setIsBotResponding","setSelectedSession","setSelectedTopic","setSessionToUse","_useState21","_useState22","showGreeting","_useState23","_useState24","greetingVisible","setGreetingVisible","_useState25","_useState26","setCurrentUser","_useState27","_useState28","isFirstMessage","setIsFirstMessage","_useState29","_useState30","businessVisible","setBusinessVisible","_useState31","_useState32","showTopicPicker","setShowTopicPicker","fetchMessages","discussionId","text","isTyping","flat","handleSendMessage","currentSessionToUse","words","_userDocRef","_timestamp","userDocRef","botMessageDocRef","_context4","trim","split","slice","db","serverTimestamp","setSelectedAndFetchMessages","sessionStorage","setItem","addDoc","handleTextareaResize","prevChatMessages","_toConsumableArray","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","currentTypingSpeed","Math","max","resolve","setTimeout","delegateYield","blur","handleSessionClick","_callee4","_context5","_x4","_ref5","_callee5","sessionId","_context6","_x5","removeItem","fetchLastDiscussionId","_ref6","_callee6","_context7","getItem","textarea","newHeight","min","scrollHeight","handleKeyDown","shiftKey","preventDefault","textareaElement","scrollTop","fetchCurrentUser","_ref7","_callee7","_context8","hour","ChatHistory","TopicPicker","getHours","delay","chatMessage","autoComplete","inputMode","onKeyDown","ChatExperts"],"sourceRoot":""}