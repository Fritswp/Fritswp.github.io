{"version":3,"file":"static/js/811.1d6bdf01.chunk.js","mappings":"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","sources":["ChatBot/sharechat.js","ChatBot/ChatHistory.js","ChatBot/ExpertBox.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase'; // Import auth from firebase\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nconst ShareChat = ({ selectedSession, closeShareChat }) => {\n  const [sharedChatData, setSharedChatData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSharedChatData = async () => {\n      try {\n        if (selectedSession) {\n          const messagesCollectionRef = collection(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession, 'messages');\n          const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n          const messagesData = messagesSnapshot.docs.map((doc) => {\n            const { prompt, response } = doc.data();\n            return { prompt, response };\n          });\n          setSharedChatData(messagesData);\n          setIsLoading(false); // Set loading to false when data is fetched\n          console.log('Fetched messages for discussionId:', selectedSession, messagesData);\n        }\n      } catch (error) {\n        console.error('Error fetching shared chat messages:', error);\n        setIsLoading(false); // Set loading to false on error\n      }\n    };\n\n    fetchSharedChatData();\n  }, [selectedSession]);\n\n  return (\n    <div className=\"white-box-chathistory\">\n      <div className=\"go-back-svg go-back-svg-padding\">\n        <button onClick={closeShareChat}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <h2>Share link to Chat</h2>\n      <div className='divider '></div>\n      <p>\n        Messages you send after creating your link won't be shared. Anyone with the URL will be able to view the shared chat.\n      </p>\n      <div className=\"shared-chat scroll-cat\">\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          sharedChatData.map((message, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>\n                <ReactMarkdown>{message.prompt}</ReactMarkdown>\n\n              </strong>\n              <ReactMarkdown>{message.response}</ReactMarkdown>\n              <div className='divider '></div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ShareChat;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, collection, query, where, getDocs } from 'firebase/firestore';\nimport ShareChat from './sharechat';\n\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick, resetChatMessages  }) => {\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [isShareChatOpen, setIsShareChatOpen] = useState(false);\n\n\n  \n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n  \n        const q = query(collection(firestore, 'users', userUid, 'discussions'));\n  \n        const snapshot = await getDocs(q);\n        const sessionData = snapshot.docs.map((doc) => doc.id);\n        setSessions(sessionData);\n  \n        console.log('Fetched sessions:', sessionData);\n      } else {\n        console.error('User not authenticated');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions from Firestore:', error);\n    }\n  };\n\n  const startNewChat = () => {\n    // Perform actions to start a new chat\n    setSelectedSession(null); // Set selectedSession to null for an undefined session\n    resetChatMessages(); // Reset chat messages in ChatInterface\n    console.log('Discussion set to undefined');\n  };\n  \n  \n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen);\n\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatHistoryRef.current && !chatHistoryRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n    if (lastDiscussionId) {\n      setSelectedSession(lastDiscussionId);\n    }\n  }, []); \n\n  const closeShareChat = () => {\n    setIsShareChatOpen(false);\n  };\n  \n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isDropdownOpen && (\n  <div className='chatbot-previous'>\n    <div style={{ display: 'flex' }}>\n    <button\n              className=\"chat-history-btn\"\n              onClick={() => {\n                startNewChat();\n                if (window.innerWidth <= 768) {\n                  toggleDropdown();\n                }\n              }}\n            >\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n          <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n        </div>\n        <div className='ms-auto'>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n          </svg>\n        </div>\n      </button>\n    </div>\n    <p className=\"text-sm text-muted mt-3\">Sessions:</p>\n    {sessions.length > 0 && (\n  <ul className=\"fade-ulist no-scroll\">\n    {sessions.map((session) => (\n      <li\n        className={`fade-list${session === selectedSession ? ' selected-session' : ''}`}\n        key={session}\n        onClick={() => {\n          setSelectedSession(session);\n          onSessionClick(session);\n          if (window.innerWidth <= 768) {\n            toggleDropdown();\n          }\n        }}\n      >\n        <span>{session}</span>\n        <div className=\"svg-chathistory-container\">\n        <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"white\"\n  strokeWidth=\"2\"\n  strokeLinecap=\"round\"\n  strokeLinejoin=\"round\"\n  onClick={() => {\n    setIsShareChatOpen(true);\n  }}\n>\n  <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n  <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n  \n</svg>\n\n\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n          </svg>\n        </div>\n      </li>\n    ))}\n  </ul>\n)}\n\n  </div>\n\n)}\n{isShareChatOpen && (\n  <ShareChat selectedSession={selectedSession} closeShareChat={closeShareChat} />\n)}  \n\n\n    </div>\n  );\n};\n\nexport default ChatHistory;","import React, { useEffect,useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst ExpertBox = ({ isHovered, displayName, photoURL, skills, description, otherUserUID, occupation, onClose }) => {\n\n    const navigate = useNavigate();\n\n\n  const handleChatButtonClick = () => {\n    try {\n      if (!otherUserUID) {\n        throw new Error('otherUserUID is undefined or null');\n      }\n      navigate('/chat', {\n        state: {\n          otherUserUID,\n        },\n      });\n    } catch (error) {\n      console.error('Error handling chat button click:', error.message);\n    }\n  };\n\n  const handleEscapeKey = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isHovered) {\n      document.addEventListener('keydown', handleEscapeKey);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [isHovered]);\n\n  return (\n    isHovered && (\n      \n<div className=\"white-box\" >\n        <div className=\"go-back-svg go-back-svg-padding\">\n    <button onClick={onClose}>                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n\n          <h5 className=\"card-title\"> {displayName}</h5>\n  \n          <h5 className=\"card-title\">Expertise: {occupation}</h5>\n          \n  <div href={photoURL} className=\"d-md-inline\">\n    <img\n      src={photoURL}\n      alt=\"Profile Photo\"\n      className=\"searchimage card-img user-avatar large-avatar rounded-circle mb-2 mx-md-auto mx-0 \" \n    />\n  </div>\n  \n\n          <div className=\"about-container\">\n          <h5 className=\"card-title\"   style={{ display: 'inline' }}>About: </h5> \n<p style={{ display: 'inline' }}>{description}</p>\n</div>\n         \n\n          <div style={{ marginBottom: '0.4rem', marginTop: '0.4rem' }}>\n     \n          <p className=\"font-weight-bold mb-0\">Skills: {skills.join(', ')}</p>\n  {skills && skills.map((skills) => (\n    <button\n      key={skills}\n      type=\"button\"\n      className=\" containerhover keyword-container mb-2 mx-1 pb-1\"\n    >\n      {skills}\n    </button>\n  ))}\n\n</div>\n\n        <div>\n       \n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Link to=\"/chat\" state={{ otherUserUID }}  onClick={handleChatButtonClick}>\n            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"me-2\">Message</span> \n            </button>\n            </Link>\n            <button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n              </svg>\n             <span className=\"me-2\">Connect</span> \n           </button>\n           \n        \n          </div>\n      </div>\n\n\n\n   \n    )\n  );\n};\n\nexport default ExpertBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, query, where, getDocs } from \"../firebase\"; \nimport ExpertBox from './ExpertBox'\n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic, firstUserMessage }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [showExpertBox, setShowExpertBox] = useState(false);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n\n  const handleExpertBoxClose = () => {\n    setShowExpertBox(false);\n    setButtonClicked(false); // Reset buttonClicked state\n    setIsHovered(null);\n  };\n\n  const handleMouseEnter = (index) => {\n    setIsHovered(index);\n  };\n\n  const handleButtonClick = (expertInfo, index) => {\n    if (index === isHovered) {\n      setSelectedExpert(expertInfo);\n      setButtonClicked(!buttonClicked); // Toggle buttonClicked state\n      setShowExpertBox(true); // Always show ExpertBox on button click\n    }\n  };\n\n\n  const handleMouseLeave = () => {\n    if (!buttonClicked && !showExpertBox) {\n      setShowExpertBox(false);\n      setIsHovered(null);\n    }\n  };\n\n  \n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen(); // Toggle ChatExperts\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          let experts;\n  \n          if (selectedTopic) {\n            console.log(\"Fetching experts for selected topic:\", selectedTopic);\n            experts = await getMatchingExpertsForTopic(selectedTopic, firstUserMessage);\n          } else if (firstUserMessage) {\n            console.log(\"Fetching experts for firstUserMessage:\", firstUserMessage);\n            experts = await getMatchingExperts(null, firstUserMessage);\n          }\n  \n          console.log(\"Matching experts:\", experts);\n  \n          setMatchingExperts(experts || []);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        }\n      }\n    };\n  \n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic, firstUserMessage]);\n  \n\n  const getMatchingExperts = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n\n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n\n          if (\n            (!firstUserMessage || fieldsToCheck.some(field => data[field] && typeof data[field] === 'string' && data[field].toLowerCase().includes(firstUserMessage.toLowerCase()))) &&\n            (!selectedTopic || expertInfo.skills.includes(selectedTopic.id))\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n\n      console.log(\"Matching experts:\", matchingExperts);\n\n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts:\", error);\n      return [];\n    }\n  };\n\n  const getMatchingExpertsForTopic = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n  \n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n  \n          // Check if there is a match in any of the specified fields or if there is no selected topic\n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n  \n          if (\n            (firstUserMessage && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(firstUserMessage.toLowerCase())\n            )) ||\n            (selectedTopic && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(selectedTopic.name.toLowerCase())\n            )) ||\n            (!selectedTopic && !firstUserMessage) // Include expert if no selected topic or firstUserMessage\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n  \n      console.log(\"Matching experts for selected topic:\", matchingExperts);\n      console.log(\"Selected Topic:\", selectedTopic);\n      console.log(\"First User Message:\", firstUserMessage);\n  \n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected topic:\", error);\n      return [];\n    }\n  };\n  \n  \n  \n  \n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      <div>\n        <h4>Experts</h4>\n      </div>\n      {matchingExperts.map((expertInfo, index) => (\n        <div key={index}>\n        <button\n          className={`chat-btn expert-btn text-left ${showExpertBox && index === isHovered ? 'open-expert-box' : ''}`}\n          onMouseEnter={() => handleMouseEnter(index)}\n          onMouseLeave={handleMouseLeave}\n          onClick={() => handleButtonClick(expertInfo, index)}\n        >\n      <div className='d-flex flex-column'>\n        <div className='d-flex align-items-center justify-content-between'>\n          <img\n            src={expertInfo.photoURL}\n            alt=\"Avatar\"\n            className=\"very-small-avatar rounded-circle\"\n          />\n          <div className=\"ml-2\">\n            <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n          </div>\n        </div>\n        {expertInfo.skills && (\n          <div className=\"text-start mt-2\">\n            <p className=\"font-weight-bold mb-0\">Skills: {expertInfo.skills.join(', ')}</p>\n          </div>\n        )}\n      </div>\n      {/* Render the ExpertBox component with isHovered prop */}\n \n          </button>\n          <ExpertBox\n              isHovered={index === isHovered}\n              displayName={expertInfo.name}\n              photoURL={expertInfo.photoURL}\n              skills={expertInfo.skills}\n              description={expertInfo.description}\n              city={expertInfo.city}\n              occupation={expertInfo.occupation}\n              otherUserUID={expertInfo.otherUserUID}\n              onClose={handleExpertBoxClose} // Pass the onClose callback\n            \n            />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatExperts;","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ isDropdownOpen, handleDropdownToggle, onSelectTopic }) => {\n  const dropdownRef = useRef(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    onSelectTopic(topic);\n    handleDropdownToggle();\n  };\n  \n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const pickModelDiv = document.querySelector('.pick-model');\n      if (\n        isDropdownOpen &&\n        dropdownRef.current &&\n        !pickModelDiv.contains(event.target)\n      ) {\n        // Clicked outside the entire pick-model, close the dropdown\n        handleDropdownToggle();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, handleDropdownToggle, isDropdownOpen]);\n  \n  return (\n    <div className=\"pick-model\">\n      <h4\n        onClick={handleDropdownToggle}\n        className={`pointer-cursor ${isDropdownOpen ? 'h4-dropdown-open' : ''}`}\n      >\n        {selectedTopic ? `Topic: ${selectedTopic.name}` : 'Pick a Topic'}\n      </h4>\n      <span\n        className={`svg-chatbot-model pointer-cursor ${isDropdownOpen ? 'svg-chatbot-model-rotate-icon' : ''}`}\n        aria-hidden=\"true\"\n        onClick={handleDropdownToggle}\n      >\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      <div ref={dropdownRef} className={`chat-dropdown-model ${isDropdownOpen ? 'show scroll-cat' : ''}`}>\n        {categories && categories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleDropdownToggle={handleDropdownToggle}\n            handleTopicSelection={handleTopicSelection}\n          />\n        ))}\n      </div>\n    </div>\n  );\n  \n  \n};\n  \n  const TopicLabel = ({ category, handleDropdownToggle, handleTopicSelection }) => {\n    const handleRadioChange = () => {\n      handleTopicSelection(category);\n      handleDropdownToggle();\n    };\n  \n    return (\n      <label className=\"chat-dropdown-model-button \" htmlFor={category.id}>\n        {category.svg} \n        <div className=\"d-flex align-items-center\">\n          <div className=\"d-flex flex-column align-items-start ps-3\">\n            <h5 className=\"m-0\">{category.name}</h5>\n            <h6 className=\"text-muted text-start m-0\">{category.description}</h6>\n          </div>\n        </div>\n        <div className=\"flex-grow-1 d-flex justify-content-end\">\n          <input\n            type=\"radio\"\n            className=\"form-check-input listboxes\"\n            id={category.id}\n            name=\"jobSuccess\"\n            onChange={handleRadioChange}\n          />\n          <label className=\"form-check-label label-with-svg\" htmlFor={category.id}></label>\n        </div>\n      </label>\n    );\n  };\n  \n    const categories = [\n        {\n        id: 'computerOption',\n        name: 'Computer',\n        description: 'All your IT solutions',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'sportOption',\n        name: 'Sport',\n        description: \"Let Tio help you become fit\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M9.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M6.44 3.752A.75.75 0 0 1 7 3.5h1.445c.742 0 1.32.643 1.243 1.38l-.43 4.083a1.8 1.8 0 0 1-.088.395l-.318.906.213.242a.8.8 0 0 1 .114.175l2 4.25a.75.75 0 1 1-1.357.638l-1.956-4.154-1.68-1.921A.75.75 0 0 1 6 8.96l.138-2.613-.435.489-.464 2.786a.75.75 0 1 1-1.48-.246l.5-3a.75.75 0 0 1 .18-.375l2-2.25Z\"/>\n            <path d=\"M6.25 11.745v-1.418l1.204 1.375.261.524a.8.8 0 0 1-.12.231l-2.5 3.25a.75.75 0 1 1-1.19-.914zm4.22-4.215-.494-.494.205-1.843.006-.067 1.124 1.124h1.44a.75.75 0 0 1 0 1.5H11a.75.75 0 0 1-.531-.22Z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'foodCategory',\n        name: 'Food',\n        description: 'Ready to become head-chef?',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"/>\n            <path d=\"M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'healthCategory',\n        name: 'Health',\n        description: 'Here to help',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.121 1.879a3 3 0 0 0-4.242 0L8.733 3.026l4.261 4.26 1.127-1.165a3 3 0 0 0 0-4.242M12.293 8 8.027 3.734 3.738 8.031 8 12.293zm-5.006 4.994L3.03 8.737 1.879 9.88a3 3 0 0 0 4.241 4.24l.006-.006 1.16-1.121ZM2.679 7.676l6.492-6.504a4 4 0 0 1 5.66 5.653l-1.477 1.529-5.006 5.006-1.523 1.472a4 4 0 0 1-5.653-5.66l.001-.002 1.505-1.492z\"/>\n            <path d=\"M5.56 7.646a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707Zm1.415-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707M8.39 4.818a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707Zm0 5.657a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707ZM9.803 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707Zm1.414-1.414a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707ZM6.975 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707ZM8.39 7.646a.5.5 0 1 1-.708.708.5.5 0 0 1 .707-.708Zm1.413-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'workCategory',\n        name: 'Work',\n        description: 'New Job or career advice',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'hobbiesCategory',\n        name: 'Hobbies',\n        description: \"Discover what's possible\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3\"/>\n            <path d=\"M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8m-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7\"/>\n            </svg>\n        ),\n        },\n    ];\n    \n    export default TopicPicker;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\nimport nlp from 'compromise/three';\n\n\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('52px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n  \n\n  const fetchMessages = async (userUid, discussionId) => {\n    console.log('Fetching messages for userUid:', userUid, 'and discussionId:', discussionId);\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: <ReactMarkdown>{prompt}</ReactMarkdown>, user: 'user' },\n          { text: <ReactMarkdown>{response}</ReactMarkdown>, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n      console.log('Fetched messages for discussionId:', discussionId);\n    } catch (error) {\n      console.error('Error fetching messages from Firestore:', error);\n    }\n  };\n  \n  \n  const handleSessionClick = async (discussionId) => {\n    console.log('Clicked session:', discussionId);\n    setSelectedSession(discussionId);\n  \n    // Store the selected session in sessionStorage\n    sessionStorage.setItem('lastDiscussionId', discussionId);\n  \n    await fetchMessages(auth.currentUser.uid, discussionId);\n  };\n  \nconst handleSendMessage = async () => {\n  console.log('Sending message for discussionId:', selectedSession);\n  setIsBotResponding(true);\n  if (message.trim() !== '') {\n    const uid = auth.currentUser.uid;\n    try {\n      let sessionToUse = selectedSession;\n      if (!sessionToUse) {\n        const terms = nlp(message).terms();\n        const filteredNouns = terms.nouns().out('array').filter(term => term !== 'pronoun');\n        const verbs = terms.verbs().out('array');\n        sessionToUse = [...filteredNouns, ...verbs].join(' ');\n    \n        console.log('Creating/Updating user document:', `users/${uid}`);\n        await setDoc(doc(db, `users/${uid}`), {});\n    \n        const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n        console.log('Checking if discussion exists:', userDocRef.path);\n        const discussionsSnapshot = await getDoc(userDocRef);\n    \n        if (!discussionsSnapshot.exists()) {\n          console.log('Discussion does not exist, creating:', userDocRef.path);\n          await setDoc(userDocRef, {});\n        }\n        setSelectedSession(sessionToUse);\n        sessionStorage.setItem('currentDiscussionId', sessionToUse);\n      }\n      const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n      const messagesCollectionRef = collection(userDocRef, 'messages');\n      const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message });\n      console.log('Message added to discussion:', userDocRef.path);\n\n      setMessage('');\n      handleTextareaResize();\n      setChatMessages((prevChatMessages) => [\n        ...prevChatMessages,\n        { text: message, user: 'user' },\n        { text: '', user: 'bot', isTyping: true },\n      ]);\n\n      const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n        const rawBotResponse = docSnapshot.data()?.response;\n        if (rawBotResponse) {\n          unsubscribe();\n          const initialTypingSpeed = 20;\n          const speedIncreaseRate = 0.1;\n          const formattedBotResponse = rawBotResponse;\n          for (let i = 0; i < formattedBotResponse.length; i++) {\n            const currentTypingSpeed = Math.max(5, initialTypingSpeed - i * speedIncreaseRate);\n            await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n            setChatMessages((prevChatMessages) => [\n              ...prevChatMessages.slice(0, -1),\n              {\n                text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                user: 'bot',\n              },\n            ]);\n          }\n          setIsBotResponding(false);\n          if (window.innerWidth < 768 && textareaRef.current) {\n            textareaRef.current.blur();\n          }\n        }\n      });\n      setSelectedSession(null);\n    } catch (error) {\n      console.error('Error handling and sending message:', error);\n    }\n  }\n};\n\n  \n\n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    const fetchLastDiscussionId = async () => {\n      try {\n        if (auth.currentUser) {\n          const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n  \n          if (lastDiscussionId) {\n          } else {\n            console.log('No last discussion ID found.');\n          }\n        } else {\n          console.log('No user authenticated.');\n        }\n      } catch (error) {\n        console.error('Error fetching last discussion ID:', error);\n      }\n    };\n  \n    fetchLastDiscussionId(); \n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n  \n  \n  \n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    console.log('Selected Topic:', topic); \n  };\n  \n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '52px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  const handleDropdownToggle = () => {\n    console.log('Dropdown toggled');\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('52px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  const resetChatMessages = () => {\n    setChatMessages([]);\n  };\n  \n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} onSessionClick={handleSessionClick} resetChatMessages={resetChatMessages}/>\n<div className='chat-display'>\n<TopicPicker isDropdownOpen={isDropdownOpen} handleDropdownToggle={handleDropdownToggle} onSelectTopic={handleTopicSelection} />\n        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\"  ref={chatContainerRef}>\n  {chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {chatMessage.isTyping ? (\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n    {chatMessage.user !== 'bot' && <div className=\"chat-text\">{chatMessage.text}</div>}\n  </div>\n))}\n\n      </div>\n      <div className=\"chatui-container\">\n        <div className=\"userui-input\" >\n        <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col textarea-chat\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  }}\n  disabled={isBotResponding} \n/>\n          <button\n          aria-label=\"Send Message\"\n          className=\"svg-container send-btn\"\n          disabled={isBotResponding}\nonClick={() => handleSendMessage(selectedSession)}\n        >\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n   <ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} />\n\n      </div>\n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","selectedSession","closeShareChat","_useState","useState","_useState2","_slicedToArray","sharedChatData","setSharedChatData","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchSharedChatData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messagesCollectionRef","messagesSnapshot","messagesData","wrap","_context","prev","next","collection","firestore","auth","currentUser","uid","getDocs","query","orderBy","sent","docs","map","doc","_doc$data","data","prompt","response","console","log","t0","error","stop","apply","arguments","_jsxs","className","children","_jsx","onClick","xmlns","fill","viewBox","strokeWidth","color","stroke","strokeLinecap","strokeLinejoin","d","LoadingCircle","message","index","ReactMarkdown","isOpen","toggleOpen","onSessionClick","resetChatMessages","isDropdownOpen","setIsDropdownOpen","setIsIconRotated","chatHistoryRef","useRef","_useState5","_useState6","sessions","setSessions","_useState7","_useState8","setSelectedSession","_useState9","_useState10","_useState11","_useState12","isShareChatOpen","setIsShareChatOpen","fetchSessions","user","userUid","q","snapshot","sessionData","id","toggleDropdown","handleClickOutside","event","current","contains","target","isMobile","window","innerWidth","document","addEventListener","removeEventListener","lastDiscussionId","sessionStorage","getItem","ref","concat","width","height","style","display","alignItems","src","process","alt","marginLeft","length","session","cx","cy","r","ShareChat","isHovered","displayName","photoURL","skills","description","otherUserUID","occupation","onClose","navigate","useNavigate","handleEscapeKey","key","href","marginBottom","marginTop","join","type","Link","to","state","Error","fillRule","clipRule","selectedTopic","firstUserMessage","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","setIsHovered","showExpertBox","setShowExpertBox","setSelectedExpert","_useState13","_useState14","buttonClicked","setButtonClicked","handleExpertBoxClose","handleMouseLeave","fetchMatchingExperts","experts","getMatchingExpertsForTopic","getMatchingExperts","_ref3","_callee2","expertsCollection","querySnapshot","_matchingExperts","_context2","forEach","expertInfo","name","keywords","city","some","field","toLowerCase","includes","push","abrupt","_x","_x2","_ref4","_callee3","_matchingExperts2","_context3","fieldsToCheck","_x3","_x4","onMouseEnter","handleMouseEnter","onMouseLeave","handleButtonClick","ExpertBox","TopicLabel","category","handleDropdownToggle","handleTopicSelection","htmlFor","svg","onChange","categories","onSelectTopic","dropdownRef","setSelectedTopic","topic","pickModelDiv","querySelector","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","isHistoryOpen","setIsHistoryOpen","isExpertsOpen","setIsExpertsOpen","chatContainerRef","isBotResponding","setIsBotResponding","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","fetchMessages","discussionId","text","isTyping","flat","handleSessionClick","setItem","handleSendMessage","_callee4","sessionToUse","terms","filteredNouns","verbs","_userDocRef","userDocRef","botMessageDocRef","unsubscribe","_context5","trim","nlp","nouns","out","filter","term","_toConsumableArray","setDoc","db","path","getDoc","exists","addDoc","handleTextareaResize","prevChatMessages","onSnapshot","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","_context4","currentTypingSpeed","Math","max","Promise","resolve","setTimeout","slice","delegateYield","blur","removeItem","fetchLastDiscussionId","_ref5","_callee5","_context6","textarea","newHeight","min","scrollHeight","handleKeyDown","shiftKey","preventDefault","textareaElement","scrollTop","ChatHistory","TopicPicker","chatMessage","value","e","placeholder","autoComplete","inputMode","onKeyDown","disabled","ChatExperts"],"sourceRoot":""}