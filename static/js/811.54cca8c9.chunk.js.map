{"version":3,"file":"static/js/811.54cca8c9.chunk.js","mappings":"4PAmEA,EA9DkB,SAAHA,GAA6C,IAAvCC,EAAeD,EAAfC,gBAAiBC,EAAcF,EAAdE,eACpCC,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAyB9B,OAvBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAEpBxB,EAAgB,CAADuB,EAAAE,KAAA,SAC6G,OAAxHN,GAAwBO,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,QAASC,EAAAA,GAAKC,YAAYC,IAAK,cAAe9B,EAAiB,YAAWuB,EAAAE,KAAA,GAC/FM,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAMb,GAAuBc,EAAAA,EAAAA,IAAQ,gBAAgB,KAAD,EAArFb,EAAgBG,EAAAW,KAChBb,EAAeD,EAAiBe,KAAKC,KAAI,SAACC,GAC9C,IAAAC,EAA6BD,EAAIE,OACjC,MAAO,CAAEC,OADKF,EAANE,OACSC,SADOH,EAARG,SAElB,IACAlC,EAAkBc,GAClBV,GAAa,GACb+B,QAAQC,IAAI,qCAAsC3C,EAAiBqB,GAAc,QAAAE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,SAGnFmB,QAAQG,MAAM,uCAAsCtB,EAAAqB,IACpDjC,GAAa,GAAQ,yBAAAY,EAAAuB,OAAA,GAAA5B,EAAA,mBAExB,kBAjBwB,OAAAJ,EAAAiC,MAAA,KAAAC,UAAA,KAmBzBnC,GACF,GAAG,CAACb,KAGFiD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,KAAA,UAAQC,QAASpD,EAAekD,UAC9BC,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,MAAM,QAAQC,OAAO,eAAeT,UAAU,UAASC,UAC/IC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,gCAK3DV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cACfE,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2HAGHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SACpCzC,GACC0C,EAAAA,EAAAA,KAACW,EAAAA,EAAa,IAEdzD,EAAe8B,KAAI,SAAC4B,EAASC,GAAK,OAChChB,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,eAAcC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAAAf,SAAEa,EAAQxB,YAG1BY,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAAAf,SAAEa,EAAQvB,YACxBW,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eANPe,EAOJ,QAMlB,ECuPA,EAlToB,SAAHlE,GAAmE,IAA7DoE,EAAMpE,EAANoE,OAAQC,EAAUrE,EAAVqE,WAAYC,EAActE,EAAdsE,eAAgBC,EAAiBvE,EAAjBuE,kBACzDpE,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDqE,EAAcnE,EAAA,GAAEoE,EAAiBpE,EAAA,GACxCI,GAA0CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCiE,GAAFhE,EAAA,GAAkBA,EAAA,IAChCiE,GAAiBC,EAAAA,EAAAA,QAAO,MAC9BC,GAAgCzE,EAAAA,EAAAA,UAAS,IAAG0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAA3BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,GAA8C5E,EAAAA,EAAAA,UAAS,MAAK6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAArD/E,EAAegF,EAAA,GAAEC,EAAkBD,EAAA,GAC1CE,GAAwC/E,EAAAA,EAAAA,UAAS,IAAGgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GACpDE,GADmBD,EAAA,GAAiBA,EAAA,IACUhF,EAAAA,EAAAA,WAAS,IAAMkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAEpCG,EAAsB,SAACC,GAC3B,IAAMC,GAAQ,IAAIC,MAAOC,SAAS,EAAG,EAAG,EAAG,GACrCC,EAAY,IAAIF,KACtBE,EAAUC,QAAQD,EAAUE,UAAY,GACxCF,EAAUD,SAAS,EAAG,EAAG,EAAG,GAE5B,IAAMI,EAAkB,CACtBN,MAAO,GACPG,UAAW,GACXI,WAAY,IAed,OAZAR,EAASS,SAAQ,SAACC,GAChB,IAAMC,EAAc,IAAIT,KAAiC,IAA5BQ,EAAQE,UAAUC,SAAgBV,SAAS,EAAG,EAAG,EAAG,GAE7EQ,IAAgBV,EAClBM,EAAgBN,MAAMa,KAAKJ,GAClBC,IAAgBP,EACzBG,EAAgBH,UAAUU,KAAKJ,GAE/BH,EAAgBC,WAAWM,KAAKJ,EAEpC,IAEOH,CACT,EAEAQ,GAA8CrG,EAAAA,EAAAA,UAAS,CACrDuF,MAAO,GACPG,UAAW,GACXI,WAAY,KACZQ,GAAApG,EAAAA,EAAAA,GAAAmG,EAAA,GAJKR,EAAeS,EAAA,GAAEC,EAAkBD,EAAA,GAMpCE,EAAa,eAAA7F,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA0F,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhG,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,GAFZF,EAAAC,KAAA,IAEZoF,EAAOhF,EAAAA,GAAKC,aACT,CAADN,EAAAE,KAAA,SAML,OALKoF,EAAUD,EAAK9E,IAEfgF,GAAI9E,EAAAA,EAAAA,KACRN,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,QAASkF,EAAS,gBACxC5E,EAAAA,EAAAA,IAAQ,YAAa,SACtBV,EAAAE,KAAA,GAEsBM,EAAAA,EAAAA,IAAQ+E,GAAG,KAAD,EAA3BC,EAAQxF,EAAAW,KACR8E,EAAcD,EAAS5E,KAAKC,KAAI,SAACC,GAAG,MAAM,CAC9C4E,GAAI5E,EAAI4E,GACRZ,UAAWhE,EAAIE,OAAO8D,UACvB,IACDvB,EAAYkC,GAGZN,EAAmBlB,EAAoBwB,IAEvCtE,QAAQC,IAAI,oBAAqBqE,GAAazF,EAAAE,KAAA,iBAE9CiB,QAAQG,MAAM,0BAA0B,QAAAtB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,SAG1CmB,QAAQG,MAAM,0CAAyCtB,EAAAqB,IAAS,yBAAArB,EAAAuB,OAAA,GAAA5B,EAAA,mBAEnE,kBA5BkB,OAAAJ,EAAAiC,MAAA,KAAAC,UAAA,MAqCnBpC,EAAAA,EAAAA,YAAU,WACJuD,GAEFwC,GAEJ,GAAG,CAACxC,IAEJ,IAAM+C,EAAiB,WACrB9C,IACAI,GAAmBD,EAErB,EAEM4C,EAAqB,SAACC,GACtB1C,EAAe2C,UAAY3C,EAAe2C,QAAQC,SAASF,EAAMG,UACnEnD,IACAI,GAAkB,GAClBC,GAAiB,GAErB,GAEA7D,EAAAA,EAAAA,YAAU,WACR,IAAM4G,EAAWC,OAAOC,YAAc,IAMtC,OALIvD,GAAUqD,EACZG,SAASC,iBAAiB,YAAaT,GAEvCQ,SAASE,oBAAoB,YAAaV,GAErC,WACLQ,SAASE,oBAAoB,YAAaV,EAC5C,CACF,GAAG,CAAChD,KAEJvD,EAAAA,EAAAA,YAAU,WACR,IAAMkH,EAAmBC,eAAeC,QAAQ,oBAC5CF,GACF7C,EAAmB6C,EAEvB,GAAG,IAQH,OACE7E,EAAAA,EAAAA,MAAA,OAAKgF,IAAKvD,EAAgBxB,UAAS,mBAAAgF,OAAqB/D,EAAS,uBAAyB,IAAKhB,SAAA,EAC7FC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,uBAAAgF,OAAyB/D,EAAS,kCAAoC,IAAM,cAAY,OAAOd,QAAS6D,EAAe/D,UACpIC,EAAAA,EAAAA,KAAA,OAAK+E,MAAM,IAAIC,OAAO,KAAK5E,QAAQ,WAAUL,UAC3CC,EAAAA,EAAAA,KAAA,QAAMU,EAAE,qXAGXS,IACCtB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKiF,MAAO,CAAEC,QAAS,QAASnF,UAC9BF,EAAAA,EAAAA,MAAA,UACEC,UAAU,mBACVG,QAAS,WAhEnB4B,EAAmB,MACnBX,IACA5B,QAAQC,IAAI,+BAgEI8E,OAAOC,YAAc,KACvBR,GAEJ,EAAE/D,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKoF,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAAWpF,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKoF,IAAG,GAAAN,OAAKO,GAAsB,yBAAyBC,IAAI,mBAAmBxF,UAAU,2CAC7FE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAwBmF,MAAO,CAAE3E,MAAO,QAASiF,WAAY,OAAQxF,SAAC,mBAErFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKE,OAAO,QAAQwE,MAAM,KAAKC,OAAO,KAAIjF,UAC7HC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,+QAK7DV,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAC,WACtC6C,EAAgBN,MAAMkD,OAAS,IAC9BxF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SACnC6C,EAAgBN,MAAMtD,KAAI,SAAC+D,GAAO,OACjClD,EAAAA,EAAAA,MAAA,MACEC,UAAS,YAAAgF,OAAc/B,EAAQc,KAAOjH,EAAkB,oBAAsB,IAE9EqD,QAAS,WACP4B,EAAmBkB,EAAQc,IAC3B5C,EAAe8B,EAAQc,IACnBQ,OAAOC,YAAc,KACvBR,GAEJ,EAAE/D,SAAA,CAEDgD,EAAQc,IACThE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OACAK,MAAM,6BACN6E,MAAM,KACNC,OAAO,KACP5E,QAAQ,YACRD,KAAK,OACLI,OAAO,QACPF,YAAY,IACZG,cAAc,QACdC,eAAe,QACfR,QAAS,WACTkC,GAAmB,EACnB,EAAEpC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B3F,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B3F,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,IAAIC,GAAG,KAAKC,EAAE,UAGzB3F,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKE,OAAO,QAAQwE,MAAM,KAAKC,OAAO,KAAIjF,UAC/HC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,4VA/BhCqC,EAAQc,GAmCV,OAMnB7D,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAE6C,EAAgBH,UAAU+C,OAAS,GAAK,eAC/E5C,EAAgBH,UAAU+C,OAAS,IAClCxF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SACxB6C,EAAgBN,MAAMtD,KAAI,SAAC+D,GAAO,OACjClD,EAAAA,EAAAA,MAAA,MACEC,UAAS,YAAAgF,OAAc/B,EAAQc,KAAOjH,EAAkB,oBAAsB,IAE9EqD,QAAS,WACP4B,EAAmBkB,EAAQc,IAC3B5C,EAAe8B,EAAQc,IACnBQ,OAAOC,YAAc,KACvBR,GAEJ,EAAE/D,SAAA,CAEDgD,EAAQc,IACThE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OACAK,MAAM,6BACN6E,MAAM,KACNC,OAAO,KACP5E,QAAQ,YACRD,KAAK,OACLI,OAAO,QACPF,YAAY,IACZG,cAAc,QACdC,eAAe,QACfR,QAAS,WACTkC,GAAmB,EACnB,EAAEpC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B3F,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B3F,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,IAAIC,GAAG,KAAKC,EAAE,UAGzB3F,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKE,OAAO,QAAQwE,MAAM,KAAKC,OAAO,KAAIjF,UAC/HC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,4VA/BhCqC,EAAQc,GAmCV,OAMpB7D,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAAyBC,SAAE6C,EAAgBC,WAAW2C,OAAS,GAAK,gBAChF5C,EAAgBC,WAAW2C,OAAS,IACnCxF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SAC1B6C,EAAgBN,MAAMtD,KAAI,SAAC+D,GAAO,OACjClD,EAAAA,EAAAA,MAAA,MACEC,UAAS,YAAAgF,OAAc/B,EAAQc,KAAOjH,EAAkB,oBAAsB,IAE9EqD,QAAS,WACP4B,EAAmBkB,EAAQc,IAC3B5C,EAAe8B,EAAQc,IACnBQ,OAAOC,YAAc,KACvBR,GAEJ,EAAE/D,SAAA,CAEDgD,EAAQc,IACThE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OACAK,MAAM,6BACN6E,MAAM,KACNC,OAAO,KACP5E,QAAQ,YACRD,KAAK,OACLI,OAAO,QACPF,YAAY,IACZG,cAAc,QACdC,eAAe,QACfR,QAAS,WACTkC,GAAmB,EACnB,EAAEpC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B3F,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B3F,EAAAA,EAAAA,KAAA,UAAQyF,GAAG,IAAIC,GAAG,KAAKC,EAAE,UAGzB3F,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKE,OAAO,QAAQwE,MAAM,KAAKC,OAAO,KAAIjF,UAC/HC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,4VA/BjCqC,EAAQc,GAmCV,SAOjB3B,IACClC,EAAAA,EAAAA,KAAC4F,EAAS,CAAChJ,gBAAiBA,EAAiBC,eAnLtB,WACrBsF,GAAmB,EACrB,MAuLF,E,oBC5KA,EAtIkB,SAAHxF,GAAuH,IAAjHkJ,EAASlJ,EAATkJ,UAAWC,EAAWnJ,EAAXmJ,YAAaC,EAAQpJ,EAARoJ,SAAUC,EAAMrJ,EAANqJ,OAAQC,EAAWtJ,EAAXsJ,YAAaC,EAAYvJ,EAAZuJ,aAAcC,EAAUxJ,EAAVwJ,WAAYC,EAAOzJ,EAAPyJ,QAASxJ,EAAeD,EAAfC,gBACvGyJ,GAAWC,EAAAA,EAAAA,MAEjBxJ,GAA4CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDyJ,EAAcvJ,EAAA,GAAEwJ,EAAiBxJ,EAAA,IAExCQ,EAAAA,EAAAA,YAAU,WACR8B,QAAQC,IAAI,iCAAkC3C,GAE9C,IAAM6J,EAAcjI,EAAAA,GAAKkI,oBAAmB,SAAClD,GACvCA,GACFgD,EAAkBhD,EAAK9E,KACvBY,QAAQC,IAAI,iCAAkCiE,EAAK9E,OAEnDY,QAAQG,MAAM,0CACd+G,EAAkB,MAEtB,IAEA,OAAO,WAELC,GACF,CACF,GAAG,CAAC7J,IAEJ,IAAM+J,EAAkB,SAAC3C,GACL,WAAdA,EAAM4C,KACRR,GAEJ,GAEA5I,EAAAA,EAAAA,YAAU,WAKR,OAJIqI,GACFtB,SAASC,iBAAiB,UAAWmC,GAGhC,WACLpC,SAASE,oBAAoB,UAAWkC,EAC1C,CACF,GAAG,CAACd,IAkBJ,OACEA,IAEJhG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UACpDF,EAAAA,EAAAA,MAAA,UAAQI,QAASmG,EAAQrG,SAAA,CAAC,sBAAkBC,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,MAAM,QAAQC,OAAO,eAAeT,UAAU,UAASC,UACvLC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,iCAKrDb,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYC,SAAA,CAAC,IAAE+F,MAE7BjG,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYC,SAAA,CAAC,cAAYoG,MAE/CnG,EAAAA,EAAAA,KAAA,OAAK6G,KAAMd,EAAUjG,UAAU,cAAaC,UAC1CC,EAAAA,EAAAA,KAAA,OACEoF,IAAKW,EACLT,IAAI,gBACJxF,UAAU,0FAKND,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAemF,MAAO,CAAEC,QAAS,UAAWnF,SAAC,aACrEC,EAAAA,EAAAA,KAAA,KAAGiF,MAAO,CAAEC,QAAS,UAAWnF,SAAEkG,QAIxBpG,EAAAA,EAAAA,MAAA,OAAKoF,MAAO,CAAE6B,aAAc,SAAUC,UAAW,UAAWhH,SAAA,EAE5DF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,WAASiG,EAAOgB,KAAK,SACjEhB,GAAUA,EAAOhH,KAAI,SAACgH,GAAM,OAC3BhG,EAAAA,EAAAA,KAAA,UAEEiH,KAAK,SACLnH,UAAU,mDAAkDC,SAE3DiG,GAJIA,EAKE,QAKLhG,EAAAA,EAAAA,KAAA,WAGAH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC9CC,EAAAA,EAAAA,KAACkH,EAAAA,GAAI,CAACC,GAAG,QAAQC,MAAO,CAAElB,aAAAA,EAActJ,gBAAAA,GAAmBqD,QAjEnC,WAC5B,IACE,IAAKiG,EACH,MAAM,IAAImB,MAAM,qCAElBhB,EAAS,QAAS,CAChBe,MAAO,CACLlB,aAAAA,EACAtJ,gBAAAA,EACA2J,eAAAA,IAGN,CAAE,MAAO9G,GACPH,QAAQG,MAAM,oCAAqCA,EAAMmB,QAC3D,CACF,EAkDgGb,UAEtFF,EAAAA,EAAAA,MAAA,UAAQoH,KAAK,SAASnH,UAAU,6DAA4DC,SAAA,EAE1FC,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BE,QAAQ,YAAYD,KAAK,eAAe4E,MAAM,KAAKjF,UAAU,uBAAsBC,UACzHC,EAAAA,EAAAA,KAAA,QAAMsH,SAAS,UAAU5G,EAAE,ybAAyb6G,SAAS,eAE/dvH,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,kBAGzBF,EAAAA,EAAAA,MAAA,UAAQoH,KAAK,SAASnH,UAAU,+DAA8DC,SAAA,EAE9FC,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BE,QAAQ,YAAYD,KAAK,eAAe4E,MAAM,KAAKjF,UAAU,uBAAsBC,UACvHC,EAAAA,EAAAA,KAAA,QAAMU,EAAE,8VAEXV,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,oBAYpC,EC+GA,EAnPoB,SAAHpD,GAAkF,IAA5EoE,EAAMpE,EAANoE,OAAQC,EAAUrE,EAAVqE,WAAYwG,EAAa7K,EAAb6K,cAAeC,EAAgB9K,EAAhB8K,iBAAkB7K,EAAeD,EAAfC,gBAC1EE,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDqE,EAAcnE,EAAA,GAAEoE,EAAiBpE,EAAA,GACxCI,GAA0CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlDsK,EAAarK,EAAA,GAAEgE,EAAgBhE,EAAA,GACtCmE,GAA8CzE,EAAAA,EAAAA,UAAS,IAAG0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAAnDmG,EAAelG,EAAA,GAAEmG,EAAkBnG,EAAA,GACpCoG,GAAiBtG,EAAAA,EAAAA,QAAO,MAC9BI,GAAkC5E,EAAAA,EAAAA,WAAS,GAAM6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAA1CkE,EAASjE,EAAA,GAAEkG,EAAYlG,EAAA,GAE9BE,GAA0C/E,EAAAA,EAAAA,WAAS,GAAMgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAAlDiG,EAAahG,EAAA,GAAEiG,EAAgBjG,EAAA,GACtCC,GAA4CjF,EAAAA,EAAAA,UAAS,MAAKkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAAnCiG,GAAFhG,EAAA,GAAmBA,EAAA,IAExCmB,GAA0CrG,EAAAA,EAAAA,WAAS,GAAMsG,GAAApG,EAAAA,EAAAA,GAAAmG,EAAA,GAAlD8E,EAAa7E,EAAA,GAAE8E,EAAgB9E,EAAA,GAGhC+E,EAAuB,WAC3BJ,GAAiB,GACjBG,GAAiB,GACjBL,EAAa,KACf,EAeMO,EAAmB,WAClBH,GAAkBH,IACrBC,GAAiB,GACjBF,EAAa,MAEjB,EASM/D,EAAqB,SAACC,GACtB6D,EAAe5D,UAAY4D,EAAe5D,QAAQC,SAASF,EAAMG,UACnEnD,IACAI,GAAkB,GAClBC,GAAiB,GAErB,GAEA7D,EAAAA,EAAAA,YAAU,WACR,IAAM4G,EAAWC,OAAOC,YAAc,IAMtC,OALIvD,GAAUqD,EACZG,SAASC,iBAAiB,YAAaT,GAEvCQ,SAASE,oBAAoB,YAAaV,GAErC,WACLQ,SAASE,oBAAoB,YAAaV,EAC5C,CACF,GAAG,CAAChD,KAEJvD,EAAAA,EAAAA,YAAU,WACR,IAAM8K,EAAoB,eAAA5K,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAyK,EAAA,OAAA3K,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACvB0C,EAAO,CAAD5C,EAAAE,KAAA,YAAAF,EAAAC,KAAA,GAIFoJ,EAAc,CAADrJ,EAAAE,KAAA,QACoD,OAAnEiB,QAAQC,IAAI,uCAAwCiI,GAAerJ,EAAAE,KAAA,EACnDmK,EAA2BhB,EAAeC,GAAkB,KAAD,EAA3Ec,EAAOpK,EAAAW,KAAAX,EAAAE,KAAA,oBACEoJ,EAAiB,CAADtJ,EAAAE,KAAA,SAC+C,OAAxEiB,QAAQC,IAAI,yCAA0CkI,GAAkBtJ,EAAAE,KAAA,GACxDoK,EAAmB,KAAMhB,GAAkB,KAAD,GAA1Dc,EAAOpK,EAAAW,KAAA,QAGTQ,QAAQC,IAAI,oBAAqBgJ,GAEjCX,EAAmBW,GAAW,IAAIpK,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,SAElCmB,QAAQG,MAAM,0BAAyBtB,EAAAqB,IAAS,yBAAArB,EAAAuB,OAAA,GAAA5B,EAAA,mBAGrD,kBApByB,OAAAJ,EAAAiC,MAAA,KAAAC,UAAA,KAsB1B0I,GACF,GAAG,CAACvH,EAAQyG,EAAeC,IAG3B,IAAMgB,EAAkB,eAAAC,GAAA/K,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8K,EAAOnB,EAAeC,GAAgB,IAAAmB,EAAAC,EAAAC,EAAA,OAAAlL,EAAAA,EAAAA,KAAAM,MAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAEQ,OAFR0K,EAAA3K,KAAA,EAEvDwK,GAAoBtK,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,sBAAqBwK,EAAA1K,KAAA,GACzCM,EAAAA,EAAAA,IAAQiK,GAAmB,KAAD,EA2BJ,OA3B5CC,EAAaE,EAAAjK,KACb6I,EAAkB,GAExBkB,EAAc/F,SAAQ,SAAC7D,GACrB,IAAME,EAAOF,EAAIE,OACjB,GAAIA,GAAQA,EAAK2G,YAAa,CAC5B,IAAMkD,EAAa,CACjBC,KAAM9J,EAAK2G,YACXC,SAAU5G,EAAK4G,UAAQ,GAAAjB,OAAOO,GAAsB,0BACpDW,OAAQ7G,EAAK+J,UAAY,GACzBjD,YAAa9G,EAAK8G,YAClBkD,KAAMhK,EAAKgK,KACXhD,WAAYhH,EAAKgH,WACjBD,aAAcjH,EAAI4E,IAMhB4D,IAHkB,CAAC,OAAQ,aAAc,WAAY,cAAe,UAGlC2B,MAAK,SAAAC,GAAK,OAAIlK,EAAKkK,IAAiC,kBAAhBlK,EAAKkK,IAAuBlK,EAAKkK,GAAOC,cAAcC,SAAS9B,EAAiB6B,cAAc,KACpK9B,IAAiBwB,EAAWhD,OAAOuD,SAAS/B,EAAc3D,KAE5D8D,EAAgBxE,KAAK6F,EAEzB,CACF,IAEA1J,QAAQC,IAAI,oBAAqBoI,GAAiBoB,EAAAS,OAAA,SAE3C7B,GAAe,QAE0B,OAF1BoB,EAAA3K,KAAA,GAAA2K,EAAAvJ,GAAAuJ,EAAA,SAEtBzJ,QAAQG,MAAM,0BAAyBsJ,EAAAvJ,IAASuJ,EAAAS,OAAA,SACzC,IAAE,yBAAAT,EAAArJ,OAAA,GAAAiJ,EAAA,mBAEZ,gBArCuBc,EAAAC,GAAA,OAAAhB,EAAA/I,MAAA,KAAAC,UAAA,KAuClB4I,EAA0B,eAAAmB,GAAAhM,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+L,EAAOpC,EAAeC,GAAgB,IAAAmB,EAAAC,EAAAgB,EAAA,OAAAjM,EAAAA,EAAAA,KAAAM,MAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,OAEA,OAFAyL,EAAA1L,KAAA,EAE/DwK,GAAoBtK,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,sBAAqBuL,EAAAzL,KAAA,GACzCM,EAAAA,EAAAA,IAAQiK,GAAmB,KAAD,EAuCD,OAvC/CC,EAAaiB,EAAAhL,KACb6I,EAAkB,GAExBkB,EAAc/F,SAAQ,SAAC7D,GACrB,IAAME,EAAOF,EAAIE,OACjB,GAAIA,GAAQA,EAAK2G,YAAa,CAC5B,IAAMkD,EAAa,CACjBC,KAAM9J,EAAK2G,YACXC,SAAU5G,EAAK4G,UAAQ,GAAAjB,OAAOO,GAAsB,0BACpDW,OAAQ7G,EAAK+J,UAAY,GACzBjD,YAAa9G,EAAK8G,YAClBkD,KAAMhK,EAAKgK,KACXhD,WAAYhH,EAAKgH,WACjBD,aAAcjH,EAAI4E,IAIdkG,EAAgB,CAAC,OAAQ,aAAc,WAAY,cAAe,WAGrEtC,GAAoBsC,EAAcX,MAAK,SAAAC,GAAK,OAC3ClK,EAAKkK,IACkB,kBAAhBlK,EAAKkK,IACZlK,EAAKkK,GAAOC,cAAcC,SAAS9B,EAAiB6B,cAAc,KAEnE9B,GAAiBuC,EAAcX,MAAK,SAAAC,GAAK,OACxClK,EAAKkK,IACkB,kBAAhBlK,EAAKkK,IACZlK,EAAKkK,GAAOC,cAAcC,SAAS/B,EAAcyB,KAAKK,cAAc,MAEpE9B,IAAkBC,IAEpBE,EAAgBxE,KAAK6F,EAEzB,CACF,IAEA1J,QAAQC,IAAI,uCAAwCoI,GACpDrI,QAAQC,IAAI,kBAAmBiI,GAC/BlI,QAAQC,IAAI,sBAAuBkI,GAAkBqC,EAAAN,OAAA,SAE9C7B,GAAe,QAE6C,OAF7CmC,EAAA1L,KAAA,GAAA0L,EAAAtK,GAAAsK,EAAA,SAEtBxK,QAAQG,MAAM,6CAA4CqK,EAAAtK,IAASsK,EAAAN,OAAA,SAC5D,IAAE,yBAAAM,EAAApK,OAAA,GAAAkK,EAAA,mBAEZ,gBAjD+BI,EAAAC,GAAA,OAAAN,EAAAhK,MAAA,KAAAC,UAAA,KAsDhC,OACEC,EAAAA,EAAAA,MAAA,OAAKgF,IAAKgD,EAAgB/H,UAAS,kBAAAgF,OAAoB/D,EAAS,sBAAwB,IAAKhB,SAAA,EAC3FC,EAAAA,EAAAA,KAAA,QAAMF,UAAS,sBAAAgF,OAAwB/D,EAAS,iCAAmC,IAAM,cAAY,OAAOd,QApJzF,WACrBmB,GAAmBD,GACnBE,GAAkBqG,GAClB1G,GACF,EAgJwIjB,UAClIC,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAKE,MAAO,CAAEM,WAAY,QAASxF,UACjLC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,0PAGzDV,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cAEL4H,EAAgB3I,KAAI,SAACgK,EAAYnI,GAAK,OACrChB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACAC,EAAAA,EAAAA,KAAA,UACEF,UAAS,iCAAAgF,OAAmCiD,GAAiBlH,IAAUgF,EAAY,kBAAoB,IACvGqE,aAAc,kBArLG,SAACrJ,GACxBiH,EAAajH,EACf,CAmL4BsJ,CAAiBtJ,EAAM,EAC3CuJ,aAAc/B,EACdpI,QAAS,kBAnLS,SAAC+I,EAAYnI,GACjCA,IAAUgF,IACZoC,EAAkBe,GAClBb,GAAkBD,GAClBF,GAAiB,GAErB,CA6KuBqC,CAAkBrB,EAAYnI,EAAM,EAACd,UAExDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,KAAA,OACEoF,IAAK4D,EAAWjD,SAChBT,IAAI,SACJxF,UAAU,sCAEZE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mCAAkCC,SAAEiJ,EAAWC,YAG/DD,EAAWhD,SACVhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAC,WAASiJ,EAAWhD,OAAOgB,KAAK,iBAOvEhH,EAAAA,EAAAA,KAACsK,EAAS,CACNzE,UAAWhF,IAAUgF,EACrBC,YAAakD,EAAWC,KACxBlD,SAAUiD,EAAWjD,SACrBC,OAAQgD,EAAWhD,OACnBC,YAAa+C,EAAW/C,YACxBkD,KAAMH,EAAWG,KACjBhD,WAAY6C,EAAW7C,WACvBD,aAAc8C,EAAW9C,aACzBtJ,gBAAiBA,EACjBwJ,QAASgC,MArCLvH,EAwCJ,MAId,ECrLQ0J,EAAa,SAAH7M,GAAkE,IAA5D8M,EAAQ9M,EAAR8M,SAAUC,EAAoB/M,EAApB+M,qBAAsBC,EAAoBhN,EAApBgN,qBAMpD,OACE7K,EAAAA,EAAAA,MAAA,SAAOC,UAAU,8BAA8B6K,QAASH,EAAS3G,GAAG9D,SAAA,CACjEyK,EAASI,KACV5K,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4CAA2CC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,MAAKC,SAAEyK,EAASvB,QAC9BjJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4BAA2BC,SAAEyK,EAASvE,oBAGxDpG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,SACEiH,KAAK,QACLnH,UAAU,6BACV+D,GAAI2G,EAAS3G,GACboF,KAAK,aACL4B,SApBkB,WACxBH,EAAqBF,GACrBC,GACF,KAmBMzK,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kCAAkC6K,QAASH,EAAS3G,UAI7E,EAEQiH,EAAa,CACf,CACAjH,GAAI,iBACJoF,KAAM,WACNhD,YAAa,wBACb2E,KACI5K,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAIhF,UACpJC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,oRAIzD,CACAmD,GAAI,cACJoF,KAAM,QACNhD,YAAa,8BACb2E,KACI/K,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAIhF,SAAA,EACpJC,EAAAA,EAAAA,KAAA,QAAMU,EAAE,4VACRV,EAAAA,EAAAA,KAAA,QAAMU,EAAE,2MAIZ,CACAmD,GAAI,eACJoF,KAAM,OACNhD,YAAa,6BACb2E,KACI/K,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAIhF,SAAA,EACpJC,EAAAA,EAAAA,KAAA,QAAMU,EAAE,uCACRV,EAAAA,EAAAA,KAAA,QAAMU,EAAE,uWAIZ,CACAmD,GAAI,iBACJoF,KAAM,SACNhD,YAAa,eACb2E,KACI/K,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAIhF,SAAA,EACpJC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,iVACrDV,EAAAA,EAAAA,KAAA,QAAMU,EAAE,2dAIZ,CACAmD,GAAI,eACJoF,KAAM,OACNhD,YAAa,2BACb2E,KACI5K,EAAAA,EAAAA,KAAA,OAAKE,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAIhF,UACpJC,EAAAA,EAAAA,KAAA,QAAMQ,cAAc,QAAQC,eAAe,QAAQC,EAAE,mlBAIzD,CACAmD,GAAI,kBACJoF,KAAM,UACNhD,YAAa,2BACb2E,KACI/K,EAAAA,EAAAA,MAAA,OAAKK,MAAM,6BAA6BI,MAAM,UAAUH,KAAK,OAAOC,QAAQ,YAAYC,YAAa,EAAGE,OAAO,eAAeyE,OAAO,KAAKD,MAAM,KAAIhF,SAAA,EACpJC,EAAAA,EAAAA,KAAA,QAAMU,EAAE,yKACRV,EAAAA,EAAAA,KAAA,QAAMU,EAAE,0dAMhB,EA9JgB,SAAH/D,GAAiE,IAA3DwE,EAAcxE,EAAdwE,eAAgBsJ,EAAoB9N,EAApB8N,qBAAsBM,EAAapO,EAAboO,cACrDC,GAAczJ,EAAAA,EAAAA,QAAO,MAC3BzE,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjD0K,EAAaxK,EAAA,GAAEiO,EAAgBjO,EAAA,GAEhC0N,EAAuB,SAACQ,GAC5BD,EAAiBC,GACjBH,EAAcG,GACdT,GACF,EAqBA,OAlBAjN,EAAAA,EAAAA,YAAU,WACR,IAAMuG,EAAqB,SAACC,GAC1B,IAAMmH,EAAe5G,SAAS6G,cAAc,eAE1CjK,GACA6J,EAAY/G,UACXkH,EAAajH,SAASF,EAAMG,SAG7BsG,GAEJ,EAEA,OADAlG,SAASC,iBAAiB,YAAaT,GAChC,WACLQ,SAASE,oBAAoB,YAAaV,EAC5C,CACF,GAAG,CAACiH,EAAaP,EAAsBtJ,KAGrCtB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MACEC,QAASwK,EACT3K,UAAS,kBAAAgF,OAAoB3D,EAAiB,mBAAqB,IAAKpB,SAEvEyH,EAAa,UAAA1C,OAAa0C,EAAcyB,MAAS,kBAEpDjJ,EAAAA,EAAAA,KAAA,QACEF,UAAS,oCAAAgF,OAAsC3D,EAAiB,gCAAkC,IAClG,cAAY,OACZlB,QAASwK,EAAqB1K,UAE9BC,EAAAA,EAAAA,KAAA,OAAK+E,MAAM,IAAIC,OAAO,KAAK5E,QAAQ,WAAUL,UAC3CC,EAAAA,EAAAA,KAAA,QAAMU,EAAE,sXAGZV,EAAAA,EAAAA,KAAA,OAAK6E,IAAKmG,EAAalL,UAAS,uBAAAgF,OAAyB3D,EAAiB,kBAAoB,IAAKpB,SAChG+K,GAAcA,EAAW9L,KAAI,SAACwL,GAAQ,OACrCxK,EAAAA,EAAAA,KAACuK,EAAU,CAETC,SAAUA,EACVC,qBAAsBA,EACtBC,qBAAsBA,GAHjBF,EAAS3G,GAId,QAOZ,E,UC0PA,EA5SsB,WACpB,IAAA/G,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC8D,EAAO5D,EAAA,GAAEqO,EAAUrO,EAAA,GAC1BI,GAA4CL,EAAAA,EAAAA,UAAS,QAAOM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDkO,EAAcjO,EAAA,GAAEkO,EAAiBlO,EAAA,GAClCmO,GAAcjK,EAAAA,EAAAA,QAAO,MAC3BC,GAAwCzE,EAAAA,EAAAA,UAAS,IAAG0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAA7CiK,EAAYhK,EAAA,GAAEiK,EAAejK,EAAA,GAEpCE,GAA4C5E,EAAAA,EAAAA,WAAS,GAAM6E,GAAA3E,EAAAA,EAAAA,GAAA0E,EAAA,GAApDR,EAAcS,EAAA,GAAER,EAAiBQ,EAAA,GACxCE,GAA0C/E,EAAAA,EAAAA,WAAS,GAAMgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAAlD6J,EAAa5J,EAAA,GAAE6J,EAAgB7J,EAAA,GACtCC,GAA0CjF,EAAAA,EAAAA,WAAS,GAAMkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAAlD6J,EAAa5J,EAAA,GAAE6J,EAAgB7J,EAAA,GAChC8J,GAAmBxK,EAAAA,EAAAA,QAAO,MAChC6B,GAA8CrG,EAAAA,EAAAA,WAAS,GAAMsG,GAAApG,EAAAA,EAAAA,GAAAmG,EAAA,GAAtD4I,EAAe3I,EAAA,GAAE4I,EAAkB5I,EAAA,GAC1C6I,GAA4BnP,EAAAA,EAAAA,WAAS,GAAMoP,GAAAlP,EAAAA,EAAAA,GAAAiP,EAAA,GAApCnL,EAAMoL,EAAA,GACbC,GADwBD,EAAA,IACsBpP,EAAAA,EAAAA,UAAS,OAAKsP,GAAApP,EAAAA,EAAAA,GAAAmP,EAAA,GAArDxP,EAAeyP,EAAA,GAAExK,EAAkBwK,EAAA,GAC1CC,GAA0CvP,EAAAA,EAAAA,UAAS,MAAKwP,GAAAtP,EAAAA,EAAAA,GAAAqP,EAAA,GAAjD9E,EAAa+E,EAAA,GAAEtB,GAAgBsB,EAAA,GAGhCC,GAAa,eAAA7P,GAAAgB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO2F,EAASgJ,GAAY,IAAA1O,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGgE,OAFhHiB,QAAQC,IAAI,iCAAkCkE,EAAS,oBAAqBgJ,GAActO,EAAAC,KAAA,EAElFL,GAAwBO,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,QAASkF,EAAS,cAAegJ,EAAc,YAAWtO,EAAAE,KAAA,GAC/EM,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAMb,GAAuBc,EAAAA,EAAAA,IAAQ,gBAAgB,KAAD,EAArFb,EAAgBG,EAAAW,KAChBb,EAAeD,EAAiBe,KAAKC,KAAI,SAACC,GAC9C,IAAAC,EAA6BD,EAAIE,OAAzBC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SAChB,MAAO,CACL,CAAEqN,MAAM1M,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAAAf,SAAEX,IAAyBoE,KAAM,QACvD,CAAEkJ,MAAM1M,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAAAf,SAAEV,IAA2BmE,KAAM,MAAOmJ,UAAU,GAE9E,IAAGC,OACHlB,EAAgBzN,GAChBqB,QAAQC,IAAI,qCAAsCkN,GAActO,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,SAEhEmB,QAAQG,MAAM,0CAAyCtB,EAAAqB,IAAS,yBAAArB,EAAAuB,OAAA,GAAA5B,EAAA,mBAEnE,gBAjBkB2L,EAAAC,GAAA,OAAA/M,EAAAgD,MAAA,KAAAC,UAAA,KAoBbiN,GAAkB,eAAAnP,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8K,EAAO8D,GAAY,OAAA7O,EAAAA,EAAAA,KAAAM,MAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAKa,OAJzDiB,QAAQC,IAAI,mBAAoBkN,GAChC5K,EAAmB4K,GAGnB9H,eAAemI,QAAQ,mBAAoBL,GAAc1D,EAAA1K,KAAA,EAEnDmO,GAAchO,EAAAA,GAAKC,YAAYC,IAAK+N,GAAc,KAAD,mBAAA1D,EAAArJ,OAAA,GAAAiJ,EAAA,KACxD,gBARuBqB,GAAA,OAAAtM,EAAAiC,MAAA,KAAAC,UAAA,KAUlBmN,GAAiB,eAAArE,GAAA/K,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmP,IAAA,IAAAtO,EAAAuO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxP,EAAAkF,EAAAuK,EAAA/G,EAAA,OAAA7I,EAAAA,EAAAA,KAAAM,MAAA,SAAAuP,GAAA,cAAAA,EAAArP,KAAAqP,EAAApP,MAAA,OAEC,GADzBiB,QAAQC,IAAI,oCAAqC3C,GACjDqP,GAAmB,GAEI,KAAnBrL,EAAQ8M,OAAa,CAAAD,EAAApP,KAAA,SAIc,GAH/BK,EAAMF,EAAAA,GAAKC,YAAYC,IAAG+O,EAAArP,KAAA,EAG1B6O,EAAerQ,EAED,CAAD6Q,EAAApP,KAAA,SAOiD,OAN1D6O,GAAQS,EAAAA,EAAAA,GAAI/M,GAASsM,QACrBC,EAAgBD,EAAMU,QAAQC,IAAI,SAASC,QAAO,SAAAC,GAAI,MAAa,YAATA,CAAkB,IAC5EX,EAAQF,EAAME,QAAQS,IAAI,SAEhCZ,EAAe,GAAAnI,QAAAkJ,EAAAA,EAAAA,GAAIb,IAAaa,EAAAA,EAAAA,GAAKZ,IAAOpG,KAAK,KAEjD1H,QAAQC,IAAI,mCAAmC,SAADuF,OAAWpG,IAAO+O,EAAApP,KAAA,IAC1D4P,EAAAA,EAAAA,KAAOhP,EAAAA,EAAAA,IAAIiP,EAAAA,GAAG,SAADpJ,OAAWpG,IAAQ,CAAC,GAAG,KAAD,GAGsB,OADzD6O,GAAatO,EAAAA,EAAAA,IAAIiP,EAAAA,GAAG,SAADpJ,OAAWpG,EAAG,iBAAAoG,OAAgBmI,IACvD3N,QAAQC,IAAI,iCAAkCgO,EAAWY,MAAMV,EAAApP,KAAA,IAC7B+P,EAAAA,EAAAA,IAAOb,GAAY,KAAD,GAA3B,GAAAE,EAAA3O,KAEAuP,SAAS,CAADZ,EAAApP,KAAA,SAEM,OADrCiB,QAAQC,IAAI,uCAAwCgO,EAAWY,MACzDlL,GAAYqL,EAAAA,EAAAA,MAAmBb,EAAApP,KAAA,IAC/B4P,EAAAA,EAAAA,IAAOV,EAAY,CAAEtK,UAAAA,IAAa,KAAD,GAGzCpB,EAAmBoL,GACnBtI,eAAemI,QAAQ,sBAAuBG,GAAc,QAKzB,OAF/BM,GAAatO,EAAAA,EAAAA,IAAIiP,EAAAA,GAAG,SAADpJ,OAAWpG,EAAG,iBAAAoG,OAAgBmI,IACjDlP,GAAwBO,EAAAA,EAAAA,IAAWiP,EAAY,YAC/CtK,GAAYqL,EAAAA,EAAAA,MAAmBb,EAAApP,KAAA,IACNkQ,EAAAA,EAAAA,IAAOxQ,EAAuB,CAAEqB,OAAQwB,EAASqC,UAAAA,IAAa,KAAD,GAAtFuK,EAAgBC,EAAA3O,KAEtBQ,QAAQC,IAAI,+BAAgCgO,EAAWY,MAEvD9C,EAAW,IACXmD,KACA9C,GAAgB,SAAC+C,GAAgB,SAAA3J,QAAAkJ,EAAAA,EAAAA,GAC5BS,GAAgB,CACnB,CAAE/B,KAAM9L,EAAS4C,KAAM,QACvB,CAAEkJ,KAAM,GAAIlJ,KAAM,MAAOmJ,UAAU,IAAM,IAGrClG,GAAciI,EAAAA,EAAAA,IAAWlB,EAAgB,eAAA7D,GAAAhM,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA+L,EAAO+E,GAAW,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApR,EAAAA,EAAAA,KAAAM,MAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OACb,KAA9CwQ,EAAmC,QAArBD,EAAGD,EAAYxP,cAAM,IAAAyP,OAAA,EAAlBA,EAAoBvP,UACxB,CAAD4P,EAAA5Q,KAAA,SAClBoI,IAC2B,GACD,GACpBqI,EAAuBD,EAAcE,GAAAnR,EAAAA,EAAAA,KAAAC,MAAA,SAAAkR,EAAAC,GAAA,IAAAE,EAAC,OAADtR,EAAAA,EAAAA,KAAAM,MAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,OAEyC,OAA5E6Q,EAAqBC,KAAKC,IAAI,EAJX,GACD,GAGoCJ,GAAsBlF,EAAAzL,KAAA,EAC5E,IAAIgR,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAASJ,EAAmB,IAAE,KAAD,EACvExD,GAAgB,SAAC+C,GAAgB,SAAA3J,QAAAkJ,EAAAA,EAAAA,GAC5BS,EAAiBe,MAAM,GAAI,IAAE,CAChC,CACE9C,MAAM1M,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAAAf,SAAE+O,EAAqBU,MAAM,EAAGR,EAAI,KACxDxL,KAAM,QACP,IACA,wBAAAsG,EAAApK,OAAA,GAAAqP,EAAA,IATIC,EAAI,EAAE,KAAD,OAAEA,EAAIF,EAAqBtJ,QAAM,CAAAyJ,EAAA5Q,KAAA,gBAAA4Q,EAAAQ,cAAAV,EAAAC,GAAA,iBAAEA,IAAGC,EAAA5Q,KAAA,gBAWpD4N,GAAmB,GACf5H,OAAOC,WAAa,KAAOkH,EAAYvH,SACzCuH,EAAYvH,QAAQyL,OACrB,yBAAAT,EAAAvP,OAAA,GAAAkK,EAAA,KAEJ,gBAAAK,GAAA,OAAAN,EAAAhK,MAAA,KAAAC,UAAE,CAAF,CAvBgD,IAwBjDiC,EAAmB,MAAM4L,EAAApP,KAAA,iBAAAoP,EAAArP,KAAA,GAAAqP,EAAAjO,GAAAiO,EAAA,SAEzBnO,QAAQG,MAAM,sCAAqCgO,EAAAjO,IAAS,yBAAAiO,EAAA/N,OAAA,GAAAsN,EAAA,mBAGjE,kBA9EwB,OAAAtE,EAAA/I,MAAA,KAAAC,UAAA,KAkFvByE,OAAOG,iBAAiB,gBAAgB,WACxCG,eAAegL,WAAW,sBAC1B,KAEAnS,EAAAA,EAAAA,YAAU,WACR,IAAMoS,EAAqB,eAAAC,GAAAlS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiS,IAAA,OAAAlS,EAAAA,EAAAA,KAAAM,MAAA,SAAA6R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,OAC5B,IACMG,EAAAA,GAAKC,YACkBkG,eAAeC,QAAQ,qBAI9CtF,QAAQC,IAAI,gCAGdD,QAAQC,IAAI,yBAEhB,CAAE,MAAOE,GACPH,QAAQG,MAAM,qCAAsCA,EACtD,CAAC,wBAAAsQ,EAAArQ,OAAA,GAAAoQ,EAAA,KACF,kBAf0B,OAAAD,EAAAlQ,MAAA,KAAAC,UAAA,KAiB3BgQ,IACI7O,GACFwC,eAEJ,GAAG,CAACxC,IAKJ,IAoBMyN,GAAuB,WAC3B,IAAMwB,EAAWxE,EAAYvH,QAC7B,GAAI+L,EAAU,CACZA,EAAS/K,MAAMD,OAAS,OACxB,IAAMiL,EAAYd,KAAKe,IAAIF,EAASG,aAlLd,KAmLtBH,EAAS/K,MAAMD,OAAM,GAAAF,OAAMmL,EAAS,KACtC,CACF,GAOAzS,EAAAA,EAAAA,YAAU,WACRgR,KACA,IAAM4B,EAAgB,SAACpM,GACH,UAAdA,EAAM4C,KAAoB5C,EAAMqM,WAClCrM,EAAMsM,iBACNvD,KAEJ,EAEMwD,EAAkB/E,EAAYvH,QAIpC,OAHIsM,GACFA,EAAgB/L,iBAAiB,UAAW4L,GAEvC,WACDG,GACFA,EAAgB9L,oBAAoB,UAAW2L,EAEnD,CACF,GAAG,CAAC3E,KAEJjO,EAAAA,EAAAA,YAAU,WACQ,KAAZoD,GACF2K,EAAkB,OAEtB,GAAG,CAAC3K,KAEJpD,EAAAA,EAAAA,YAAU,WACJuO,EAAiB9H,UACnB8H,EAAiB9H,QAAQuM,UAAYzE,EAAiB9H,QAAQkM,aAElE,GAAG,CAAC1E,IAOJ,OACE5L,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EACxCC,EAAAA,EAAAA,KAACyQ,EAAW,CAAC1P,OAAQ4K,EAAe3K,WApEZ,WACpB4K,GAAkBD,GAClBG,GAAiB,EACnB,EAiE6D7K,eAAgB4L,GAAoB3L,kBAPvE,WACxBwK,EAAgB,GAClB,KAMF7L,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC7BC,EAAAA,EAAAA,KAAC0Q,EAAW,CAACvP,eAAgBA,EAAgBsJ,qBA9Cd,WAC3BnL,QAAQC,IAAI,oBACZ6B,GAAmBD,EACrB,EA2CuF4J,cA3E1D,SAACG,GAC5BD,GAAiBC,GACjB5L,QAAQC,IAAI,kBAAmB2L,EACjC,KA0EArL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA6B+E,IAAKkH,EAAiBhM,SACjE0L,EAAazM,KAAI,SAAC2R,EAAa9P,GAAK,OACrChB,EAAAA,EAAAA,MAAA,OAAiBC,UAAS,mBAAAgF,OAA0C,SAArB6L,EAAYnN,KAAkB,gBAAkB,OAAQzD,SAAA,CAC/E,QAArB4Q,EAAYnN,OACX3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAAA,OACEF,UAAU,aACVsF,IAAG,GAAAN,OAAKO,GAAsB,yBAC9BC,IAAI,eAGRzF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAC,YACzB4Q,EAAYhE,UACX3M,EAAAA,EAAAA,KAACW,EAAAA,EAAa,KAEdX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAE4Q,EAAYjE,aAK1B,QAArBiE,EAAYnN,OAAkBxD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAE4Q,EAAYjE,SApB/D7L,EAqBJ,OAIFb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,YACN4Q,MAAOhQ,EACPiK,SA9F4B,SAACgG,GAC3BxF,EAAWwF,EAAE1M,OAAOyM,OACpBpC,IACF,EA4FA1O,UAAU,2BACVmF,MAAO,CAAED,OAAQsG,GACjBzG,IAAK2G,EACLsF,YAAY,oBACZC,aAAa,MACbC,UAAU,OACVC,UAAW,SAACJ,GACI,UAAVA,EAAEjK,KAAoBiK,EAAER,WAC1BQ,EAAEP,iBACFvD,KAEJ,EACAmE,SAAUlF,KAEFhM,EAAAA,EAAAA,KAAA,UACA,aAAW,eACXF,UAAU,yBACVoR,SAAUlF,EACpB/L,QAAS,kBAAM8M,GAAkBnQ,EAAgB,EAACmD,UAExCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qCAMfE,EAAAA,EAAAA,KAACmR,EAAW,CAACpQ,OAAQ8K,EAAe7K,WA9HpB,WACpB8K,GAAkBD,GAClBD,GAAiB,EACnB,EA2HqEpE,cAAeA,EAAe5K,gBAAiBA,MAGtH,C","sources":["ChatBot/sharechat.js","ChatBot/ChatHistory.js","ChatBot/ExpertBox.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase'; // Import auth from firebase\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nconst ShareChat = ({ selectedSession, closeShareChat }) => {\n  const [sharedChatData, setSharedChatData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSharedChatData = async () => {\n      try {\n        if (selectedSession) {\n          const messagesCollectionRef = collection(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession, 'messages');\n          const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n          const messagesData = messagesSnapshot.docs.map((doc) => {\n            const { prompt, response } = doc.data();\n            return { prompt, response };\n          });\n          setSharedChatData(messagesData);\n          setIsLoading(false); // Set loading to false when data is fetched\n          console.log('Fetched messages for discussionId:', selectedSession, messagesData);\n        }\n      } catch (error) {\n        console.error('Error fetching shared chat messages:', error);\n        setIsLoading(false); // Set loading to false on error\n      }\n    };\n\n    fetchSharedChatData();\n  }, [selectedSession]);\n\n  return (\n    <div className=\"white-box-chathistory\">\n      <div className=\"go-back-svg go-back-svg-padding\">\n        <button onClick={closeShareChat}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <h2>Share link to Chat</h2>\n      <div className='divider '></div>\n      <p>\n        Messages you send after creating your link won't be shared. Anyone with the URL will be able to view the shared chat.\n      </p>\n      <div className=\"shared-chat scroll-cat\">\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          sharedChatData.map((message, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>\n                <ReactMarkdown>{message.prompt}</ReactMarkdown>\n\n              </strong>\n              <ReactMarkdown>{message.response}</ReactMarkdown>\n              <div className='divider '></div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ShareChat;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, collection, query, orderBy, getDocs } from 'firebase/firestore';\nimport ShareChat from './sharechat';\n\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick, resetChatMessages }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [isShareChatOpen, setIsShareChatOpen] = useState(false);\n\n  const groupSessionsByDate = (sessions) => {\n    const today = new Date().setHours(0, 0, 0, 0);\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    yesterday.setHours(0, 0, 0, 0);\n\n    const groupedSessions = {\n      today: [],\n      yesterday: [],\n      previously: [],\n    };\n\n    sessions.forEach((session) => {\n      const sessionDate = new Date(session.timestamp.seconds * 1000).setHours(0, 0, 0, 0);\n\n      if (sessionDate === today) {\n        groupedSessions.today.push(session);\n      } else if (sessionDate === yesterday) {\n        groupedSessions.yesterday.push(session);\n      } else {\n        groupedSessions.previously.push(session);\n      }\n    });\n\n    return groupedSessions;\n  };\n\n  const [groupedSessions, setGroupedSessions] = useState({\n    today: [],\n    yesterday: [],\n    previously: [],\n  });\n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n  \n        const q = query(\n          collection(firestore, 'users', userUid, 'discussions'),\n          orderBy('timestamp', 'desc')\n        );\n  \n        const snapshot = await getDocs(q);\n        const sessionData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          timestamp: doc.data().timestamp, // Include timestamp in the session data\n        }));\n        setSessions(sessionData);\n  \n        // Update the groupedSessions state\n        setGroupedSessions(groupSessionsByDate(sessionData));\n  \n        console.log('Fetched sessions:', sessionData);\n      } else {\n        console.error('User not authenticated');\n      }\n    } catch (error) {\n      console.error('Error fetching sessions from Firestore:', error);\n    }\n  };\n\n  const startNewChat = () => {\n    setSelectedSession(null);\n    resetChatMessages();\n    console.log('Discussion set to undefined');\n  };\n\n  \n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen);\n\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatHistoryRef.current && !chatHistoryRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n    if (lastDiscussionId) {\n      setSelectedSession(lastDiscussionId);\n    }\n  }, []); \n\n  const closeShareChat = () => {\n    setIsShareChatOpen(false);\n  };\n\n\n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isDropdownOpen && (\n        <div className='chatbot-previous'>\n          <div style={{ display: 'flex' }}>\n            <button\n              className=\"chat-history-btn\"\n              onClick={() => {\n                startNewChat();\n                if (window.innerWidth <= 768) {\n                  toggleDropdown();\n                }\n              }}\n            >\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n                <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n              </div>\n              <div className='ms-auto'>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                </svg>\n              </div>\n            </button>\n          </div>\n          <p className=\"text-sm text-muted mt-3\">Today:</p>\n          {groupedSessions.today.length > 0 && (\n            <ul className=\"fade-ulist no-scroll\">\n            {groupedSessions.today.map((session) => (\n              <li\n                className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n                key={session.id}\n                onClick={() => {\n                  setSelectedSession(session.id);\n                  onSessionClick(session.id);\n                  if (window.innerWidth <= 768) {\n                    toggleDropdown();\n                  }\n                }}\n              >\n                {session.id}\n                <div className=\"svg-chathistory-container\">\n<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"24\"\nheight=\"24\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"white\"\nstrokeWidth=\"2\"\nstrokeLinecap=\"round\"\nstrokeLinejoin=\"round\"\nonClick={() => {\nsetIsShareChatOpen(true);\n}}\n>\n<circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n              </li>\n              \n            ))}\n          </ul>\n          )}\n\n<p className=\"text-sm text-muted mt-3\">{groupedSessions.yesterday.length > 0 && 'Yesterday:'}</p>\n{groupedSessions.yesterday.length > 0 && (\n  <ul className=\"fade-ulist no-scroll\">\n             {groupedSessions.today.map((session) => (\n               <li\n                 className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n                 key={session.id}\n                 onClick={() => {\n                   setSelectedSession(session.id);\n                   onSessionClick(session.id);\n                   if (window.innerWidth <= 768) {\n                     toggleDropdown();\n                   }\n                 }}\n               >\n                 {session.id}\n                 <div className=\"svg-chathistory-container\">\n <svg\n xmlns=\"http://www.w3.org/2000/svg\"\n width=\"24\"\n height=\"24\"\n viewBox=\"0 0 24 24\"\n fill=\"none\"\n stroke=\"white\"\n strokeWidth=\"2\"\n strokeLinecap=\"round\"\n strokeLinejoin=\"round\"\n onClick={() => {\n setIsShareChatOpen(true);\n }}\n >\n <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n </svg>\n \n <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n </svg>\n </div>\n \n               </li>\n               \n             ))}\n           </ul>\n          )}\n\n<p className=\"text-sm text-muted mt-3\">{groupedSessions.previously.length > 0 && 'Previously:'}</p>\n{groupedSessions.previously.length > 0 && (\n  <ul className=\"fade-ulist no-scroll\">\n           {groupedSessions.today.map((session) => (\n             <li\n               className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n               key={session.id}\n               onClick={() => {\n                 setSelectedSession(session.id);\n                 onSessionClick(session.id);\n                 if (window.innerWidth <= 768) {\n                   toggleDropdown();\n                 }\n               }}\n             >\n               {session.id}\n               <div className=\"svg-chathistory-container\">\n<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"24\"\nheight=\"24\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"white\"\nstrokeWidth=\"2\"\nstrokeLinecap=\"round\"\nstrokeLinejoin=\"round\"\nonClick={() => {\nsetIsShareChatOpen(true);\n}}\n>\n<circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n             </li>\n             \n           ))}\n         </ul>\n          )}\n        </div>\n      )}\n{isShareChatOpen && (\n  <ShareChat selectedSession={selectedSession} closeShareChat={closeShareChat} />\n)}  \n\n\n    </div>\n  );\n};\n\nexport default ChatHistory;","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth } from '../firebase';  // Import auth from firebase\n\nconst ExpertBox = ({ isHovered, displayName, photoURL, skills, description, otherUserUID, occupation, onClose, selectedSession }) => {\n  const navigate = useNavigate();\n\n  const [currentAuthUID, setCurrentAuthUID] = useState(null);\n\n  useEffect(() => {\n    console.log('Selected Session in ExpertBox:', selectedSession);\n\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentAuthUID(user.uid);\n        console.log('Current Auth UID in ExpertBox:', user.uid);\n      } else {\n        console.error('User is not authenticated in ExpertBox');\n        setCurrentAuthUID(null);\n      }\n    });\n\n    return () => {\n      // Unsubscribe from the onAuthStateChanged listener when the component unmounts\n      unsubscribe();\n    };\n  }, [selectedSession]);\n\n  const handleEscapeKey = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isHovered) {\n      document.addEventListener('keydown', handleEscapeKey);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [isHovered]);\n\n  const handleChatButtonClick = () => {\n    try {\n      if (!otherUserUID) {\n        throw new Error('otherUserUID is undefined or null');\n      }\n      navigate('/chat', {\n        state: {\n          otherUserUID,\n          selectedSession,\n          currentAuthUID,\n        },\n      });\n    } catch (error) {\n      console.error('Error handling chat button click:', error.message);\n    }\n  };\n  return (\n    isHovered && (\n      \n<div className=\"white-box\" >\n        <div className=\"go-back-svg go-back-svg-padding\">\n    <button onClick={onClose}>                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n\n          <h5 className=\"card-title\"> {displayName}</h5>\n  \n          <h5 className=\"card-title\">Expertise: {occupation}</h5>\n          \n  <div href={photoURL} className=\"d-md-inline\">\n    <img\n      src={photoURL}\n      alt=\"Profile Photo\"\n      className=\"searchimage card-img user-avatar large-avatar rounded-circle mb-2 mx-md-auto mx-0 \" \n    />\n  </div>\n  \n\n          <div className=\"about-container\">\n          <h5 className=\"card-title\"   style={{ display: 'inline' }}>About: </h5> \n<p style={{ display: 'inline' }}>{description}</p>\n</div>\n         \n\n          <div style={{ marginBottom: '0.4rem', marginTop: '0.4rem' }}>\n     \n          <p className=\"font-weight-bold mb-0\">Skills: {skills.join(', ')}</p>\n  {skills && skills.map((skills) => (\n    <button\n      key={skills}\n      type=\"button\"\n      className=\" containerhover keyword-container mb-2 mx-1 pb-1\"\n    >\n      {skills}\n    </button>\n  ))}\n\n</div>\n\n        <div>\n       \n        </div>\n        <div className=\"d-flex justify-content-center\">\n        <Link to=\"/chat\" state={{ otherUserUID, selectedSession }} onClick={handleChatButtonClick}>\n\n            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"me-2\">Message</span> \n            </button>\n            </Link>\n            <button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n              </svg>\n             <span className=\"me-2\">Connect</span> \n           </button>\n           \n        \n          </div>\n      </div>\n\n\n\n   \n    )\n  );\n};\n\nexport default ExpertBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, query, where, getDocs } from \"../firebase\"; \nimport ExpertBox from './ExpertBox'\n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic, firstUserMessage, selectedSession }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [showExpertBox, setShowExpertBox] = useState(false);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n\n  const handleExpertBoxClose = () => {\n    setShowExpertBox(false);\n    setButtonClicked(false); // Reset buttonClicked state\n    setIsHovered(null);\n  };\n\n  const handleMouseEnter = (index) => {\n    setIsHovered(index);\n  };\n\n  const handleButtonClick = (expertInfo, index) => {\n    if (index === isHovered) {\n      setSelectedExpert(expertInfo);\n      setButtonClicked(!buttonClicked); // Toggle buttonClicked state\n      setShowExpertBox(true); // Always show ExpertBox on button click\n    }\n  };\n\n\n  const handleMouseLeave = () => {\n    if (!buttonClicked && !showExpertBox) {\n      setShowExpertBox(false);\n      setIsHovered(null);\n    }\n  };\n\n  \n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen(); // Toggle ChatExperts\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          let experts;\n  \n          if (selectedTopic) {\n            console.log(\"Fetching experts for selected topic:\", selectedTopic);\n            experts = await getMatchingExpertsForTopic(selectedTopic, firstUserMessage);\n          } else if (firstUserMessage) {\n            console.log(\"Fetching experts for firstUserMessage:\", firstUserMessage);\n            experts = await getMatchingExperts(null, firstUserMessage);\n          }\n  \n          console.log(\"Matching experts:\", experts);\n  \n          setMatchingExperts(experts || []);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        }\n      }\n    };\n  \n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic, firstUserMessage]);\n  \n\n  const getMatchingExperts = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n\n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n\n          if (\n            (!firstUserMessage || fieldsToCheck.some(field => data[field] && typeof data[field] === 'string' && data[field].toLowerCase().includes(firstUserMessage.toLowerCase()))) &&\n            (!selectedTopic || expertInfo.skills.includes(selectedTopic.id))\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n\n      console.log(\"Matching experts:\", matchingExperts);\n\n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts:\", error);\n      return [];\n    }\n  };\n\n  const getMatchingExpertsForTopic = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n  \n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n  \n          // Check if there is a match in any of the specified fields or if there is no selected topic\n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n  \n          if (\n            (firstUserMessage && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(firstUserMessage.toLowerCase())\n            )) ||\n            (selectedTopic && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(selectedTopic.name.toLowerCase())\n            )) ||\n            (!selectedTopic && !firstUserMessage) // Include expert if no selected topic or firstUserMessage\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n  \n      console.log(\"Matching experts for selected topic:\", matchingExperts);\n      console.log(\"Selected Topic:\", selectedTopic);\n      console.log(\"First User Message:\", firstUserMessage);\n  \n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected topic:\", error);\n      return [];\n    }\n  };\n  \n  \n  \n  \n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      <div>\n        <h4>Experts</h4>\n      </div>\n      {matchingExperts.map((expertInfo, index) => (\n        <div key={index}>\n        <button\n          className={`chat-btn expert-btn text-left ${showExpertBox && index === isHovered ? 'open-expert-box' : ''}`}\n          onMouseEnter={() => handleMouseEnter(index)}\n          onMouseLeave={handleMouseLeave}\n          onClick={() => handleButtonClick(expertInfo, index)}\n        >\n      <div className='d-flex flex-column'>\n        <div className='d-flex align-items-center justify-content-between'>\n          <img\n            src={expertInfo.photoURL}\n            alt=\"Avatar\"\n            className=\"very-small-avatar rounded-circle\"\n          />\n          <div className=\"ml-2\">\n            <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n          </div>\n        </div>\n        {expertInfo.skills && (\n          <div className=\"text-start mt-2\">\n            <p className=\"font-weight-bold mb-0\">Skills: {expertInfo.skills.join(', ')}</p>\n          </div>\n        )}\n      </div>\n      {/* Render the ExpertBox component with isHovered prop */}\n \n          </button>\n          <ExpertBox\n              isHovered={index === isHovered}\n              displayName={expertInfo.name}\n              photoURL={expertInfo.photoURL}\n              skills={expertInfo.skills}\n              description={expertInfo.description}\n              city={expertInfo.city}\n              occupation={expertInfo.occupation}\n              otherUserUID={expertInfo.otherUserUID}\n              selectedSession={selectedSession} \n              onClose={handleExpertBoxClose} // Pass the onClose callback\n            \n            />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatExperts;","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ isDropdownOpen, handleDropdownToggle, onSelectTopic }) => {\n  const dropdownRef = useRef(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    onSelectTopic(topic);\n    handleDropdownToggle();\n  };\n  \n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const pickModelDiv = document.querySelector('.pick-model');\n      if (\n        isDropdownOpen &&\n        dropdownRef.current &&\n        !pickModelDiv.contains(event.target)\n      ) {\n        // Clicked outside the entire pick-model, close the dropdown\n        handleDropdownToggle();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, handleDropdownToggle, isDropdownOpen]);\n  \n  return (\n    <div className=\"pick-model\">\n      <h4\n        onClick={handleDropdownToggle}\n        className={`pointer-cursor ${isDropdownOpen ? 'h4-dropdown-open' : ''}`}\n      >\n        {selectedTopic ? `Topic: ${selectedTopic.name}` : 'Pick a Topic'}\n      </h4>\n      <span\n        className={`svg-chatbot-model pointer-cursor ${isDropdownOpen ? 'svg-chatbot-model-rotate-icon' : ''}`}\n        aria-hidden=\"true\"\n        onClick={handleDropdownToggle}\n      >\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      <div ref={dropdownRef} className={`chat-dropdown-model ${isDropdownOpen ? 'show scroll-cat' : ''}`}>\n        {categories && categories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleDropdownToggle={handleDropdownToggle}\n            handleTopicSelection={handleTopicSelection}\n          />\n        ))}\n      </div>\n    </div>\n  );\n  \n  \n};\n  \n  const TopicLabel = ({ category, handleDropdownToggle, handleTopicSelection }) => {\n    const handleRadioChange = () => {\n      handleTopicSelection(category);\n      handleDropdownToggle();\n    };\n  \n    return (\n      <label className=\"chat-dropdown-model-button \" htmlFor={category.id}>\n        {category.svg} \n        <div className=\"d-flex align-items-center\">\n          <div className=\"d-flex flex-column align-items-start ps-3\">\n            <h5 className=\"m-0\">{category.name}</h5>\n            <h6 className=\"text-muted text-start m-0\">{category.description}</h6>\n          </div>\n        </div>\n        <div className=\"flex-grow-1 d-flex justify-content-end\">\n          <input\n            type=\"radio\"\n            className=\"form-check-input listboxes\"\n            id={category.id}\n            name=\"jobSuccess\"\n            onChange={handleRadioChange}\n          />\n          <label className=\"form-check-label label-with-svg\" htmlFor={category.id}></label>\n        </div>\n      </label>\n    );\n  };\n  \n    const categories = [\n        {\n        id: 'computerOption',\n        name: 'Computer',\n        description: 'All your IT solutions',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'sportOption',\n        name: 'Sport',\n        description: \"Let Tio help you become fit\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M9.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M6.44 3.752A.75.75 0 0 1 7 3.5h1.445c.742 0 1.32.643 1.243 1.38l-.43 4.083a1.8 1.8 0 0 1-.088.395l-.318.906.213.242a.8.8 0 0 1 .114.175l2 4.25a.75.75 0 1 1-1.357.638l-1.956-4.154-1.68-1.921A.75.75 0 0 1 6 8.96l.138-2.613-.435.489-.464 2.786a.75.75 0 1 1-1.48-.246l.5-3a.75.75 0 0 1 .18-.375l2-2.25Z\"/>\n            <path d=\"M6.25 11.745v-1.418l1.204 1.375.261.524a.8.8 0 0 1-.12.231l-2.5 3.25a.75.75 0 1 1-1.19-.914zm4.22-4.215-.494-.494.205-1.843.006-.067 1.124 1.124h1.44a.75.75 0 0 1 0 1.5H11a.75.75 0 0 1-.531-.22Z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'foodCategory',\n        name: 'Food',\n        description: 'Ready to become head-chef?',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"/>\n            <path d=\"M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'healthCategory',\n        name: 'Health',\n        description: 'Here to help',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.121 1.879a3 3 0 0 0-4.242 0L8.733 3.026l4.261 4.26 1.127-1.165a3 3 0 0 0 0-4.242M12.293 8 8.027 3.734 3.738 8.031 8 12.293zm-5.006 4.994L3.03 8.737 1.879 9.88a3 3 0 0 0 4.241 4.24l.006-.006 1.16-1.121ZM2.679 7.676l6.492-6.504a4 4 0 0 1 5.66 5.653l-1.477 1.529-5.006 5.006-1.523 1.472a4 4 0 0 1-5.653-5.66l.001-.002 1.505-1.492z\"/>\n            <path d=\"M5.56 7.646a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707Zm1.415-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707M8.39 4.818a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707Zm0 5.657a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707ZM9.803 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707Zm1.414-1.414a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707ZM6.975 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707ZM8.39 7.646a.5.5 0 1 1-.708.708.5.5 0 0 1 .707-.708Zm1.413-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'workCategory',\n        name: 'Work',\n        description: 'New Job or career advice',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'hobbiesCategory',\n        name: 'Hobbies',\n        description: \"Discover what's possible\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3\"/>\n            <path d=\"M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8m-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7\"/>\n            </svg>\n        ),\n        },\n    ];\n    \n    export default TopicPicker;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy, serverTimestamp } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\nimport nlp from 'compromise/three';\n\n\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('52px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n  \n\n  const fetchMessages = async (userUid, discussionId) => {\n    console.log('Fetching messages for userUid:', userUid, 'and discussionId:', discussionId);\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: <ReactMarkdown>{prompt}</ReactMarkdown>, user: 'user' },\n          { text: <ReactMarkdown>{response}</ReactMarkdown>, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n      console.log('Fetched messages for discussionId:', discussionId);\n    } catch (error) {\n      console.error('Error fetching messages from Firestore:', error);\n    }\n  };\n  \n  \n  const handleSessionClick = async (discussionId) => {\n    console.log('Clicked session:', discussionId);\n    setSelectedSession(discussionId);\n  \n    // Store the selected session in sessionStorage\n    sessionStorage.setItem('lastDiscussionId', discussionId);\n  \n    await fetchMessages(auth.currentUser.uid, discussionId);\n  };\n  \n  const handleSendMessage = async () => {\n    console.log('Sending message for discussionId:', selectedSession);\n    setIsBotResponding(true);\n    \n    if (message.trim() !== '') {\n      const uid = auth.currentUser.uid;\n      \n      try {\n        let sessionToUse = selectedSession;\n        \n        if (!sessionToUse) {\n          const terms = nlp(message).terms();\n          const filteredNouns = terms.nouns().out('array').filter(term => term !== 'pronoun');\n          const verbs = terms.verbs().out('array');\n  \n          sessionToUse = [...filteredNouns, ...verbs].join(' ');\n  \n          console.log('Creating/Updating user document:', `users/${uid}`);\n          await setDoc(doc(db, `users/${uid}`), {});\n  \n          const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n          console.log('Checking if discussion exists:', userDocRef.path);\n          const discussionsSnapshot = await getDoc(userDocRef);\n  \n          if (!discussionsSnapshot.exists()) {\n            console.log('Discussion does not exist, creating:', userDocRef.path);\n            const timestamp = serverTimestamp(); // Add timestamp to the new document\n            await setDoc(userDocRef, { timestamp });\n          }\n  \n          setSelectedSession(sessionToUse);\n          sessionStorage.setItem('currentDiscussionId', sessionToUse);\n        }\n  \n        const userDocRef = doc(db, `users/${uid}/discussions/${sessionToUse}`);\n        const messagesCollectionRef = collection(userDocRef, 'messages');\n        const timestamp = serverTimestamp(); // Add timestamp to the new message\n        const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message, timestamp });\n        \n        console.log('Message added to discussion:', userDocRef.path);\n  \n        setMessage('');\n        handleTextareaResize();\n        setChatMessages((prevChatMessages) => [\n          ...prevChatMessages,\n          { text: message, user: 'user' },\n          { text: '', user: 'bot', isTyping: true },\n        ]);\n  \n        const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n          const rawBotResponse = docSnapshot.data()?.response;\n          if (rawBotResponse) {\n          unsubscribe();\n          const initialTypingSpeed = 20;\n          const speedIncreaseRate = 0.1;\n          const formattedBotResponse = rawBotResponse;\n          for (let i = 0; i < formattedBotResponse.length; i++) {\n            const currentTypingSpeed = Math.max(5, initialTypingSpeed - i * speedIncreaseRate);\n            await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n            setChatMessages((prevChatMessages) => [\n              ...prevChatMessages.slice(0, -1),\n              {\n                text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                user: 'bot',\n              },\n            ]);\n          }\n          setIsBotResponding(false);\n          if (window.innerWidth < 768 && textareaRef.current) {\n            textareaRef.current.blur();\n          }\n        }\n      });\n      setSelectedSession(null);\n    } catch (error) {\n      console.error('Error handling and sending message:', error);\n    }\n  }\n};\n\n  \n\n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    const fetchLastDiscussionId = async () => {\n      try {\n        if (auth.currentUser) {\n          const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n  \n          if (lastDiscussionId) {\n          } else {\n            console.log('No last discussion ID found.');\n          }\n        } else {\n          console.log('No user authenticated.');\n        }\n      } catch (error) {\n        console.error('Error fetching last discussion ID:', error);\n      }\n    };\n  \n    fetchLastDiscussionId(); \n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n  \n  \n  \n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    console.log('Selected Topic:', topic); \n  };\n  \n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '52px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  const handleDropdownToggle = () => {\n    console.log('Dropdown toggled');\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('52px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  const resetChatMessages = () => {\n    setChatMessages([]);\n  };\n  \n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} onSessionClick={handleSessionClick} resetChatMessages={resetChatMessages}/>\n<div className='chat-display'>\n<TopicPicker isDropdownOpen={isDropdownOpen} handleDropdownToggle={handleDropdownToggle} onSelectTopic={handleTopicSelection} />\n        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\"  ref={chatContainerRef}>\n  {chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {chatMessage.isTyping ? (\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n    {chatMessage.user !== 'bot' && <div className=\"chat-text\">{chatMessage.text}</div>}\n  </div>\n))}\n\n      </div>\n      <div className=\"chatui-container\">\n        <div className=\"userui-input\" >\n        <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col textarea-chat\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  }}\n  disabled={isBotResponding} \n/>\n          <button\n          aria-label=\"Send Message\"\n          className=\"svg-container send-btn\"\n          disabled={isBotResponding}\nonClick={() => handleSendMessage(selectedSession)}\n        >\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n        <ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} selectedSession={selectedSession} />\n      </div>\n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","selectedSession","closeShareChat","_useState","useState","_useState2","_slicedToArray","sharedChatData","setSharedChatData","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchSharedChatData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messagesCollectionRef","messagesSnapshot","messagesData","wrap","_context","prev","next","collection","firestore","auth","currentUser","uid","getDocs","query","orderBy","sent","docs","map","doc","_doc$data","data","prompt","response","console","log","t0","error","stop","apply","arguments","_jsxs","className","children","_jsx","onClick","xmlns","fill","viewBox","strokeWidth","color","stroke","strokeLinecap","strokeLinejoin","d","LoadingCircle","message","index","ReactMarkdown","isOpen","toggleOpen","onSessionClick","resetChatMessages","isDropdownOpen","setIsDropdownOpen","setIsIconRotated","chatHistoryRef","useRef","_useState5","_useState6","setSessions","_useState7","_useState8","setSelectedSession","_useState9","_useState10","_useState11","_useState12","isShareChatOpen","setIsShareChatOpen","groupSessionsByDate","sessions","today","Date","setHours","yesterday","setDate","getDate","groupedSessions","previously","forEach","session","sessionDate","timestamp","seconds","push","_useState13","_useState14","setGroupedSessions","fetchSessions","user","userUid","q","snapshot","sessionData","id","toggleDropdown","handleClickOutside","event","current","contains","target","isMobile","window","innerWidth","document","addEventListener","removeEventListener","lastDiscussionId","sessionStorage","getItem","ref","concat","width","height","style","display","alignItems","src","process","alt","marginLeft","length","cx","cy","r","ShareChat","isHovered","displayName","photoURL","skills","description","otherUserUID","occupation","onClose","navigate","useNavigate","currentAuthUID","setCurrentAuthUID","unsubscribe","onAuthStateChanged","handleEscapeKey","key","href","marginBottom","marginTop","join","type","Link","to","state","Error","fillRule","clipRule","selectedTopic","firstUserMessage","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","setIsHovered","showExpertBox","setShowExpertBox","setSelectedExpert","buttonClicked","setButtonClicked","handleExpertBoxClose","handleMouseLeave","fetchMatchingExperts","experts","getMatchingExpertsForTopic","getMatchingExperts","_ref3","_callee2","expertsCollection","querySnapshot","_matchingExperts","_context2","expertInfo","name","keywords","city","some","field","toLowerCase","includes","abrupt","_x","_x2","_ref4","_callee3","_matchingExperts2","_context3","fieldsToCheck","_x3","_x4","onMouseEnter","handleMouseEnter","onMouseLeave","handleButtonClick","ExpertBox","TopicLabel","category","handleDropdownToggle","handleTopicSelection","htmlFor","svg","onChange","categories","onSelectTopic","dropdownRef","setSelectedTopic","topic","pickModelDiv","querySelector","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","isHistoryOpen","setIsHistoryOpen","isExpertsOpen","setIsExpertsOpen","chatContainerRef","isBotResponding","setIsBotResponding","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","fetchMessages","discussionId","text","isTyping","flat","handleSessionClick","setItem","handleSendMessage","_callee4","sessionToUse","terms","filteredNouns","verbs","_userDocRef","_timestamp","userDocRef","botMessageDocRef","_context5","trim","nlp","nouns","out","filter","term","_toConsumableArray","setDoc","db","path","getDoc","exists","serverTimestamp","addDoc","handleTextareaResize","prevChatMessages","onSnapshot","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","_context4","currentTypingSpeed","Math","max","Promise","resolve","setTimeout","slice","delegateYield","blur","removeItem","fetchLastDiscussionId","_ref5","_callee5","_context6","textarea","newHeight","min","scrollHeight","handleKeyDown","shiftKey","preventDefault","textareaElement","scrollTop","ChatHistory","TopicPicker","chatMessage","value","e","placeholder","autoComplete","inputMode","onKeyDown","disabled","ChatExperts"],"sourceRoot":""}