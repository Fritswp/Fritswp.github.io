{"version":3,"file":"static/js/811.876968e8.chunk.js","mappings":"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","sources":["ChatBot/sharechat.js","ChatBot/ChatHistory.js","ChatBot/ExpertBox.js","ChatBot/ChatExperts.js","ChatBot/TopicPicker.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase'; // Import auth from firebase\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nconst ShareChat = ({ selectedSession, closeShareChat }) => {\n  const [sharedChatData, setSharedChatData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchSharedChatData = async () => {\n      try {\n        if (selectedSession) {\n          const messagesCollectionRef = collection(firestore, 'users', auth.currentUser.uid, 'discussions', selectedSession, 'messages');\n          const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n          const messagesData = messagesSnapshot.docs.map((doc) => {\n            const { prompt, response } = doc.data();\n            return { prompt, response };\n          });\n          setSharedChatData(messagesData);\n          setIsLoading(false); // Set loading to false when data is fetched\n          console.log('Fetched messages for discussionId:', selectedSession, messagesData);\n        }\n      } catch (error) {\n        console.error('Error fetching shared chat messages:', error);\n        setIsLoading(false); // Set loading to false on error\n      }\n    };\n\n    fetchSharedChatData();\n  }, [selectedSession]);\n\n  return (\n    <div className=\"white-box-chathistory\">\n      <div className=\"go-back-svg go-back-svg-padding\">\n        <button onClick={closeShareChat}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <h2>Share link to Chat</h2>\n      <div className='divider '></div>\n      <p>\n        Messages you send after creating your link won't be shared. Anyone with the URL will be able to view the shared chat.\n      </p>\n      <div className=\"shared-chat scroll-cat\">\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          sharedChatData.map((message, index) => (\n            <div key={index} className=\"chat-message\">\n              <strong>\n                <ReactMarkdown>{message.prompt}</ReactMarkdown>\n\n              </strong>\n              <ReactMarkdown>{message.response}</ReactMarkdown>\n              <div className='divider '></div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ShareChat;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { auth, firestore } from '../firebase';\nimport { collection, query, orderBy, getDocs } from 'firebase/firestore';\nimport ShareChat from './sharechat';\n\nconst ChatHistory = ({ isOpen, toggleOpen, onSessionClick, resetChatMessages, selectedSession }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n  const [sessions, setSessions] = useState([]);\n  const [isShareChatOpen, setIsShareChatOpen] = useState(false);\n  const [isLoadingSessions, setIsLoadingSessions] = useState(true);\n\n  const groupSessionsByDate = (sessions) => {\n    const today = new Date().setHours(0, 0, 0, 0);\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    yesterday.setHours(0, 0, 0, 0);\n\n    const groupedSessions = {\n      today: [],\n      yesterday: [],\n      previously: [],\n    };\n\n    sessions.forEach((session) => {\n      const sessionDate = new Date(session.timestamp.seconds * 1000).setHours(0, 0, 0, 0);\n\n      if (sessionDate === today) {\n        groupedSessions.today.push(session);\n      } else if (sessionDate === yesterday) {\n        groupedSessions.yesterday.push(session);\n      } else {\n        groupedSessions.previously.push(session);\n      }\n    });\n\n    return groupedSessions;\n  };\n\n  const [groupedSessions, setGroupedSessions] = useState({\n    today: [],\n    yesterday: [],\n    previously: [],\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n\n\n  const fetchSessions = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userUid = user.uid;\n\n        const q = query(\n          collection(firestore, 'users', userUid, 'discussions'),\n          orderBy('timestamp', 'desc')\n        );\n\n        const snapshot = await getDocs(q);\n        const sessionData = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          timestamp: doc.data().timestamp,\n        }));\n        setSessions(sessionData);\n\n        setGroupedSessions(groupSessionsByDate(sessionData));\n\n        console.log('Fetched sessions:', sessionData);\n\n        if (sessionData.length > 0) {\n          const newlyCreatedDiscussion = sessionData[0].id;\n        }\n\n        setIsLoadingSessions(false);\n      } else {\n        console.error('User not authenticated');\n        setIsLoadingSessions(false);\n      }\n    } catch (error) {\n      console.error('Error fetching sessions from Firestore:', error);\n      setIsLoadingSessions(false);\n    }\n  };\n\n\n\n  const startNewChat = () => {\n    resetChatMessages();\n    console.log('Discussion set to undefined');\n    onSessionClick(null);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen); // Toggle the button visibility when dropdown is opened/closed\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatHistoryRef.current && !chatHistoryRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768;\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n\n\n  const closeShareChat = () => {\n    setIsShareChatOpen(false);\n  };\n  \n  useEffect(() => {\n    if (isOpen) {\n      // Fetch sessions from Firestore when the dropdown is open\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n     \n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isOpen && (\n        <>\n   \n        <div className='chatbot-previous'>\n          <div style={{ display: 'flex' }}>\n            <button\n              className=\"chat-history-btn\"\n              onClick={() => {\n                startNewChat();\n                if (window.innerWidth <= 768) {\n                  toggleDropdown();\n                }\n              }}\n            >\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n                <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n              </div>\n              <div className='ms-auto'>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n                </svg>\n              </div>\n            </button>\n          </div>\n          <p className=\"text-sm text-muted mt-3\">Today:</p>\n          {groupedSessions.today.length > 0 && (\n            <ul className=\"fade-ulist no-scroll\">\n            {groupedSessions.today.map((session) => (\n              <li\n                className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n                key={session.id}\n                onClick={() => {\n                  onSessionClick(session.id);\n                  if (window.innerWidth <= 768) {\n                    toggleDropdown();\n                  }\n                }}\n              >\n                {session.id}\n                <div className=\"svg-chathistory-container\">\n<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"24\"\nheight=\"24\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"white\"\nstrokeWidth=\"2\"\nstrokeLinecap=\"round\"\nstrokeLinejoin=\"round\"\nonClick={() => {\nsetIsShareChatOpen(true);\n}}\n>\n<circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n              </li>\n              \n            ))}\n          </ul>\n          )}\n\n<p className=\"text-sm text-muted mt-3\">{groupedSessions.yesterday.length > 0 && 'Yesterday:'}</p>\n{groupedSessions.yesterday.length > 0 && (\n  <ul className=\"fade-ulist no-scroll\">\n             {groupedSessions.today.map((session) => (\n               <li\n                 className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n                 key={session.id}\n                 onClick={() => {\n                   onSessionClick(session.id);\n                   if (window.innerWidth <= 768) {\n                     toggleDropdown();\n                   }\n                 }}\n               >\n                 {session.id}\n                 <div className=\"svg-chathistory-container\">\n <svg\n xmlns=\"http://www.w3.org/2000/svg\"\n width=\"24\"\n height=\"24\"\n viewBox=\"0 0 24 24\"\n fill=\"none\"\n stroke=\"white\"\n strokeWidth=\"2\"\n strokeLinecap=\"round\"\n strokeLinejoin=\"round\"\n onClick={() => {\n setIsShareChatOpen(true);\n }}\n >\n <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n </svg>\n \n <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n </svg>\n </div>\n \n               </li>\n               \n             ))}\n           </ul>\n          )}\n\n<p className=\"text-sm text-muted mt-3\">{groupedSessions.previously.length > 0 && 'Previously:'}</p>\n{groupedSessions.previously.length > 0 && (\n  <ul className=\"fade-ulist no-scroll\">\n           {groupedSessions.today.map((session) => (\n             <li\n               className={`fade-list${session.id === selectedSession ? ' selected-session' : ''}`}\n               key={session.id}\n               onClick={() => {\n                 onSessionClick(session.id);\n                 if (window.innerWidth <= 768) {\n                   toggleDropdown();\n                 }\n               }}\n             >\n               {session.id}\n               <div className=\"svg-chathistory-container\">\n<svg\nxmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"24\"\nheight=\"24\"\nviewBox=\"0 0 24 24\"\nfill=\"none\"\nstroke=\"white\"\nstrokeWidth=\"2\"\nstrokeLinecap=\"round\"\nstrokeLinejoin=\"round\"\nonClick={() => {\nsetIsShareChatOpen(true);\n}}\n>\n<circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n<circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n</svg>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\">\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\" />\n</svg>\n</div>\n\n             </li>\n             \n           ))}\n         </ul>\n          )}\n        </div>\n   \n{isShareChatOpen && (\n  <ShareChat selectedSession={selectedSession} closeShareChat={closeShareChat} />\n)}  \n\n</>\n      )}\n    </div>\n  );\n};\n\n\nexport default ChatHistory;","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { auth, firestore } from '../firebase';\nimport { collection, doc, setDoc } from 'firebase/firestore';\n\nconst ExpertBox = ({ isHovered, displayName, photoURL, skills, description, otherUserUID, occupation, onClose, selectedSession }) => {\n  const navigate = useNavigate();\n  const [currentUserUID, setCurrentUserUID] = useState(null);\n  const discussionID = selectedSession;\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUserUID(user.uid);\n        console.log('Current User UID in ExpertBox:', user.uid);\n      } else {\n        console.error('User is not authenticated in ExpertBox');\n        setCurrentUserUID(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [selectedSession]);\n\n  const handleChatButtonClick = async () => {\n    try {\n      if (!otherUserUID || !currentUserUID || !selectedSession) {\n        throw new Error('otherUserUID, currentUserUID, or selectedSession is undefined or null');\n      }\n  \n      // Combine currentUserUID and otherUserUID to create a unique discussionID\n      const discussionID = `${currentUserUID}_${otherUserUID}`;\n  \n      // Create a new document in the sharedConversations collection\n      const conversationRef = doc(collection(firestore, 'sharedConversations'), discussionID);\n      \n      // Use setDoc to create or update the document with the desired data\n      await setDoc(conversationRef, {\n        selectedSession,\n        currentUserUID,\n        otherUserUID,\n        // Add other fields as needed\n      });\n  \n      // Navigate to the chat page\n      navigate('/chat', {\n        state: {\n          otherUserUID,\n          selectedSession,\n          currentUserUID,\n        },\n      });\n  \n      console.log('New document created successfully.');\n    } catch (error) {\n      console.error('Error handling chat button click:', error.message);\n    }\n  };\n  \n\n  const handleEscapeKey = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isHovered) {\n      document.addEventListener('keydown', handleEscapeKey);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [isHovered]);\n\n  return (\n    isHovered && (\n      \n<div className=\"white-box\" >\n        <div className=\"go-back-svg go-back-svg-padding\">\n    <button onClick={onClose}>                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} color=\"black\" stroke=\"currentColor\" className=\"w-6 h-6\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n\n          <h5 className=\"card-title\"> {displayName}</h5>\n  \n          <h5 className=\"card-title\">Expertise: {occupation}</h5>\n          \n  <div href={photoURL} className=\"d-md-inline\">\n    <img\n      src={photoURL}\n      alt=\"Profile Photo\"\n      className=\"searchimage card-img user-avatar large-avatar rounded-circle mb-2 mx-md-auto mx-0 \" \n    />\n  </div>\n  \n\n          <div className=\"about-container\">\n          <h5 className=\"card-title\"   style={{ display: 'inline' }}>About: </h5> \n<p style={{ display: 'inline' }}>{description}</p>\n</div>\n         \n\n          <div style={{ marginBottom: '0.4rem', marginTop: '0.4rem' }}>\n     \n          <p className=\"font-weight-bold mb-0\">Skills: {skills.join(', ')}</p>\n  {skills && skills.map((skills) => (\n    <button\n      key={skills}\n      type=\"button\"\n      className=\" containerhover keyword-container mb-2 mx-1 pb-1\"\n    >\n      {skills}\n    </button>\n  ))}\n\n</div>\n\n        <div>\n       \n        </div>\n        <div className=\"d-flex justify-content-center\">\n        <Link to=\"/chat\" state={{ otherUserUID, selectedSession }} onClick={handleChatButtonClick}>\n\n            <button type=\"button\" className=\"btn btn-primary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"me-2\">Message</span> \n            </button>\n            </Link>\n            <button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill btncard pb-1 mb-2 mx-1\" >\n             \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n                <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n              </svg>\n             <span className=\"me-2\">Connect</span> \n           </button>\n           \n        \n          </div>\n      </div>\n\n\n\n   \n    )\n  );\n};\n\nexport default ExpertBox;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { firestore, collection, query, where, getDocs } from \"../firebase\"; \nimport ExpertBox from './ExpertBox'\n\nconst ChatExperts = ({ isOpen, toggleOpen, selectedTopic, firstUserMessage, selectedSession }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [matchingExperts, setMatchingExperts] = useState([]);\n  const chatExpertsRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [showExpertBox, setShowExpertBox] = useState(false);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n\n  const handleExpertBoxClose = () => {\n    setShowExpertBox(false);\n    setButtonClicked(false); // Reset buttonClicked state\n    setIsHovered(null);\n  };\n\n  const handleMouseEnter = (index) => {\n    setIsHovered(index);\n  };\n\n  const handleButtonClick = (expertInfo, index) => {\n    if (index === isHovered) {\n      setSelectedExpert(expertInfo);\n      setButtonClicked(!buttonClicked); // Toggle buttonClicked state\n      setShowExpertBox(true); // Always show ExpertBox on button click\n    }\n  };\n\n\n  const handleMouseLeave = () => {\n    if (!buttonClicked && !showExpertBox) {\n      setShowExpertBox(false);\n      setIsHovered(null);\n    }\n  };\n\n  \n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen(); // Toggle ChatExperts\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    const fetchMatchingExperts = async () => {\n      if (isOpen) {\n        try {\n          let experts;\n  \n          if (selectedTopic) {\n            console.log(\"Fetching experts for selected topic:\", selectedTopic);\n            experts = await getMatchingExpertsForTopic(selectedTopic, firstUserMessage);\n          } else if (firstUserMessage) {\n            console.log(\"Fetching experts for firstUserMessage:\", firstUserMessage);\n            experts = await getMatchingExperts(null, firstUserMessage);\n          }\n  \n          console.log(\"Matching experts:\", experts);\n  \n          setMatchingExperts(experts || []);\n        } catch (error) {\n          console.error(\"Error fetching experts:\", error);\n        }\n      }\n    };\n  \n    fetchMatchingExperts();\n  }, [isOpen, selectedTopic, firstUserMessage]);\n  \n\nconst getMatchingExperts = async (selectedTopic, firstUserMessage) => {\n  try {\n    const expertsCollection = collection(firestore, \"expertApplications\");\n    const querySnapshot = await getDocs(expertsCollection);\n    const matchingExperts = [];\n\n    querySnapshot.forEach((doc) => {\n      const data = doc.data();\n      if (data && data.displayName) {\n        const expertInfo = {\n          name: data.displayName,\n          photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n          skills: data.keywords || [],\n          description: data.description,\n          city: data.city,\n          occupation: data.occupation,\n          otherUserUID: doc.id,\n        };\n\n        // Check if there is a match in any of the specified fields or if there is no selected topic\n        const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n\n        const keywordsMatch = firstUserMessage && data.keywords && data.keywords.some(keyword =>\n          keyword.toLowerCase() === firstUserMessage.toLowerCase()\n        );\n        \n        const topicMatch = selectedTopic && fieldsToCheck.some(field =>\n          data[field] &&\n          typeof data[field] === 'string' &&\n          data[field].toLowerCase().includes(selectedTopic.name.toLowerCase())\n        );\n        \n        if (keywordsMatch || topicMatch || (!selectedTopic && !firstUserMessage)) {\n          matchingExperts.push(expertInfo);\n        }\n      }\n    });\n\n    console.log(\"Matching experts for selected topic:\", matchingExperts);\n    console.log(\"Selected Topic:\", selectedTopic);\n    console.log(\"First User Message:\", firstUserMessage);\n\n    return matchingExperts;\n  } catch (error) {\n    console.error(\"Error fetching experts for selected topic:\", error);\n    return [];\n  }\n};\n\n\n  const getMatchingExpertsForTopic = async (selectedTopic, firstUserMessage) => {\n    try {\n      const expertsCollection = collection(firestore, \"expertApplications\");\n      const querySnapshot = await getDocs(expertsCollection);\n      const matchingExperts = [];\n  \n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data && data.displayName) {\n          const expertInfo = {\n            name: data.displayName,\n            photoURL: data.photoURL || `${process.env.PUBLIC_URL}/images/arts/user.webp`,\n            skills: data.keywords || [],\n            description: data.description,\n            city: data.city,\n            occupation: data.occupation,\n            otherUserUID: doc.id,\n          };\n  \n          // Check if there is a match in any of the specified fields or if there is no selected topic\n          const fieldsToCheck = ['city', 'occupation', 'keywords', 'description', 'labels'];\n  \n          if (\n            (firstUserMessage && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(firstUserMessage.toLowerCase())\n            )) ||\n            (selectedTopic && fieldsToCheck.some(field => \n              data[field] &&\n              typeof data[field] === 'string' &&\n              data[field].toLowerCase().includes(selectedTopic.name.toLowerCase())\n            )) ||\n            (!selectedTopic && !firstUserMessage) // Include expert if no selected topic or firstUserMessage\n          ) {\n            matchingExperts.push(expertInfo);\n          }\n        }\n      });\n  \n      console.log(\"Matching experts for selected topic:\", matchingExperts);\n      console.log(\"Selected Topic:\", selectedTopic);\n      console.log(\"First User Message:\", firstUserMessage);\n  \n      return matchingExperts;\n    } catch (error) {\n      console.error(\"Error fetching experts for selected topic:\", error);\n      return [];\n    }\n  };\n  \n  \n  \n  \n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n       \n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n        </svg>\n      </span>\n      {isOpen && (\n        <>\n      <div>\n        <h4>Experts</h4>\n      </div>\n      {matchingExperts.map((expertInfo, index) => (\n        <div key={index}>\n        <button\n          className={`chat-btn expert-btn text-left ${showExpertBox && index === isHovered ? 'open-expert-box' : ''}`}\n          onMouseEnter={() => handleMouseEnter(index)}\n          onMouseLeave={handleMouseLeave}\n          onClick={() => handleButtonClick(expertInfo, index)}\n        >\n      <div className='d-flex flex-column'>\n        <div className='d-flex align-items-center justify-content-between'>\n          <img\n            src={expertInfo.photoURL}\n            alt=\"Avatar\"\n            className=\"very-small-avatar rounded-circle\"\n          />\n          <div className=\"ml-2\">\n            <p className=\"font-weight-bold mb-0 text-start\">{expertInfo.name}</p>\n          </div>\n        </div>\n        {expertInfo.skills && (\n          <div className=\"text-start mt-2\">\n            <p className=\"font-weight-bold mb-0\">Skills: {expertInfo.skills.join(', ')}</p>\n          </div>\n        )}\n      </div>\n      {/* Render the ExpertBox component with isHovered prop */}\n \n          </button>\n          <ExpertBox\n              isHovered={index === isHovered}\n              displayName={expertInfo.name}\n              photoURL={expertInfo.photoURL}\n              skills={expertInfo.skills}\n              description={expertInfo.description}\n              city={expertInfo.city}\n              occupation={expertInfo.occupation}\n              otherUserUID={expertInfo.otherUserUID}\n              selectedSession={selectedSession} \n              onClose={handleExpertBoxClose} // Pass the onClose callback\n            \n            />\n        </div>\n      ))}\n     </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatExperts;","import React, { useRef, useState, useEffect } from 'react';\n\nconst TopicPicker = ({ isDropdownOpen, handleDropdownToggle, onSelectTopic }) => {\n  const dropdownRef = useRef(null);\n  const [selectedTopic, setSelectedTopic] = useState(null);\n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    onSelectTopic(topic);\n    handleDropdownToggle();\n  };\n  \n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const pickModelDiv = document.querySelector('.pick-model');\n      if (\n        isDropdownOpen &&\n        dropdownRef.current &&\n        !pickModelDiv.contains(event.target)\n      ) {\n        // Clicked outside the entire pick-model, close the dropdown\n        handleDropdownToggle();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, handleDropdownToggle, isDropdownOpen]);\n  \n  return (\n    <div className=\"pick-model\">\n      <h4\n        onClick={handleDropdownToggle}\n        className={`pointer-cursor ${isDropdownOpen ? 'h4-dropdown-open' : ''}`}\n      >\n        {selectedTopic ? `Topic: ${selectedTopic.name}` : 'Pick a Topic'}\n      </h4>\n      <span\n        className={`svg-chatbot-model pointer-cursor ${isDropdownOpen ? 'svg-chatbot-model-rotate-icon' : ''}`}\n        aria-hidden=\"true\"\n        onClick={handleDropdownToggle}\n      >\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      <div ref={dropdownRef} className={`chat-dropdown-model ${isDropdownOpen ? 'show scroll-cat' : ''}`}>\n        {categories && categories.map((category) => (\n          <TopicLabel\n            key={category.id}\n            category={category}\n            handleDropdownToggle={handleDropdownToggle}\n            handleTopicSelection={handleTopicSelection}\n          />\n        ))}\n      </div>\n    </div>\n  );\n  \n  \n};\n  \n  const TopicLabel = ({ category, handleDropdownToggle, handleTopicSelection }) => {\n    const handleRadioChange = () => {\n      handleTopicSelection(category);\n      handleDropdownToggle();\n    };\n  \n    return (\n      <label className=\"chat-dropdown-model-button \" htmlFor={category.id}>\n        {category.svg} \n        <div className=\"d-flex align-items-center\">\n          <div className=\"d-flex flex-column align-items-start ps-3\">\n            <h5 className=\"m-0\">{category.name}</h5>\n            <h6 className=\"text-muted text-start m-0\">{category.description}</h6>\n          </div>\n        </div>\n        <div className=\"flex-grow-1 d-flex justify-content-end\">\n          <input\n            type=\"radio\"\n            className=\"form-check-input listboxes\"\n            id={category.id}\n            name=\"jobSuccess\"\n            onChange={handleRadioChange}\n          />\n          <label className=\"form-check-label label-with-svg\" htmlFor={category.id}></label>\n        </div>\n      </label>\n    );\n  };\n  \n    const categories = [\n        {\n        id: 'computerOption',\n        name: 'Computer',\n        description: 'All your IT solutions',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#212529\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25m18 0A2.25 2.25 0 0 0 18.75 3H5.25A2.25 2.25 0 0 0 3 5.25m18 0V12a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 12V5.25\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'sportOption',\n        name: 'Sport',\n        description: \"Let Tio help you become fit\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M9.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M6.44 3.752A.75.75 0 0 1 7 3.5h1.445c.742 0 1.32.643 1.243 1.38l-.43 4.083a1.8 1.8 0 0 1-.088.395l-.318.906.213.242a.8.8 0 0 1 .114.175l2 4.25a.75.75 0 1 1-1.357.638l-1.956-4.154-1.68-1.921A.75.75 0 0 1 6 8.96l.138-2.613-.435.489-.464 2.786a.75.75 0 1 1-1.48-.246l.5-3a.75.75 0 0 1 .18-.375l2-2.25Z\"/>\n            <path d=\"M6.25 11.745v-1.418l1.204 1.375.261.524a.8.8 0 0 1-.12.231l-2.5 3.25a.75.75 0 1 1-1.19-.914zm4.22-4.215-.494-.494.205-1.843.006-.067 1.124 1.124h1.44a.75.75 0 0 1 0 1.5H11a.75.75 0 0 1-.531-.22Z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'foodCategory',\n        name: 'Food',\n        description: 'Ready to become head-chef?',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6\"/>\n            <path d=\"M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'healthCategory',\n        name: 'Health',\n        description: 'Here to help',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.121 1.879a3 3 0 0 0-4.242 0L8.733 3.026l4.261 4.26 1.127-1.165a3 3 0 0 0 0-4.242M12.293 8 8.027 3.734 3.738 8.031 8 12.293zm-5.006 4.994L3.03 8.737 1.879 9.88a3 3 0 0 0 4.241 4.24l.006-.006 1.16-1.121ZM2.679 7.676l6.492-6.504a4 4 0 0 1 5.66 5.653l-1.477 1.529-5.006 5.006-1.523 1.472a4 4 0 0 1-5.653-5.66l.001-.002 1.505-1.492z\"/>\n            <path d=\"M5.56 7.646a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707Zm1.415-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707M8.39 4.818a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707Zm0 5.657a.5.5 0 1 1-.708.707.5.5 0 0 1 .707-.707ZM9.803 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707Zm1.414-1.414a.5.5 0 1 1-.706.708.5.5 0 0 1 .707-.707ZM6.975 9.06a.5.5 0 1 1-.707.708.5.5 0 0 1 .707-.707ZM8.39 7.646a.5.5 0 1 1-.708.708.5.5 0 0 1 .707-.708Zm1.413-1.414a.5.5 0 1 1-.707.707.5.5 0 0 1 .707-.707\"/>\n            </svg>\n        ),\n        },\n        {\n        id: 'workCategory',\n        name: 'Work',\n        description: 'New Job or career advice',\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\" />\n            </svg>\n        ),\n        },\n        {\n        id: 'hobbiesCategory',\n        name: 'Hobbies',\n        description: \"Discover what's possible\",\n        svg: (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n            <path d=\"M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3\"/>\n            <path d=\"M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8m-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7\"/>\n            </svg>\n        ),\n        },\n    ];\n    \n    export default TopicPicker;","import { auth, db, firestore } from '../firebase';\nimport { collection, doc, setDoc, addDoc, getDoc, onSnapshot, getDocs, query, orderBy, serverTimestamp } from 'firebase/firestore';\nimport ReactMarkdown from 'react-markdown';\nimport LoadingCircle from '../components/LoadingCircle';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\nimport TopicPicker from './TopicPicker.js';\nimport nlp from 'compromise/three';\n\n\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('52px');\n  const textareaRef = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const maxTextareaHeight = 200;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n  const chatContainerRef = useRef(null);\n  const [isBotResponding, setIsBotResponding] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSession, setSelectedSession] = useState(null);  \n  const [selectedTopic, setSelectedTopic] = useState(null); \n  const [sessionToUse, setSessionToUse] = useState(null);\n  const [firstUserMessage, setFirstUserMessage] = useState('');\n  \n\n  \n\n  const fetchMessages = async (userUid, discussionId) => {\n    console.log('Fetching messages for userUid:', userUid, 'and discussionId:', discussionId);\n    try {\n      const messagesCollectionRef = collection(firestore, 'users', userUid, 'discussions', discussionId, 'messages');\n      const messagesSnapshot = await getDocs(query(messagesCollectionRef, orderBy('createTime')));\n      const messagesData = messagesSnapshot.docs.map((doc) => {\n        const { prompt, response } = doc.data();\n        return [\n          { text: <ReactMarkdown>{prompt}</ReactMarkdown>, user: 'user' },\n          { text: <ReactMarkdown>{response}</ReactMarkdown>, user: 'bot', isTyping: false },\n        ];\n      }).flat();\n      setChatMessages(messagesData);\n      console.log('Fetched messages for discussionId:', discussionId);\n    } catch (error) {\n      console.error('Error fetching messages from Firestore:', error);\n    }\n  };\n  \n\n\n  \n  const handleSendMessage = async () => {\n    console.log('Sending message for discussionId:', selectedSession);\n    setIsBotResponding(true);\n  \n    if (message.trim() !== '') {\n      const uid = auth.currentUser.uid;\n  \n      try {\n        let currentSessionToUse = selectedSession;\n        const terms = nlp(message).terms();\n        const filteredNouns = terms.nouns().out('array').filter(term => term !== 'pronoun');\n        const verbs = terms.verbs().out('array');\n        const firstWord = message.split(' ')[0];\n        const firstUserMessage = !currentSessionToUse\n          ? firstWord.trim()\n          : message;\n  \n        const lowercasedMessage = message.toLowerCase();\n        setFirstUserMessage(lowercasedMessage);\n  \n        if (!currentSessionToUse) {\n          const terms = nlp(message).terms();\n          const filteredNouns = terms.nouns().out('array').filter(term => term !== 'pronoun');\n          const verbs = terms.verbs().out('array');\n  \n          // Use the first word of the user's input if the filtered result is empty\n          currentSessionToUse = [...filteredNouns, ...verbs].join(' ');\n          if (!currentSessionToUse.trim()) {\n            const firstWord = message.split(' ')[0];\n            currentSessionToUse = firstWord.trim();\n          }\n  \n          console.log('Creating/Updating user document:', `users/${uid}`);\n          await setDoc(doc(db, `users/${uid}`), {});\n  \n          const userDocRef = doc(db, `users/${uid}/discussions/${currentSessionToUse}`);\n          console.log('Checking if discussion exists:', userDocRef.path);\n          const discussionsSnapshot = await getDoc(userDocRef);\n  \n          if (!discussionsSnapshot.exists()) {\n            console.log('Discussion does not exist, creating:', userDocRef.path);\n            const timestamp = serverTimestamp();\n            await setDoc(userDocRef, { timestamp });\n          }\n  \n          setSessionToUse(currentSessionToUse);\n          setSelectedAndFetchMessages(currentSessionToUse);\n  \n          sessionStorage.setItem('currentDiscussionId', currentSessionToUse);\n        }\n  \n        const userDocRef = doc(db, `users/${uid}/discussions/${currentSessionToUse}`);\n        const messagesCollectionRef = collection(userDocRef, 'messages');\n        const timestamp = serverTimestamp();\n        const botMessageDocRef = await addDoc(messagesCollectionRef, { prompt: message, timestamp });\n  \n        console.log('Message added to discussion:', userDocRef.path);\n  \n        setMessage('');\n        handleTextareaResize();\n        setChatMessages((prevChatMessages) => [\n          ...prevChatMessages,\n          { text: message, user: 'user' },\n          { text: '', user: 'bot', isTyping: true },\n        ]);\n  \n        const unsubscribe = onSnapshot(botMessageDocRef, async (docSnapshot) => {\n          const rawBotResponse = docSnapshot.data()?.response;\n          if (rawBotResponse) {\n            unsubscribe();\n            const initialTypingSpeed = 20;\n            const speedIncreaseRate = 0.1;\n            const formattedBotResponse = rawBotResponse;\n            for (let i = 0; i < formattedBotResponse.length; i++) {\n              const currentTypingSpeed = Math.max(5, initialTypingSpeed - i * speedIncreaseRate);\n              await new Promise((resolve) => setTimeout(resolve, currentTypingSpeed));\n              setChatMessages((prevChatMessages) => [\n                ...prevChatMessages.slice(0, -1),\n                {\n                  text: <ReactMarkdown>{formattedBotResponse.slice(0, i + 1)}</ReactMarkdown>,\n                  user: 'bot',\n                },\n              ]);\n            }\n            setIsBotResponding(false);\n            if (window.innerWidth < 768 && textareaRef.current) {\n              textareaRef.current.blur();\n            }\n          }\n        });\n        setSelectedSession(currentSessionToUse); // Highlight the current session in ChatHistory\n      } catch (error) {\n        console.error('Error handling and sending message:', error);\n      }\n    }\n  };\n  \n  \n    \n  const handleSessionClick = async (discussionId) => {\n    console.log('Clicked session:', discussionId);\n    setSelectedSession(discussionId);\n  \n    // Reset firstUserMessage when a session is clicked\n    setFirstUserMessage(''); // You can also use setFirstUserMessage(null) if appropriate\n  \n    // Store the selected session in sessionStorage\n    sessionStorage.setItem('lastDiscussionId', discussionId);\n  \n    await fetchMessages(auth.currentUser.uid, discussionId);\n  };\n  \n  \n  \n  const setSelectedAndFetchMessages = async (sessionId) => {\n    setSelectedSession(sessionId);\n    sessionStorage.setItem('lastDiscussionId', sessionId);\n    await fetchMessages(sessionId); // Add a function to fetch messages for the selected session\n  };\n  \n  \n\n  window.addEventListener('beforeunload', () => {\n  sessionStorage.removeItem('currentDiscussionId');\n  });\n\n  useEffect(() => {\n    const fetchLastDiscussionId = async () => {\n      try {\n        if (auth.currentUser) {\n          const lastDiscussionId = sessionStorage.getItem('lastDiscussionId');\n  \n          if (lastDiscussionId) {\n          } else {\n            console.log('No last discussion ID found.');\n          }\n        } else {\n          console.log('No user authenticated.');\n        }\n      } catch (error) {\n        console.error('Error fetching last discussion ID:', error);\n      }\n    };\n  \n    fetchLastDiscussionId(); \n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n  \n  \n  \n\n  const handleTopicSelection = (topic) => {\n    setSelectedTopic(topic);\n    console.log('Selected Topic:', topic); \n  };\n  \n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = '52px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  const handleDropdownToggle = () => {\n    console.log('Dropdown toggled');\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  \n  useEffect(() => {\n    handleTextareaResize();\n    const handleKeyDown = (event) => {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        handleSendMessage();\n      }\n    };\n  \n    const textareaElement = textareaRef.current;\n    if (textareaElement) {\n      textareaElement.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (textareaElement) {\n        textareaElement.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [chatMessages]);\n  \n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('52px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  const resetChatMessages = () => {\n    setChatMessages([]);\n  };\n\n  \n  \n  \n  return (\n    <div className=\"Chatcontainer-model\">\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} onSessionClick={handleSessionClick} selectedSession={selectedSession}  resetChatMessages={resetChatMessages}/>\n<div className='chat-display'>\n<TopicPicker isDropdownOpen={isDropdownOpen} handleDropdownToggle={handleDropdownToggle} onSelectTopic={handleTopicSelection} />\n        {/* Other components or content in your chat-display */}\n  <div className='chat-column chat-bot-upper-section'>\n  <div className=\"chat-box chat-bot-section\"  ref={chatContainerRef}>\n  {chatMessages.map((chatMessage, index) => (\n  <div key={index} className={`chat-bubble-bot ${chatMessage.user === 'user' ? 'user-sent-bot' : 'bot'}`}>\n    {chatMessage.user === 'bot' && (\n      <div className=\"bot-message\">\n        <div className=\"bot-avatar\">\n          <img\n            className=\"bot-avatar\"\n            src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`}\n            alt=\"TIO-bot\"\n          />\n        </div>\n        <div className=\"bot-details\">\n          <div className=\"bot-name\">TIO-bot</div>\n          {chatMessage.isTyping ? (\n            <LoadingCircle />\n          ) : (\n            <div className=\"chat-text\">{chatMessage.text}</div>\n          )}\n        </div>\n      </div>\n    )}\n    {chatMessage.user !== 'bot' && <div className=\"chat-text\">{chatMessage.text}</div>}\n  </div>\n))}\n\n      </div>\n      <div className=\"chatui-container\">\n        <div className=\"userui-input\" >\n        <textarea\n  value={message}\n  onChange={handleMessageChange}\n  className=\"scroll-col textarea-chat\"\n  style={{ height: textareaHeight }} // Set the height dynamically\n  ref={textareaRef}\n  placeholder=\"Type a message...\"\n  autoComplete=\"off\"\n  inputMode=\"text\"\n  onKeyDown={(e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  }}\n  disabled={isBotResponding} \n/>\n          <button\n          aria-label=\"Send Message\"\n          className=\"svg-container send-btn\"\n          disabled={isBotResponding}\nonClick={() => handleSendMessage(selectedSession)}\n        >\n          <i className=\"fas fa-paper-plane\"></i>\n        </button>\n        </div>\n        </div>\n        </div>\n        </div>\n<ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} selectedTopic={selectedTopic} selectedSession={selectedSession} firstUserMessage={firstUserMessage} />\n      </div>\n  );\n};\n\nexport default ChatInterface;"],"names":["_ref","selectedSession","closeShareChat","_useState","useState","_useState2","_slicedToArray","sharedChatData","setSharedChatData","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchSharedChatData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messagesCollectionRef","messagesSnapshot","messagesData","wrap","_context","prev","next","collection","firestore","auth","currentUser","uid","getDocs","query","orderBy","sent","docs","map","doc","_doc$data","data","prompt","response","console","log","t0","error","stop","apply","arguments","_jsxs","className","children","_jsx","onClick","xmlns","fill","viewBox","strokeWidth","color","stroke","strokeLinecap","strokeLinejoin","d","LoadingCircle","message","index","ReactMarkdown","isOpen","toggleOpen","onSessionClick","resetChatMessages","isDropdownOpen","setIsDropdownOpen","setIsIconRotated","chatHistoryRef","useRef","_useState5","_useState6","setSessions","_useState7","_useState8","isShareChatOpen","setIsShareChatOpen","_useState9","_useState10","setIsLoadingSessions","groupSessionsByDate","sessions","today","Date","setHours","yesterday","setDate","getDate","groupedSessions","previously","forEach","session","sessionDate","timestamp","seconds","push","_useState11","_useState12","setGroupedSessions","fetchSessions","user","userUid","q","snapshot","sessionData","id","length","toggleDropdown","handleClickOutside","event","current","contains","target","isMobile","window","innerWidth","document","addEventListener","removeEventListener","ref","concat","width","height","_Fragment","style","display","alignItems","src","process","alt","marginLeft","cx","cy","r","ShareChat","isHovered","displayName","photoURL","skills","description","otherUserUID","occupation","onClose","navigate","useNavigate","currentUserUID","setCurrentUserUID","unsubscribe","onAuthStateChanged","handleChatButtonClick","_discussionID","conversationRef","Error","discussionID","setDoc","state","handleEscapeKey","key","href","marginBottom","marginTop","join","type","Link","to","fillRule","clipRule","selectedTopic","firstUserMessage","isIconRotated","matchingExperts","setMatchingExperts","chatExpertsRef","setIsHovered","showExpertBox","setShowExpertBox","setSelectedExpert","_useState13","_useState14","buttonClicked","setButtonClicked","handleExpertBoxClose","handleMouseLeave","fetchMatchingExperts","experts","getMatchingExpertsForTopic","getMatchingExperts","_ref3","_callee2","expertsCollection","querySnapshot","_matchingExperts","_context2","expertInfo","name","keywords","city","keywordsMatch","some","keyword","toLowerCase","topicMatch","field","includes","abrupt","_x","_x2","_ref4","_callee3","_matchingExperts2","_context3","fieldsToCheck","_x3","_x4","onMouseEnter","handleMouseEnter","onMouseLeave","handleButtonClick","ExpertBox","TopicLabel","category","handleDropdownToggle","handleTopicSelection","htmlFor","svg","onChange","categories","onSelectTopic","dropdownRef","setSelectedTopic","topic","pickModelDiv","querySelector","setMessage","textareaHeight","setTextareaHeight","textareaRef","chatMessages","setChatMessages","isHistoryOpen","setIsHistoryOpen","isExpertsOpen","setIsExpertsOpen","chatContainerRef","isBotResponding","setIsBotResponding","_useState15","_useState16","_useState17","_useState18","setSelectedSession","_useState19","_useState20","_useState21","_useState22","setSessionToUse","_useState23","_useState24","setFirstUserMessage","fetchMessages","discussionId","text","isTyping","flat","handleSendMessage","currentSessionToUse","terms","firstWord","lowercasedMessage","_terms","_filteredNouns","_verbs","_firstWord","_userDocRef","_timestamp","userDocRef","botMessageDocRef","_context4","trim","nlp","nouns","out","filter","term","verbs","split","filteredNouns","_toConsumableArray","db","path","getDoc","exists","serverTimestamp","setSelectedAndFetchMessages","sessionStorage","setItem","addDoc","handleTextareaResize","prevChatMessages","onSnapshot","docSnapshot","_docSnapshot$data","rawBotResponse","formattedBotResponse","_loop","i","currentTypingSpeed","Math","max","Promise","resolve","setTimeout","slice","delegateYield","blur","handleSessionClick","_callee4","_context5","_ref5","_callee5","sessionId","_context6","_x5","removeItem","fetchLastDiscussionId","_ref6","_callee6","_context7","getItem","textarea","newHeight","min","scrollHeight","handleKeyDown","shiftKey","preventDefault","textareaElement","scrollTop","ChatHistory","TopicPicker","chatMessage","value","e","placeholder","autoComplete","inputMode","onKeyDown","disabled","ChatExperts"],"sourceRoot":""}