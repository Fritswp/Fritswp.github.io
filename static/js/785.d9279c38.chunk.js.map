{"version":3,"file":"static/js/785.d9279c38.chunk.js","mappings":"uRAuGA,MAnGA,SAAqBA,GAA4B,IAAzBC,EAAUD,EAAVC,WAAYC,EAAQF,EAARE,SAClCC,GAA0BC,EAAAA,EAAAA,UAASF,GAASG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAeD,EAAAA,EAAAA,QAAO,MAEtBE,EAAmB,SAACC,GACxB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAE5B,GAAIF,EAAM,CACR,IAAMG,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACfZ,EAASY,EAAML,OAAOM,OACxB,EAEAJ,EAAOK,cAAcR,EACvB,CACF,EAeA,OARAS,EAAAA,EAAAA,YAAU,WACRZ,EAAaa,QAAUC,SAASC,cAAc,SAC9Cf,EAAaa,QAAQG,KAAO,OAC5BhB,EAAaa,QAAQI,OAAS,UAC9BjB,EAAaa,QAAQK,iBAAiB,SAAUjB,EAClD,GAAG,KAIDkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,YAAa,QAASH,SAAC,mBACrCC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWK,QAASnC,EAAW+B,UAC/CC,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAaC,OAAO,QAAQC,YAAY,MAAOV,UAAS,sBAAwBC,UAC1IC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,iCAI3DX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAA0CC,SAGtDzB,GACC0B,EAAAA,EAAAA,KAACY,EAAAA,IAAO,CACNC,IAAKrC,EACLsC,IAAKxC,EACLyC,iBAAkBC,EAAAA,IAClBC,aAAc,CACZC,MAAM,KAIR,YAORrB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWK,QA9CN,WAErBzB,EAAaa,QAAQ4B,OACvB,EA2CqDpB,UACnDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAaC,OAAO,QAAQC,YAAY,MAAOV,UAAS,sBAAwBC,UACxIC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,6VACjD,kBAKVX,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAUC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKO,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAaC,OAAO,QAAQC,YAAY,MAAOV,UAAS,sBAAwBC,SAAA,EACxIC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,uWACrDX,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,sFACjD,qBAKVX,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAUC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAaC,OAAO,QAAQC,YAAY,MAAOV,UAAS,sBAAwBC,UACxIC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,8ZACjD,yBASZ,EC0hBA,MAvnBA,YACsBS,EAAAA,EAAAA,MAAdC,UAAR,IACAnD,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BoD,EAAIlD,EAAA,GAAEmD,EAAOnD,EAAA,GACpBoD,GAAkCrD,EAAAA,EAAAA,UAAS,IAAGsD,GAAApD,EAAAA,EAAAA,GAAAmD,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgCzD,EAAAA,EAAAA,UAAS,IAAG0D,GAAAxD,EAAAA,EAAAA,GAAAuD,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgC7D,EAAAA,EAAAA,UAAS,MAAK8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAAvC/D,EAAQgE,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,GAAgDhE,EAAAA,EAAAA,UAAS,MAAKiE,GAAA/D,EAAAA,EAAAA,GAAA8D,EAAA,GAAvDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA8BpE,EAAAA,EAAAA,UAAS,CAAEqE,KAAM,GAAI9C,KAAM,KAAK+C,GAAApE,EAAAA,EAAAA,GAAAkE,EAAA,GAAvDG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0CzE,EAAAA,EAAAA,UAAS,CAAEqE,KAAM,GAAI9C,KAAM,KAAKmD,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAAnEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA4C7E,EAAAA,EAAAA,WAAS,GAAM8E,GAAA5E,EAAAA,EAAAA,GAAA2E,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA8BjF,EAAAA,EAAAA,UAAS,IAAGkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwBrF,EAAAA,EAAAA,UAAS,IAAGsF,GAAApF,EAAAA,EAAAA,GAAAmF,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BzF,EAAAA,EAAAA,UAAS,IAAG0F,GAAAxF,EAAAA,EAAAA,GAAAuF,EAAA,GAAjCE,GAAMD,EAAA,GAAEE,GAASF,EAAA,GACxBG,IAAgC7F,EAAAA,EAAAA,UAAS,IAAG8F,IAAA5F,EAAAA,EAAAA,GAAA2F,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAAwCjG,EAAAA,EAAAA,UAAS,IAAGkG,IAAAhG,EAAAA,EAAAA,GAAA+F,GAAA,GAA7CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GACpCG,IAA8BrG,EAAAA,EAAAA,UAAS,IAAGsG,IAAApG,EAAAA,EAAAA,GAAAmG,GAAA,GAAnCE,GAAUD,GAAA,GAAEE,GAAOF,GAAA,GAC1BG,IAA0BzG,EAAAA,EAAAA,UAAS,IAAG0G,IAAAxG,EAAAA,EAAAA,GAAAuG,GAAA,GAAxBE,IAAFD,GAAA,GAAUA,GAAA,IACtBE,IAAsC5G,EAAAA,EAAAA,UAAS,IAAG6G,IAAA3G,EAAAA,EAAAA,GAAA0G,GAAA,GAA3CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAA4ChH,EAAAA,EAAAA,UAAS,IAAGiH,IAAA/G,EAAAA,EAAAA,GAAA8G,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAAgCpH,EAAAA,EAAAA,UAAS,IAAGqH,IAAAnH,EAAAA,EAAAA,GAAAkH,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAE5BG,IAA0CxH,EAAAA,EAAAA,WAAS,GAAMyH,IAAAvH,EAAAA,EAAAA,GAAAsH,GAAA,GAAnCE,IAAFD,GAAA,GAAkBA,GAAA,IACtCE,IAAsC3H,EAAAA,EAAAA,WAAS,GAAM4H,IAAA1H,EAAAA,EAAAA,GAAAyH,GAAA,GAA9CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAGlCG,IAA8C/H,EAAAA,EAAAA,UAAS,IAAGgI,IAAA9H,EAAAA,EAAAA,GAAA6H,GAAA,GAAnDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAC1CG,IAAkDnI,EAAAA,EAAAA,WAAS,GAAMoI,IAAAlI,EAAAA,EAAAA,GAAAiI,GAAA,GACjEE,IADwBD,GAAA,GAAsBA,GAAA,IACYpI,EAAAA,EAAAA,UAAS,KAAGsI,IAAApI,EAAAA,EAAAA,GAAAmI,GAAA,GAA/DE,GAAqBD,GAAA,GAAEE,GAAwBF,GAAA,IAItDnH,EAAAA,EAAAA,YAAU,WACV,IAAMsH,EAAcC,EAAAA,GAAKC,mBAAkB,eAAA/I,GAAAgJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACvDP,EAAS,CAADK,EAAAE,KAAA,QAGyD,OAFrEnG,EAAQ4F,GAEFC,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsBT,EAASU,KAAIL,EAAAE,KAAA,GACvCI,EAAAA,EAAAA,IAAOV,GAAY,KAAD,GAA1CC,EAAeG,EAAAO,MACDC,WACdV,EAAWD,EAAgBY,QACpBhK,SACbiE,EAAYoF,EAASrJ,UAErBiE,EAAYiF,EAASlJ,UAErB0D,EAAa2F,EAASY,YAAcf,EAASgB,YAAYC,MAAM,KAAK,IAAM,IAC1ErG,EAAYuF,EAASe,WAAalB,EAASgB,YAAYC,MAAM,KAAK,IAAM,IACxE7E,EAAW+D,EAAShE,SAAW,IAC/BK,EAAQ2D,EAAS5D,MAAQ,IACzBK,GAAUuD,EAASxD,QAAU,IAC7BK,GAAYmD,EAASpD,UAAY,IACjCK,GAAgB+C,EAAShD,cAAgB,IACzCK,GAAQ2C,EAAS5C,YAAc,IAC/BI,GAASqC,EAASmB,OAClBpD,GAAeoC,EAASrC,cAExB/C,EAAYiF,EAASlJ,UACpBuJ,EAAAE,KAAA,gBAEDnE,EAAW,IACXI,EAAQ,IACRI,GAAU,IACVI,GAAY,IACZI,GAAgB,IAChBrC,EAAY,MACZ4C,GAAS,IACTH,GAAQ,IACRO,GAAe,IAAG,yBAAAsC,EAAAe,OAAA,GAAArB,EAAA,KAEjB,gBAAAsB,GAAA,OAAAzK,EAAA0K,MAAA,KAAAC,UAAE,CAAF,CArC0C,IAuC3C,OAAO,WACP9B,GACA,CACA,GAAG,IAEH,IAEMjI,GAAgB,eAAAgK,GAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2B,EAAOzJ,GAAK,IAAAN,EAAAgK,EAAAC,EAAAC,EAAA,OAAA/B,EAAAA,EAAAA,KAAAO,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OACE,KAA7B7I,EAAOM,EAAML,OAAOC,MAAM,IACvB,CAADiK,EAAAtB,KAAA,cACF7I,EAAKoK,KALO,SAKa,CAAAD,EAAAtB,KAAA,QAEiC,OAD5D/E,EAAW,CAAEH,KAAM,iEAAkE9C,KAAM,UAC3FwJ,YAAW,kBAAMvG,EAAW,CAAEH,KAAM,GAAI9C,KAAM,IAAK,GAAE,KAAOsJ,EAAAG,OAAA,iBAM5D,GAFIN,EAAW,CACfO,YAAavK,EAAKa,OAGhB2C,EAAiB,CAAD2G,EAAAtB,KAAA,gBAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,IAEV2B,EAAAA,EAAAA,IAAahH,GAAkB,KAAD,GACpCM,EAAW,CAAEH,KAAM,wBAAyB9C,KAAM,aAClD4J,QAAQC,IAAI,yBAAyBP,EAAAtB,KAAA,iBAAAsB,EAAAvB,KAAA,GAAAuB,EAAAQ,GAAAR,EAAA,SAErCrG,EAAW,CAAEH,KAAK,kCAADiH,OAAoCT,EAAAQ,GAAM9G,SAAWhD,KAAM,UAC5E4J,QAAQI,MAAM,iCAAgCV,EAAAQ,IAAS,QAIrDV,GAAajI,EAAAA,EAAAA,IAAI8I,EAAAA,GAAQ,iBAADF,OAAmB5K,EAAK+K,QAChDb,GAAac,EAAAA,EAAAA,IAAqBf,EAAYjK,EAAMgK,IAE/CiB,GACT,iBACA,SAACC,GACC,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IACrEvH,EAAW,CAAEH,KAAK,aAADiH,OAAeO,EAASG,QAAQ,GAAE,UAAUzK,KAAM,YACrE,IACA,SAACgK,GACC/G,EAAW,CAAEH,KAAK,0BAADiH,OAA4BC,EAAMhH,SAAWhD,KAAM,UACpE4J,QAAQI,MAAM,yBAA0BA,GACxCvG,GAAkB,GAElB+F,YAAW,kBAAMvG,EAAW,CAAEH,KAAM,GAAI9C,KAAM,IAAK,GAAE,IACvD,IACA,YACE0K,EAAAA,EAAAA,IAAerB,EAAWgB,SAASlJ,KAAKwJ,KAAI,eAAAC,GAAAvD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsD,EAAOC,GAAW,OAAAxD,EAAAA,EAAAA,KAAAO,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,OAC7D4B,QAAQC,IAAI,oBAAqBiB,IACjCE,EAAAA,EAAAA,IAAcpJ,EAAM,CAAErD,SAAUuM,IAC7BH,MAAItD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA0D,IAAA,IAAAvD,EAAA,OAAAJ,EAAAA,EAAAA,KAAAO,MAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OAO6D,OANjE/E,EAAW,CAAEH,KAAM,qCAAsC9C,KAAM,YAC/D4J,QAAQC,IAAI,sCACZrH,EAAYsI,GACZlI,EAAoByG,EAAWgB,SAASlJ,KACxCsC,GAAkB,GAEZiE,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsBtG,EAAKuG,KAAI+C,EAAAlD,KAAA,GAC3DmD,EAAAA,EAAAA,IAAUzD,EAAY,CAAEnJ,SAAUuM,IAAe,KAAD,EAEtDtB,YAAW,kBAAMvG,EAAW,CAAEH,KAAM,GAAI9C,KAAM,IAAK,GAAE,KAAM,wBAAAkL,EAAArC,OAAA,GAAAoC,EAAA,MAE5DG,OAAM,SAACpB,GACN/G,EAAW,CAAEH,KAAK,iCAADiH,OAAmCC,EAAMhH,SAAWhD,KAAM,UAC3E4J,QAAQI,MAAM,gCAAiCA,GAE/CR,YAAW,kBAAMvG,EAAW,CAAEH,KAAM,GAAI9C,KAAM,IAAK,GAAE,IACvD,IAAG,wBAAA+K,EAAAlC,OAAA,GAAAgC,EAAA,KACN,gBAAAQ,GAAA,OAAAT,EAAA7B,MAAA,KAAAC,UAAE,CAAF,CArB2C,GAsB9C,IACA,yBAAAM,EAAAT,OAAA,GAAAK,EAAA,mBAEL,gBAlEmBoC,GAAA,OAAArC,EAAAF,MAAA,KAAAC,UAAA,KAuEhBuC,GAAqB,WACvBlI,EAAiB,CAAEP,KAAM,GAAI9C,KAAM,IACrC,EAEMwL,GAAiB,eAAAC,GAAApE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmE,IAAA,IAAAhE,EAAAC,EAAAC,EAAA+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1E,EAAAA,EAAAA,KAAAO,MAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,UACnBpG,EAAK,CAADqK,EAAAjE,KAAA,eAAAiE,EAAAxC,OAAA,iBAK0D,OAL1DwC,EAAAlE,KAAA,EAKDL,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsBtG,EAAKuG,KAAI8D,EAAAjE,KAAA,GACnCI,EAAAA,EAAAA,IAAOV,GAAY,KAAD,EAA3B,KAAfC,EAAesE,EAAA5D,MAEDC,SAAS,CAAD2D,EAAAjE,KAAA,SASqC,OARzDJ,EAAWD,EAAgBY,OAC3BoD,EAAiB/D,EAASsE,WAAY,EACtCN,EAAkBhE,EAASjG,YAAa,EAGxCkK,EAAiBjE,EAASuE,QAAU,EAGpCL,GAAiB7D,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgBtG,EAAKuG,KAAI8D,EAAAjE,KAAA,IACzDoE,EAAAA,EAAAA,IAAUN,GAAgB,KAAD,GAK/B,OAHMC,EAAc5E,EAAAA,GAAKkF,YACnBL,EAAcD,EAAYxN,SAEhC0N,EAAAjE,KAAA,IACMsE,EAAAA,EAAAA,IAAO5E,EAAY,CACvBe,YAAY,GAADsB,OAAK/H,EAAS,KAAA+H,OAAI3H,GAC7BwG,MAAOhH,EAAKgH,MACZhE,aAAc9E,SAASyM,eAAe,qBAAqBC,MAC3DxH,WAAYlF,SAASyM,eAAe,kBAAkBC,MACtD5I,QAAS9D,SAASyM,eAAe,gBAAgBC,MACjDxI,KAAMlE,SAASyM,eAAe,aAAaC,MAC3CpI,OAAQtE,SAASyM,eAAe,eAAeC,MAC/ChI,SAAU1E,SAASyM,eAAe,iBAAiBC,MACnDjH,YAAazF,SAASyM,eAAe,oBAAoBC,MACzDjO,SAAUyN,EACVE,SAAUP,EACVhK,UAAWiK,EACX7F,SAAUW,GACVyF,OAAQN,IACP,KAAD,GAGFjJ,EAAoB,MAEpBS,EAAiB,CAAEP,KAAM,+BAAgC9C,KAAM,YAG/DwJ,YAAW,kBAAM+B,IAAoB,GAAE,KAAM,QAAAU,EAAAjE,KAAA,iBAAAiE,EAAAlE,KAAA,GAAAkE,EAAAnC,GAAAmC,EAAA,SAI/C5I,EAAiB,CAAEP,KAAK,2BAADiH,OAA6BkC,EAAAnC,GAAM9G,SAAWhD,KAAM,UAG3EwJ,YAAW,kBAAM+B,IAAoB,GAAE,KAAM,yBAAAU,EAAApD,OAAA,GAAA6C,EAAA,mBAEhD,kBAzDsB,OAAAD,EAAA1C,MAAA,KAAAC,UAAA,MA2DzBpJ,EAAAA,EAAAA,YAAU,WACN,IAAMsH,EAAcC,EAAAA,GAAKC,mBAAkB,eAAAqF,GAAApF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAmF,EAAOjF,GAAQ,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,WACrDP,EAAS,CAADkF,EAAA3E,KAAA,QAI2D,OAHrEnG,EAAQ4F,GAGFC,GAAaO,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,qBAAsBT,EAASU,KAAIwE,EAAA3E,KAAA,GACvCI,EAAAA,EAAAA,IAAOV,GAAY,KAAD,GAA1CC,EAAegF,EAAAtE,MAEDC,WACZV,EAAWD,EAAgBY,OACjCvC,GAAY4B,EAAS7B,UAAY,KAClC,wBAAA4G,EAAA9D,OAAA,GAAA6D,EAAA,KAEJ,gBAAAE,GAAA,OAAAH,EAAA1D,MAAA,KAAAC,UAAE,CAAF,CAb0C,IAe3C,OAAO,WACL9B,GACF,CACF,GAAG,IAGD,IASM2F,GAAsB,SAACC,GAC7B,IAAMC,GAAeC,EAAAA,EAAAA,GAAOtG,IAC5BqG,EAAgBE,OAAOH,EAAO,GAC9BnG,GAAmBoG,GACnB9F,GAAyB,GAAD8C,QAAAiD,EAAAA,EAAAA,GAAKhG,IAAqB,CAAE8F,IACpD,EAIMI,GAAmB,WACvBtD,QAAQC,IAAI,iBACZtD,IAAe,EACjB,EAOJ,OACIpG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,SACjDuB,IACDtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC7BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oCAAmCC,SAAA,CAAC,aACzCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,WAAUC,SAAEuB,EAAKgH,QAAa,gBAOvDtI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACzCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EACpBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,aAEAH,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaC,SAAA,EAE7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,yBACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,kBAC9BC,EAAAA,EAAAA,KAAA,SACAN,KAAK,OACLI,UAAU,+BACV+M,YAAY,GACZ,aAAW,aACXX,MAAOxK,EACPoL,SAAU,SAAClO,GAAC,OAAK+C,EAAa/C,EAAEE,OAAOoN,MAAM,EAC7Ca,UAAQ,EACR9M,MAAO,CAAE+M,cAAe,cAGxBnN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,iBAC9BC,EAAAA,EAAAA,KAAA,SACAN,KAAK,OACLI,UAAU,+BACV+M,YAAY,GACZ,aAAW,YACXX,MAAOpK,EACPgL,SAAU,SAAClO,GAAC,OAAKmD,EAAYnD,EAAEE,OAAOoN,MAAM,EAC5Ca,UAAQ,EACR9M,MAAO,CAAE+M,cAAe,cAGxBnN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOiN,QAAQ,cAAcnN,UAAU,aAAYC,SAAC,aACpDC,EAAAA,EAAAA,KAAA,SACAN,KAAK,QACLI,UAAU,+BACVoN,GAAG,cACHhB,MAAO5K,EAAOA,EAAKgH,MAAQ,GAC3ByE,UAAQ,EACR9M,MAAO,CAAE+M,cAAe,cAGxBnN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,qBAC9BC,EAAAA,EAAAA,KAAA,SACAkN,GAAG,oBACHxN,KAAK,OACLI,UAAU,+BACV+M,YAAY,0BACZ,aAAW,eACXX,MAAO5H,GACPwI,SAAU,SAAClO,GAAC,OAAK2F,GAAgB3F,EAAEE,OAAOoN,MAAM,QAIpDrM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,sBAC9BC,EAAAA,EAAAA,KAAA,SACEkN,GAAG,iBACHxN,KAAK,OACLI,UAAU,+BACV+M,YAAY,4BACZ,aAAW,YACXX,MAAOxH,GACPoI,SAAU,SAAClO,GAAC,OAAK+F,GAAQ/F,EAAEE,OAAOoN,MAAM,EACxCa,UAAQ,EACR9M,MAAO,CAAE+M,cAAe,cAKxBnN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,8BAC9BC,EAAAA,EAAAA,KAAA,YACAkN,GAAG,mBACHxN,KAAK,OACLI,UAAU,eACVqN,KAAK,IACLN,YAAY,kEACZX,MAAOjH,GACP6H,SAAU,SAAClO,GAAC,OAAKsG,GAAetG,EAAEE,OAAOoN,MAAM,EAC/CjM,MAAO,CAAEmN,OAAQ,iBAIjBpN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,aAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,aAC9BC,EAAAA,EAAAA,KAAA,SACAkN,GAAG,eACHxN,KAAK,OACLI,UAAU,+BACV+M,YAAY,0BACZX,MAAO5I,EACPwJ,SAAU,SAAClO,GAAC,OAAK2E,EAAW3E,EAAEE,OAAOoN,MAAM,QAG3CrM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,UAC9BC,EAAAA,EAAAA,KAAA,SACAkN,GAAG,YACHxN,KAAK,OACLI,UAAU,+BACV+M,YAAY,aACZX,MAAOxI,EACPoJ,SAAU,SAAClO,GAAC,OAAK+E,EAAQ/E,EAAEE,OAAOoN,MAAM,QAGxCrM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,YAC9BC,EAAAA,EAAAA,KAAA,SACAkN,GAAG,cACHxN,KAAK,OACLI,UAAU,+BACV+M,YAAY,SACZX,MAAOpI,GACPgJ,SAAU,SAAClO,GAAC,OAAKmF,GAAUnF,EAAEE,OAAOoN,MAAM,QAG1CrM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,aAAYC,SAAC,cAC9BC,EAAAA,EAAAA,KAAA,SACAkN,GAAG,gBACHxN,KAAK,OACLI,UAAU,+BACV+M,YAAY,WACZX,MAAOhI,GACP4I,SAAU,SAAClO,GAAC,OAAKuF,GAAYvF,EAAEE,OAAOoN,MAAM,aAM5CrM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,UACAN,KAAK,SACLI,UAAU,8BACVK,QAAS+K,GAAkBnL,SAE1B,oBAGDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACsB,UAAvB+C,EAAcpD,OACbM,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWG,MAAO,CAAEoN,MAAO,OAAQtN,SAAE+C,EAAcN,OAE1C,YAAvBM,EAAcpD,OACbM,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWG,MAAO,CAAEoN,MAAO,SAAUtN,SAAE+C,EAAcN,qBASlE3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAEfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BmD,GAAkBjF,IACpB+B,EAAAA,EAAAA,KAAA,OACAc,IAAK7C,EACCqP,IAAI,eACJxN,UAAU,sEACVyN,QAAS,kBAAMpK,GAAkB,EAAK,EACtChD,QAASyM,KAId1J,IACDlD,EAAAA,EAAAA,KAAA,OACAc,IAAG,GAAA2I,OAAK+D,GAAsB,0BAC9BF,IAAI,mBACJxN,UAAU,sEACVgN,SAAU,SAAClO,GAAC,OAAKsD,EAAYtD,EAAEE,OAAOoN,MAAM,EAC5C/L,QAASyM,MAOT/M,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACkB,UAAjB2C,EAAQhD,OACTM,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWG,MAAO,CAAEoN,MAAO,OAAQtN,SAAE2C,EAAQF,OAExC,YAAjBE,EAAQhD,OACTM,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWG,MAAO,CAAEoN,MAAO,SAAUtN,SAAE2C,EAAQF,OAE1C,aAAjBE,EAAQhD,OACTM,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAWG,MAAO,CAAEoN,MAAO,QAAStN,SAAE2C,EAAQF,WAG3D3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,IAAA0J,OAAK/H,EAAS,KAAA+H,OAAI3H,GAAW,QAC3D9B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,SAAE2E,MAClD7E,EAAAA,EAAAA,MAAA,UAAQH,KAAK,SAASI,UAAU,qDAAoDC,SAAA,EACpFC,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BE,QAAQ,YAAYD,KAAK,eAAeoN,MAAM,KAAK3N,UAAU,uBAAsBC,UAC3HC,EAAAA,EAAAA,KAAA,QAAMW,EAAE,8VAERX,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,gBAEvBF,EAAAA,EAAAA,MAAA,UAAQH,KAAK,SAASI,UAAU,kDAAiDC,SAAA,EACjFC,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BE,QAAQ,YAAYD,KAAK,eAAeoN,MAAM,KAAK3N,UAAU,uBAAsBC,UAC3HC,EAAAA,EAAAA,KAAA,QAAM0N,SAAS,UAAU/M,EAAE,ybAAybgN,SAAS,eAE7d3N,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,4BASvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UAC1DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,0BACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAA8BC,UAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mCAAkCC,UACjDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,QACAF,UAAU,eACVK,QAAS,WACTX,SAASyM,eAAe,cAAc9K,OACtC,EACAlB,MAAO,CAAE2N,OAAQ,WAAY7N,UAE7BC,EAAAA,EAAAA,KAAA,OAAKI,MAAM,6BAA6BE,QAAQ,YAAYmN,MAAM,KAAK3N,UAAU,eAAcC,UAC/FC,EAAAA,EAAAA,KAAA,QAAM0N,SAAS,UAAU/M,EAAE,4WAA4WgN,SAAS,iBAGhZ3N,EAAAA,EAAAA,KAAA,SACAN,KAAK,OACLC,OAAO,UACPuN,GAAG,aACHJ,SAAUnO,GACVsB,MAAO,CAAE4N,QAAS,WAElBhO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,SAAC,kBAC1CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAAC,0DASjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UAC1DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,uBACrBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8FAGHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACrBC,EAAAA,EAAAA,KAAA,SACAN,KAAK,OACLI,UAAU,+BACV+M,YAAY,wCACZX,MAAO7G,GACPyH,SAAU,SAAClO,GAAC,OAAK0G,GAAkB1G,EAAEE,OAAOoN,MAAM,EAClD4B,UAAW,SAAClP,GACE,MAAVA,EAAEmP,KAAyC,KAA1B1I,GAAe2I,SACpCpP,EAAEqP,iBAvUuB,WACzB,GAA8B,KAA1B5I,GAAe2I,QACf5H,GAAgB8H,OAAS,EAAG,CAChC,IAAMzB,EAAe,GAAAhD,QAAAiD,EAAAA,EAAAA,GAAOtG,IAAe,CAAEf,GAAe2I,SAC5D3H,GAAmBoG,GACnBnH,GAAkB,GAClB,CAEA,CAgUA6I,GAEA,EACAC,SAAU3I,GAASyI,QAAU,OAO7BrO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC/BqG,GAAgBiI,KAAI,SAACC,EAAS9B,GAAK,OAClC3M,EAAAA,EAAAA,MAAA,OAAiBM,QAAS,kBAAMoM,GAAoBC,EAAM,EAAE1M,UAAU,0EAAyEC,SAAA,CAC5IuO,GACDtO,EAAAA,EAAAA,KAAA,OAAKG,QAAS,kBAAMoM,GAAoBC,EAAM,EAAEpM,MAAM,6BAA6BiN,MAAM,UAAUhN,KAAK,OAAOC,QAAQ,YAAYE,YAAa,EAAGD,OAAO,eAAegO,OAAO,KAAKd,MAAM,KAAKxN,MAAO,CAAEuO,WAAY,QAASzO,UAC5NC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,6BAH/C6L,EAKJ,IAGP/G,GAAS4I,KAAI,SAACC,EAAS9B,GAAK,OAC3B3M,EAAAA,EAAAA,MAAA,OAAiBM,QAAS,kBAAMsO,cAAcjC,EAAM,EAAE1M,UAAU,0EAAyEC,SAAA,CACtIuO,GACDtO,EAAAA,EAAAA,KAAA,OAAKG,QAAS,kBAAMsO,cAAcjC,EAAM,EAAEpM,MAAM,6BAA6BiN,MAAM,UAAUhN,KAAK,OAAOC,QAAQ,YAAYE,YAAa,EAAGD,OAAO,eAAegO,OAAO,KAAKd,MAAM,KAAKxN,MAAO,CAAEuO,WAAY,QAASzO,UACtNC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,EAAE,6BAH/C6L,EAKJ,IAGTpG,GAAgB8H,OAASzI,GAASyI,QArVJ,IAsV7BlO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,0EAU3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDAAoDC,UACnEC,EAAAA,EAAAA,KAAA,UAAQN,KAAK,SAASI,UAAU,wBAAuBC,SAAC,+BASvDiG,KACGhG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UAEzBC,EAAAA,EAAAA,KAAC0O,EAAY,CACXxM,YAAaA,EACbiB,kBAAmBA,EACnB0C,iBAAkBA,GAClB7H,WA3WS,WACjBiI,IAAe,EACjB,EA0WUhI,SAAUA,UAOpB,C","sources":["components/ImageCropper.js","Users/ExpertProfile.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { CropperRef, Cropper, CircleStencil } from 'react-advanced-cropper';\nimport 'react-advanced-cropper/dist/style.css';\n\nfunction ImageCropper({ closeModal, photoURL }) {\n  const [image, setImage] = useState(photoURL); // Set the default image to the user's photoURL\n\n  const cropperRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setImage(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleNewPhoto = () => {\n    // Trigger the file input to open the file dialog\n    fileInputRef.current.click();\n  };\n\n  useEffect(() => {\n    fileInputRef.current = document.createElement('input');\n    fileInputRef.current.type = 'file';\n    fileInputRef.current.accept = 'image/*';\n    fileInputRef.current.addEventListener('change', handleFileUpload);\n  }, []);\n\n\n  return (\n    <div className=\"modalimage align-items-center\">\n      <div className=\"top-section\">\n        <div style={{ marginRight: '10px' }}>Profile image</div>\n        <button className=\"btn-crop\" onClick={closeModal}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      <div className='centerimage'>\n      <div className=\"croppers-wizard__body\">\n        <div className='default-cropper croppers-wizard__cropper'>\n\n       \n          {image ? (\n            <Cropper\n              ref={cropperRef}\n              src={image}\n              stencilComponent={CircleStencil}\n              stencilProps={{\n                grid: true,\n              }}\n         \n            />\n          ) : null}\n</div>\n\n</div>\n\n      </div>\n      \n      <div className=\"button-section with-divider\">\n  <button className=\"btn-crop\" onClick={handleNewPhoto}>\n    <div className=\"button-content\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42\" />\n      </svg>\n\n      New Photo\n    </div>\n  </button>\n  <button className=\"btn-crop\">\n    <div className=\"button-content\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\" />\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\" />\n      </svg>\n\n      Upload Photo\n    </div>\n  </button>\n  <button className=\"btn-crop\">\n    <div className=\"button-content\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"  stroke=\"white\" strokeWidth=\"1.5\"  className={`w-6 h-6 smaller-svg`}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\n      </svg>\n\n      Delete Photo\n    </div>\n  </button>\n</div>\n\n    </div>\n  );\n}\n\nexport default ImageCropper;\n","import React, { useState, useEffect } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteField, deleteDoc, ollection, query, where, getDocs, setDoc } from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\n\nconst [isCropperOpen, setIsCropperOpen] = useState(false);\nconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [showUpdateMessage, setShowUpdateMessage] = useState(false);\nconst [removedKeywordIndices, setRemovedKeywordIndices] = useState([]);\n\n\n\nuseEffect(() => {\nconst unsubscribe = auth.onAuthStateChanged(async (authUser) => {\nif (authUser) {\nsetUser(authUser);\n\nconst userDocRef = doc(firestore, 'expertApplications', authUser.uid);\nconst userDocSnapshot = await getDoc(userDocRef);\nif (userDocSnapshot.exists()) {\nconst userData = userDocSnapshot.data();\nif (userData.photoURL) {\nsetPhotoURL(userData.photoURL);\n} else {\nsetPhotoURL(authUser.photoURL);\n}\nsetFirstName(userData.first_name || authUser.displayName.split(' ')[0] || '');\nsetLastName(userData.last_name || authUser.displayName.split(' ')[1] || '');\nsetAddress(userData.address || '');\nsetCity(userData.city || '');\nsetCounty(userData.county || '');\nsetPostcode(userData.postcode || '');\nsetMobileNumber(userData.mobileNumber || '');\nsetRole(userData.occupation || '');\nsetEmail(authUser.email); // Set email from authUser\nsetDescription(userData.description)\n} else {\nsetPhotoURL(authUser.photoURL);\n}\n} else {\nsetAddress('');\nsetCity('');\nsetCounty('');\nsetPostcode('');\nsetMobileNumber('');\nsetPhotoURL(null);\nsetEmail(''); // Clear email\nsetRole('');\nsetDescription('')\n}\n});\n\nreturn () => {\nunsubscribe();\n};\n}, []);\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024;\n\nconst handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (file.size > MAX_FILE_SIZE) {\n        setMessage({ text: 'File size is too big, max 500kb. Please select a smaller file.', type: 'error' });\n        setTimeout(() => setMessage({ text: '', type: '' }), 3000); // Clear the message after 3 seconds\n        return;\n      }\n  \n      const metadata = {\n        contentType: file.type,\n      };\n  \n      if (previousPhotoRef) {\n        try {\n          await deleteObject(previousPhotoRef);\n          setMessage({ text: 'Profile photo removed', type: 'progress' });\n          console.log('Profile photo removed');\n        } catch (error) {\n          setMessage({ text: `Error deleting previous photo: ${error.message}`, type: 'error' });\n          console.error('Error deleting previous photo:', error);\n        }\n      }\n  \n      const storageRef = ref(storage, `profileImages/${file.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, file, metadata);\n  \n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          setMessage({ text: `Upload is ${progress.toFixed(2)}% done`, type: 'progress' });\n        },\n        (error) => {\n          setMessage({ text: `Error uploading image: ${error.message}`, type: 'error' });\n          console.error('Error uploading image:', error);\n          setImageLoadError(true); // Handle image load error\n          // Clear the error message after 3 seconds\n          setTimeout(() => setMessage({ text: '', type: '' }), 3000);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            console.log('File available at', downloadURL);\n            updateProfile(user, { photoURL: downloadURL })\n              .then(async () => {\n                setMessage({ text: 'Profile photo updated successfully', type: 'success' });\n                console.log('Profile photo updated successfully');\n                setPhotoURL(downloadURL);\n                setPreviousPhotoRef(uploadTask.snapshot.ref);\n                setImageLoadError(false); // Reset imageLoadError to false on successful upload\n                // Update Firestore document with new photoURL\n                const userDocRef = doc(firestore, 'expertApplications', user.uid);\n                await updateDoc(userDocRef, { photoURL: downloadURL });\n                // Clear the message after 3 seconds\n                setTimeout(() => setMessage({ text: '', type: '' }), 3000);\n              })\n              .catch((error) => {\n                setMessage({ text: `Error updating profile photo: ${error.message}`, type: 'error' });\n                console.error('Error updating profile photo:', error);\n                // Clear the error message after 3 seconds\n                setTimeout(() => setMessage({ text: '', type: '' }), 3000);\n              });\n          });\n        }\n      );\n    }\n  };\n  \n\n\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n  \n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n  \n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; // Preserve the approved status\n        const customURLStatus = userData.customURL || false;\n  \n        // Get the existing points from the document\n        const existingPoints = userData.points || 0;\n  \n        // Delete the old userProfiles UID if it exists\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n  \n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n  \n        // Update Firestore document with new user data and preserve the points\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus, // Preserve the approved field\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints, // Preserve the points field\n        });\n  \n        // Clear the previousPhotoRef state\n        setPreviousPhotoRef(null);\n  \n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n  \n        // Clear the message after 3 seconds\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      // Set the error message\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n  \n      // Clear the error message after 3 seconds\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n  \n        // Assuming 'expertApplications' is the collection containing user data\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n  \n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n        }\n      }\n    });\n  \n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n\n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 5) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n    const updatedKeywords = [...currentKeywords];\n    updatedKeywords.splice(index, 1);\n    setCurrentKeywords(updatedKeywords);\n    setRemovedKeywordIndices([...removedKeywordIndices, index]);\n    };\n\n    const MAX_KEYWORDS_LIMIT = 5; \n    \n    const handleImageClick = () => {\n      console.log('Image clicked'); // Check if this message appears in the console\n      setIsModalOpen(true);\n    };\n  \n    const closeModal = () => {\n      setIsModalOpen(false);\n    };\n    \n\nreturn (\n    <div className=\"profile-container\">\n    <div className=\"profile-intro-section\">\n    <div className=\"container\">\n    <div className=\"row align-items-center text-white\">\n    {user && (\n    <div className=\"welcome-text\">\n    <h1 className=\"display-3 fw-bold text-capitalize\">\n    Welcome, <span className=\"email-h3\">{user.email}</span>!\n    </h1>\n    </div>\n    )}\n    </div>\n    </div>\n    </div>\n    <div className=\"profile-section\">\n    <div className=\"content profile-content \">\n    <div className=\"row\">\n    <div className=\"my-4\">\n    <h3>My Profile</h3>\n    <hr />\n    </div>\n    <form className=\"file-upload\">\n    \n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-8 col-12\">\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <h4 className=\"mb-4\">General information</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">First Name *</label>\n    <input\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"\"\n    aria-label=\"First name\"\n    value={firstName} // Display user's first name here\n    onChange={(e) => setFirstName(e.target.value)}\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Last Name *</label>\n    <input\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"\"\n    aria-label=\"Last name\"\n    value={lastName} // Display user's last name here\n    onChange={(e) => setLastName(e.target.value)}\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n    <input\n    type=\"email\"\n    className=\"form-control form-control-lg\"\n    id=\"inputEmail4\"\n    value={user ? user.email : ''} // Display user's email here\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Mobile number *</label>\n    <input\n    id=\"inputMobileNumber\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your Phone number\"\n    aria-label=\"Phone number\"\n    value={mobileNumber} // Display user's mobile number here\n    onChange={(e) => setMobileNumber(e.target.value)}\n    />\n    </div>\n\n<div className=\"col-md-12\">\n  <label className=\"form-label\">Role/Expertise *</label>\n  <input\n    id=\"inputExpertise\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your role/expertise\"\n    aria-label=\"your Role\"\n    value={occupation} // Use setRole here\n    onChange={(e) => setRole(e.target.value)} // Use setRole here\n    readOnly // Make it read-only\n    style={{ pointerEvents: 'none' }}\n  />\n</div>\n\n\n    <div className=\"col-md-12\">\n    <label className=\"form-label\">Description of Expertise</label>\n    <textarea\n    id=\"inputDescription\"\n    type=\"text\"\n    className=\"form-control\"\n    rows=\"4\"\n    placeholder=\"Enter a brief description of your expertise or how you can help\"\n    value={description} // Create a 'description' state and update it accordingly\n    onChange={(e) => setDescription(e.target.value)}\n    style={{ resize: 'none' }}\n    />\n    </div>\n    </div>\n    <div className=\"py-5 rounded mt-4\">\n    <div className=\"row g-3\">\n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    \n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg mb-4\"\n    onClick={updateProfileInfo}\n    \n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    \n    </div>\n    </div>\n    </div>\n    </div>\n    \n    <div className=\"col-xl-4 col-12\">\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n    <div className=\"card-profile\">\n    <div className=\"profile-cover rounded-top\">\n    </div>\n    <div className=\"row g-3 \">\n    <div className=\"text-center\">\n    <div className=\"pb-5 card-body\">\n    {!imageLoadError && photoURL && (\n    <img\n    src={photoURL}\n          alt=\"User Profile\"\n          className=\"card-img user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-5\"\n          onError={() => setImageLoadError(true)}\n          onClick={handleImageClick}\n    />\n    )}\n    \n    {imageLoadError && (\n    <img\n    src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n    alt=\"Custom 404 Image\"\n    className=\"card-img user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-5\"\n    onChange={(e) => setPhotoURL(e.target.value)}\n    onClick={handleImageClick} \n    />\n    )}\n \n\n\n\n    <div>\n    {message.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n    )}\n    {message.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n    )}\n    {message.type === 'progress' && (\n    <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n    )}\n    </div>\n    <div className=\"card-title h5\">{`${firstName} ${lastName}`} </div>\n    <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n    <button type=\"button\" className=\"me-4 btn btn-primary btn-sm rounded-pill pt-2 pb-2\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n    <path d=\"M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z\" />\n    </svg>\n    <span className=\"me-2\">Connect</span> \n    </button>\n    <button type=\"button\" className=\"btn btn-secondary btn-sm rounded-pill pt-2 pb-2\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"25\" className=\"me-2 svg-inline--fa \">\n    <path fillRule=\"evenodd\" d=\"M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z\" clipRule=\"evenodd\" />\n    </svg>\n    <span className=\"me-2\">Message</span> \n    </button>\n    \n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    \n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <h5 className=\"mb-4\">Select profile photo</h5>\n    <div className=\"d-xl-flex align-items-center\">\n    <div className=\"file-field\">\n    <div className=\"d-flex justify-content-xl-center\">\n    <div className=\"d-flex\">\n    <span\n    className=\"icon icon-md\"\n    onClick={() => {\n    document.getElementById('customFile').click();\n    }}\n    style={{ cursor: 'pointer' }}\n    >\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"45\" className=\"w-6 h-6 me-3\">\n    <path fillRule=\"evenodd\" d=\"M18.97 3.659a2.25 2.25 0 00-3.182 0l-10.94 10.94a3.75 3.75 0 105.304 5.303l7.693-7.693a.75.75 0 011.06 1.06l-7.693 7.693a5.25 5.25 0 11-7.424-7.424l10.939-10.94a3.75 3.75 0 115.303 5.304L9.097 18.835l-.008.008-.007.007-.002.002-.003.002A2.25 2.25 0 015.91 15.66l7.81-7.81a.75.75 0 011.061 1.06l-7.81 7.81a.75.75 0 001.054 1.068L18.97 6.84a2.25 2.25 0 000-3.182z\" clipRule=\"evenodd\" />\n    </svg>\n    </span>\n    <input\n    type=\"file\"\n    accept=\"image/*\"\n    id=\"customFile\"\n    onChange={handleFileUpload}\n    style={{ display: 'none' }}\n    />\n    <div className=\"d-md-block text-start\">\n    <div className=\"fw-normal text-dark mb-1\">Choose Image</div>\n    <div className=\"text-gray small\">JPG, GIF or PNG. Max size of 800K</div>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n  \n \n    <div className=\"me-3\">\n    <input\n    type=\"text\"\n    className='form-control form-control-lg'\n    placeholder=\"Type a keyword and press Space to add\"\n    value={currentKeyword}\n    onChange={(e) => setCurrentKeyword(e.target.value)}\n    onKeyDown={(e) => {\n    if (e.key === ' ' && currentKeyword.trim() !== '') {\n    e.preventDefault(); // Prevent the Space character from being entered into the input\n    handleAddKeyword(); // Call the handleAddKeyword function\n    }\n    }}\n    disabled={keywords.length >= 5}\n    />\n    \n\n    </div>\n   \n  \n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"btn btn-primary rounded-pill d-inline-flex align-items-center me-2 mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" color='#FFFFFF' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"btn btn-primary rounded-pill d-inline-flex align-items-center me-2 mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" color='#FFFFFF' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"error-message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    \n    <div className=\"gap-3 d-md-flex justify-content-md-end text-center\">\n    <button type=\"button\" className=\"btn btn-danger btn-lg\">\n    Delete profile\n    </button>\n    </div>\n    </form>\n    </div>\n    </div>\n    \n    </div>\n    {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modalcrop \">\n          \n            <ImageCropper\n              setPhotoURL={setPhotoURL}\n              setImageLoadError={setImageLoadError}\n              setIsCropperOpen={setIsCropperOpen}\n              closeModal={closeModal}\n              photoURL={photoURL}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n    );\n    }\n    \n\nexport default ExpertProfile;\n\n"],"names":["_ref","closeModal","photoURL","_useState","useState","_useState2","_slicedToArray","image","setImage","cropperRef","useRef","fileInputRef","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","result","readAsDataURL","useEffect","current","document","createElement","type","accept","addEventListener","_jsxs","className","children","_jsx","style","marginRight","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Cropper","ref","src","stencilComponent","CircleStencil","stencilProps","grid","click","useParams","customURL","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","setPhotoURL","_useState9","_useState10","previousPhotoRef","setPreviousPhotoRef","_useState11","text","_useState12","message","setMessage","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","setIsCropperOpen","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","_useState45","_useState46","removedKeywordIndices","setRemovedKeywordIndices","unsubscribe","auth","onAuthStateChanged","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","stop","_x","apply","arguments","_ref2","_callee4","metadata","storageRef","uploadTask","_context4","size","setTimeout","abrupt","contentType","deleteObject","console","log","t0","concat","error","storage","name","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","toFixed","getDownloadURL","then","_ref3","_callee3","downloadURL","_context3","updateProfile","_callee2","_context2","updateDoc","catch","_x3","_x2","clearUpdateMessage","updateProfileInfo","_ref5","_callee5","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context5","approved","points","deleteDoc","currentUser","setDoc","getElementById","value","_ref6","_callee6","_context6","_x4","handleRemoveKeyword","index","updatedKeywords","_toConsumableArray","splice","handleImageClick","placeholder","onChange","readOnly","pointerEvents","htmlFor","id","rows","resize","color","alt","onError","process","width","fillRule","clipRule","cursor","display","onKeyDown","key","trim","preventDefault","length","handleAddKeyword","disabled","map","keyword","height","marginLeft","removeKeyword","ImageCropper"],"sourceRoot":""}