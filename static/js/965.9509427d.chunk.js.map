{"version":3,"file":"static/js/965.9509427d.chunk.js","mappings":"8KA+XA,UAzXA,WACE,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8Cb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAkCjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA5BE,GAAFD,EAAA,GAAcA,EAAA,IAC9BE,GAAgCpB,EAAAA,EAAAA,UAAS,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA3BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,GAA0CvB,EAAAA,EAAAA,UAAS,IAAGwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAA4C3B,EAAAA,EAAAA,UAAS,IAAG4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAkC/B,EAAAA,EAAAA,UAAS,IAAGgC,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgCnC,EAAAA,EAAAA,WAAS,GAAMoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,GAAgCvC,EAAAA,EAAAA,WAAS,GAAMwC,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,GAA8D3C,EAAAA,EAAAA,UAAS,IAAG4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAnEE,EAAuBD,EAAA,GAAEE,EAA0BF,EAAA,GAC1DG,GAA0D/C,EAAAA,EAAAA,UAAS,IAAGgD,GAAA9C,EAAAA,EAAAA,GAAA6C,EAAA,GAA/DE,GAAqBD,EAAA,GAAEE,GAAwBF,EAAA,IAEtDG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnBV,EAAYW,OAAOC,YAAc,IACnC,EAMA,OAJAF,IAEAC,OAAOE,iBAAiB,SAAUH,GAE3B,WACLC,OAAOG,oBAAoB,SAAUJ,EACvC,CACF,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACR,IAAMM,EAAcC,EAAAA,GAAKC,oBAAmB,SAACC,GAC3C,GAAIA,EAAU,CACZxD,EAAQwD,GACR,IAAMC,EAAYD,EAASE,YAAYC,MAAM,KAC7C5C,EAAa0C,EAAU,IAAM,IAC7BvC,EAAYuC,EAAU,IAAM,IAG5B,IAAMG,EAAUJ,EAASK,IACnBC,GAAiBC,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgBJ,IAEtDK,EAAAA,EAAAA,IAAOH,GACJI,MAAK,SAACC,GACL,GAAIA,EAAYC,SAAU,CACxB,IAAMC,EAAWF,EAAYG,OACzBD,EAASxC,YACXC,EAAauC,EAASxC,WAEtB0C,aAAaC,QAAQ,YAAaH,EAASxC,WAE/C,CACF,IACC4C,OAAM,SAACC,GACNC,QAAQD,MAAM,8BAA+BA,EAC/C,GACJ,MACE1E,EAAQ,MACRe,EAAa,IACbG,EAAY,GAEhB,IAGM0D,EAAkBL,aAAaM,QAAQ,aAK7C,OAJID,GACF9C,EAAa8C,GAGR,WACLvB,GACF,CACF,GAAG,IAKL,IA+CMyB,GAAwB,WAC5B,GAAkB,KAAdjD,EAGF,OAFA8C,QAAQD,MAAM,6BACd5B,GAAyB,+BAK3B,IAAMiC,EAAqBlD,EAAUmD,cAG/BC,GAAkBC,EAAAA,EAAAA,IAAWlB,EAAAA,GAAW,gBACxCmB,GAAiBC,EAAAA,EAAAA,IAAMH,GAAiBI,EAAAA,EAAAA,IAAM,YAAa,KAAMN,KAEvEO,EAAAA,EAAAA,IAAQH,GACLjB,MAAK,SAACqB,GACL,GAAIA,EAAcC,KAAO,EAEvB1C,GAAyB,2DACzBJ,EAA2B,QACtB,CAEL,IAAMkB,EAAU7D,EAAK8D,IACfC,GAAiBC,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,eAAgBJ,IAEtD6B,EAAAA,EAAAA,IAAU3B,EAAgB,CACxBjC,UAAWkD,IAEVb,MAAK,WACJS,QAAQe,IAAI,mCACZhD,EAA2B,mCAC3BI,GAAyB,GAC3B,IACC2B,OAAM,SAACC,GACNC,QAAQD,MAAM,8BAA+BA,GAC7C5B,GAAyB,8BACzBJ,EAA2B,GAC7B,GACJ,CACF,IACC+B,OAAM,SAACC,GACNC,QAAQD,MAAM,2CAA4CA,GAC1D5B,GAAyB,2CACzBJ,EAA2B,GAC7B,GACJ,EA4BE,OACEiD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAIfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,aAGAA,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,GAAEC,UACfF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EAErCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,gBACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWvD,EAAW,GAAK,cAAcwD,SAAA,EAElEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAWC,SAAC,oCAC5BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLH,UAAU,+BACVI,YAAY,WACZC,MAAOpE,EACPqE,SAAU,SAACC,GAAC,OAAKrE,EAAaqE,EAAEC,OAAOH,MAAM,EAC7CI,UAvDuB,SAACC,GACR,UAAdA,EAAMC,KACRzB,IAEJ,KAqDAa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OACAU,MAAM,6BACNC,MAAM,UACNC,KAAOzE,EAAoB,UAAT,OAClB0E,QAAQ,YACRC,YAAa,EACbC,OAAO,eACPC,OAAO,KACPC,MAAM,KACNC,QA7D0B,WAC1B,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGhB,MAAK,mCAAAmB,OAAsCvF,GAC9CqF,SAASG,KAAKC,YAAYL,GAC1BA,EAAGM,SACHL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAC1B/E,GAAY,GAGZ,IAAMwF,EAAkBR,SAASS,cAAc,cAC/CD,EAAgBE,MAAMC,QAAU,eAEhCC,YAAW,WACT5F,GAAY,GACZwF,EAAgBE,MAAMC,QAAU,MAClC,GAAG,IACL,EA6CED,MAAO,CAAEG,OAAQ,UAAWC,UAAW,OAAQnC,SAG7C5D,GAOA6D,EAAAA,EAAAA,KAAA,OAAMU,MAAM,6BAA6BE,KAAK,OAAOC,QAAQ,YAAYC,YAAa,IAAKC,OAAO,eAAejB,UAAU,UAASC,UACpIC,EAAAA,EAAAA,KAAA,QAAMmC,cAAc,QAAQC,eAAe,QAAQC,EAAE,6BAPrDrC,EAAAA,EAAAA,KAAA,QACEmC,cAAc,QACdC,eAAe,QACfC,EAAE,+iBAQRrC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAWC,SACtB5D,EAAW,UAAY,eAQtB0D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,CACpBpD,IACGqD,EAAAA,EAAAA,KAAA,KAAG8B,MAAO,CAAEnB,MAAO,QAAS2B,OAAQ,UAAWvC,SAC5CpD,IAGJI,KACCiD,EAAAA,EAAAA,KAAA,KAAG8B,MAAO,CAAEnB,MAAO,MAAO2B,OAAQ,UAAWvC,SAC1ChD,MAGLiD,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLH,UAAU,kBACVoB,QAASlC,GAAsBe,SAGhC,yBAMY9F,GAA4C,eAApCA,EAAKsI,aAAa,GAAGC,WAChC,MAEExC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAc2C,aAAa,eAAc1C,UACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,cACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO0C,QAAQ,wBAAwB5C,UAAU,aAAYC,SAAC,oBAG9DC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLH,UAAU,+BACV6C,GAAG,wBACHxC,MAAO9F,EACP+F,SAAU,SAACC,GAAC,OAAK/F,EAAe+F,EAAEC,OAAOH,MAAM,QAGnDN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO0C,QAAQ,wBAAwB5C,UAAU,aAAYC,SAAC,oBAG9DC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLH,UAAU,+BACV6C,GAAG,wBACHxC,MAAO1F,EACP2F,SAAU,SAACC,GAAC,OAAK3F,EAAe2F,EAAEC,OAAOH,MAAM,QAGnDN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO0C,QAAQ,wBAAwB5C,UAAU,aAAYC,SAAC,wBAG9DC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLH,UAAU,+BACV6C,GAAG,wBACHxC,MAAOtF,EACPuF,SAAU,SAACC,GAAC,OAAKvF,EAAmBuF,EAAEC,OAAOH,MAAM,IAEtDxE,IACjBqE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAEpE,IAEhCJ,IACCyE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAExE,WAIhByE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLH,UAAU,kBACVoB,QAxQG,WAC3B,GAAoB,KAAhBzG,GAA0C,KAApBI,EAK1B,GAAIJ,IAAgBI,EAApB,CAKA,IAAIU,EAAgB,GAcpB,GAZId,EAAYmI,OAAS,EACvBrH,EAAgB,2CACN,QAAQsH,KAAKpI,GAEb,QAAQoI,KAAKpI,GAEb,KAAKoI,KAAKpI,GAEV,YAAYoI,KAAKpI,KAC3Bc,EAAgB,yDAFhBA,EAAgB,4CAFhBA,EAAgB,uDAFhBA,EAAgB,uDASdA,EACFC,EAAiBD,OADnB,CAKA,IAAMtB,EAAOuD,EAAAA,GAAKsF,aAClBC,EAAAA,EAAAA,IAAe9I,EAAMQ,GAClB2D,MAAK,WACJxC,EAAkB,iCAClBtB,EAAe,IACfI,EAAe,IACfI,EAAmB,IACnBU,EAAiB,GACnB,IACCmD,OAAM,SAACC,GACNoE,MAAM,4BAA8BpE,EAAMqE,QAC5C,GAbF,CAnBA,MAFEzH,EAAiB,uDALjBA,EAAiB,8BAwCrB,EA8NwDuE,SAC/B,qCAYbC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4CAA2CC,UACxDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UAErCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,oBACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UAC3CC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASH,UAAU,iBAAgBC,SAAC,qCAYjD,C","sources":["Users/Settings.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { auth, storage, firestore } from '../firebase';\nimport { updatePassword } from 'firebase/auth';\nimport { isPasswordValid } from '../firebase';\nimport { doc, setDoc, getDoc, updateDoc, deleteField, collection, query, where, getDocs } from 'firebase/firestore';\n\nfunction Settings() {\n  const [user, setUser] = useState(null);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [customURL, setCustomURL] = useState('');\n  const [isCopied, setIsCopied] = useState(false);\n\n  const [isMobile, setIsMobile] = useState(false);\n\n  const [customURLSuccessMessage, setCustomURLSuccessMessage] = useState('');\n  const [customURLErrorMessage, setCustomURLErrorMessage] = useState('');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Adjust the breakpoint as needed\n    };\n  \n    handleResize(); // Call it initially to set the initial state\n  \n    window.addEventListener('resize', handleResize);\n  \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const splitName = authUser.displayName.split(' ');\n        setFirstName(splitName[0] || '');\n        setLastName(splitName[1] || '');\n  \n        // Fetch customURL from Firestore\n        const userUID = authUser.uid;\n        const userProfileRef = doc(firestore, 'userProfiles', userUID);\n  \n        getDoc(userProfileRef)\n          .then((docSnapshot) => {\n            if (docSnapshot.exists()) {\n              const userData = docSnapshot.data();\n              if (userData.customURL) {\n                setCustomURL(userData.customURL);\n                // Store customURL in local storage\n                localStorage.setItem('customURL', userData.customURL);\n              }\n            }\n          })\n          .catch((error) => {\n            console.error('Error fetching custom URL: ', error);\n          });\n      } else {\n        setUser(null);\n        setFirstName('');\n        setLastName('');\n      }\n    });\n  \n    // Retrieve customURL from local storage on component mount\n    const storedCustomURL = localStorage.getItem('customURL');\n    if (storedCustomURL) {\n      setCustomURL(storedCustomURL);\n    }\n  \n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n\n  \n\nconst handlePasswordUpdate = () => {\n  if (newPassword === '' && confirmPassword === '') {\n    setPasswordError(\"Please type a new password.\");\n    return;\n  }\n\n  if (newPassword !== confirmPassword) {\n    setPasswordError(\"New password and confirm password don't match.\");\n    return;\n  }\n\n  let passwordError = '';\n\n  if (newPassword.length < 8) {\n    passwordError = 'Password must be more than 7 characters.';\n  } else if (!/[a-z]/.test(newPassword)) {\n    passwordError = 'Password must contain at least one lowercase letter.';\n  } else if (!/[A-Z]/.test(newPassword)) {\n    passwordError = 'Password must contain at least one uppercase letter.';\n  } else if (!/\\d/.test(newPassword)) {\n    passwordError = 'Password must contain at least one digit.';\n  } else if (!/[@$!%*?&]/.test(newPassword)) {\n    passwordError = 'Password must contain at least one special character.';\n  }\n\n  if (passwordError) {\n    setPasswordError(passwordError);\n    return;\n  }\n\n  const user = auth.currentUser;\n  updatePassword(user, newPassword)\n    .then(() => {\n      setSuccessMessage('Password updated successfully');\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setPasswordError('');\n    })\n    .catch((error) => {\n      alert('Error updating password: ' + error.message);\n    });\n};\n\n\n\n\nconst handleCustomURLUpdate = () => {\n  if (customURL === '') {\n    console.error('Custom URL is empty.');\n    setCustomURLErrorMessage('Custom URL cannot be empty.');\n    return;\n  }\n\n  // Convert customURL to lowercase\n  const lowercaseCustomURL = customURL.toLowerCase();\n\n  // Check if the custom URL is already in use\n  const userProfilesRef = collection(firestore, 'userProfiles');\n  const customURLQuery = query(userProfilesRef, where('customURL', '==', lowercaseCustomURL));\n\n  getDocs(customURLQuery)\n    .then((querySnapshot) => {\n      if (querySnapshot.size > 0) {\n        // Custom URL is already in use\n        setCustomURLErrorMessage('Custom URL is already taken. Please choose another one.');\n        setCustomURLSuccessMessage('');\n      } else {\n        // Custom URL is unique, update it in the database\n        const userUID = user.uid;\n        const userProfileRef = doc(firestore, 'userProfiles', userUID);\n\n        updateDoc(userProfileRef, {\n          customURL: lowercaseCustomURL, // Store in lowercase\n        })\n          .then(() => {\n            console.log('Custom URL updated successfully');\n            setCustomURLSuccessMessage('Custom URL updated successfully');\n            setCustomURLErrorMessage('');\n          })\n          .catch((error) => {\n            console.error('Error updating custom URL: ', error);\n            setCustomURLErrorMessage('Error updating custom URL.');\n            setCustomURLSuccessMessage('');\n          });\n      }\n    })\n    .catch((error) => {\n      console.error('Error checking custom URL availability: ', error);\n      setCustomURLErrorMessage('Error checking custom URL availability.');\n      setCustomURLSuccessMessage('');\n    });\n};\n\n\nconst handleInputKeyDown = (event) => {\n  if (event.key === 'Enter') {\n    handleCustomURLUpdate();\n  }\n};\n\nconst handleCopyCustomURL = () => {\n  const el = document.createElement('textarea');\n  el.value = `https://www.tioassist.io/expert/${customURL}`;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  setIsCopied(true); // Set isCopied to true when the URL is copied\n\n  // Show the copy text box for 3 seconds, then hide it again\n  const copyTextElement = document.querySelector('.copy-text');\n  copyTextElement.style.display = 'inline-block'; // Show the box\n\n  setTimeout(() => {\n    setIsCopied(false);\n    copyTextElement.style.display = 'none'; // Hide the box after 3 seconds\n  }, 3000); // Reset isCopied after 3 seconds (3000 milliseconds)\n};\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-intro-section\">\n        \n      </div>  \n\n      <div className=\"profile-section\">\n        <div className=\"content\">\n          <div className=\"my-4\">\n            <h3>My Settings</h3>\n            <hr />\n          </div>\n          \n            <div className=\"row mb-4 gx-4\">\n              <div className=\"col-xl-12 col-12\">\n                <div className=\"\">\n                  <div className=\"card-body card-profile\">\n          \n                    <div className=\"row g-3\">\n                      \n                      <h4 className=\"mb-4\">Custom URL</h4>\n                      <div className={isMobile ? '' : 'input-group'}>\n                        \n  <span className=\"customurl\">https://www.tioassist.io/user/</span>\n  <input\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"yourHTML\"\n    value={customURL}\n    onChange={(e) => setCustomURL(e.target.value)}\n    onKeyDown={handleInputKeyDown} // Submit on Enter\n  />\n<div className=\"copy-container\" >\n  <svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  color=\"#212529\"\n  fill={!isCopied ? \"none\" : \"#00FF00\"} // Change fill color to green if copied\n  viewBox=\"0 0 24 24\"\n  strokeWidth={1}\n  stroke=\"currentColor\"\n  height=\"25\"\n  width=\"25\"\n  onClick={handleCopyCustomURL}\n  style={{ cursor: 'pointer', marginTop: '3px' }}\n>\n  {/* SVG path */}\n  {!isCopied ? (\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z\"\n    />\n  ) : (\n    <svg  xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\" />\n  </svg>\n  )}\n</svg>\n<span className=\"copy-text\">\n    {isCopied ? 'Copied!' : ''}\n  </span>\n</div>\n</div>\n\n\n\n      </div>\n      <div className=\"mt-3\">\n      {customURLSuccessMessage && (\n          <p style={{ color: 'green', margin: '10px 0' }}>\n            {customURLSuccessMessage}\n          </p>\n        )}\n        {customURLErrorMessage && (\n          <p style={{ color: 'red', margin: '10px 0' }}>\n            {customURLErrorMessage}\n          </p>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={handleCustomURLUpdate}\n        \n\n        >\n          Update Custom URL\n        </button>\n        </div>\n      \n          \n                    {user && user.providerData[0].providerId === 'google.com' ? (\n                  null // Do not render password-related form for Google Sign-In users\n                ) : (\n                    <form className=\"file-upload\" autoComplete=\"new-password\">\n                    <div className=\"py-5 rounded mt-4\">\n                      <div className=\"row g-3\">\n                        <h4 className=\"mb-4\">Password</h4>\n                        <div className=\"col-md-4\">\n                          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n                            Old password *\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control form-control-lg\"\n                            id=\"exampleInputPassword1\"\n                            value={oldPassword}\n                            onChange={(e) => setOldPassword(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"col-md-4\">\n                          <label htmlFor=\"exampleInputPassword2\" className=\"form-label\">\n                            New password *\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control form-control-lg\"\n                            id=\"exampleInputPassword2\"\n                            value={newPassword}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"col-md-8\">\n                          <label htmlFor=\"exampleInputPassword3\" className=\"form-label\">\n                            Confirm Password *\n                          </label>\n                          <input\n                            type=\"password\"\n                            className=\"form-control form-control-lg\"\n                            id=\"exampleInputPassword3\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                          />\n                        {successMessage && (\n        <div className=\"text-success\">{successMessage}</div>\n      )}\n      {passwordError && (\n        <div className=\"text-danger\">{passwordError}</div>\n      )}\n                        </div>\n                      </div>\n                      <div className=\"mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                          onClick={handlePasswordUpdate}\n                        >\n                          Update Password\n                        </button>\n                      </div>\n                    </div>\n                    </form>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n            <div className=\"col-xl-12 col-12\">\n                <div className=\"bg-white shadow-sm mb-4 card border-light\">\n                  <div className=\"card-body card-profile\">\n          \n                    <div className=\"row g-3\">\n                      \n                      <h4 className=\"mb-4\">Delete Profile</h4>\n                      <div className='mt-3'>\n<button type=\"button\" className=\"btn btn-danger\">\nDelete Profile\n</button>\n</div>\n        </div>\n     </div>\n     </div>\n     </div>\n     </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n\n\n<div className='mt-3'>\n<button type=\"button\" className=\"btn btn-danger\">\nDelete profile\n</button>\n</div>"],"names":["_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","oldPassword","setOldPassword","_useState5","_useState6","newPassword","setNewPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","setFirstName","_useState11","_useState12","setLastName","_useState13","_useState14","passwordError","setPasswordError","_useState15","_useState16","successMessage","setSuccessMessage","_useState17","_useState18","customURL","setCustomURL","_useState19","_useState20","isCopied","setIsCopied","_useState21","_useState22","isMobile","setIsMobile","_useState23","_useState24","customURLSuccessMessage","setCustomURLSuccessMessage","_useState25","_useState26","customURLErrorMessage","setCustomURLErrorMessage","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","unsubscribe","auth","onAuthStateChanged","authUser","splitName","displayName","split","userUID","uid","userProfileRef","doc","firestore","getDoc","then","docSnapshot","exists","userData","data","localStorage","setItem","catch","error","console","storedCustomURL","getItem","handleCustomURLUpdate","lowercaseCustomURL","toLowerCase","userProfilesRef","collection","customURLQuery","query","where","getDocs","querySnapshot","size","updateDoc","log","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onKeyDown","event","key","xmlns","color","fill","viewBox","strokeWidth","stroke","height","width","onClick","el","document","createElement","concat","body","appendChild","select","execCommand","removeChild","copyTextElement","querySelector","style","display","setTimeout","cursor","marginTop","strokeLinecap","strokeLinejoin","d","margin","providerData","providerId","autoComplete","htmlFor","id","length","test","currentUser","updatePassword","alert","message"],"sourceRoot":""}