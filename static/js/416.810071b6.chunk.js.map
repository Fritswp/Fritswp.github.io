{"version":3,"file":"static/js/416.810071b6.chunk.js","mappings":"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","sources":["Users/ExpertProfile.js","components/FlashMessage.js","components/ImageCropper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth, firestore, storage } from '../firebase';\nimport { doc, getDoc, updateDoc, deleteDoc, setDoc, collection, onSnapshot, addDoc, getDocs  } from 'firebase/firestore';\nimport { ref, uploadBytesResumable, getDownloadURL,deleteObject } from \"firebase/storage\";\nimport { updateProfile } from 'firebase/auth';\nimport { useParams } from 'react-router-dom';\nimport ImageCropper from '../components/ImageCropper'; \nimport FlashMessage from '../components/FlashMessage';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport LoadingCircle from '../components/LoadingCircle';\n\nfunction ExpertProfile() {\nconst { customURL } = useParams();\nconst [user, setUser] = useState(null);\nconst [firstName, setFirstName] = useState('');\nconst [lastName, setLastName] = useState('');\nconst [photoURL, setPhotoURL] = useState(null);\nconst [previousPhotoRef, setPreviousPhotoRef] = useState(null);\nconst [message, setMessage] = useState({ text: '', type: '' });\nconst [updateMessage, setUpdateMessage] = useState({ text: '', type: '' });\nconst [imageLoadError, setImageLoadError] = useState(false);\nconst [address, setAddress] = useState('');\nconst [city, setCity] = useState('');\nconst [county, setCounty] = useState('');\nconst [postcode, setPostcode] = useState('');\nconst [mobileNumber, setMobileNumber] = useState('');\nconst [occupation, setRole] = useState('');\nconst [email, setEmail] = useState(''); \nconst [description, setDescription] = useState('');\nconst [currentKeyword, setCurrentKeyword] = useState('');\nconst [keywords, setKeywords] = useState([]);\nconst [selectedLabel, setSelectedLabel] = useState('');\nconst [isModalOpen, setIsModalOpen] = useState(false);\nconst [currentKeywords, setCurrentKeywords] = useState([]);\nconst [gallery, setGallery] = useState([]);\nconst [isLoadingGallery, setIsLoadingGallery] = useState(false); // State variable for gallery loading state\nconst [isLoadingCarousel, setIsLoadingCarousel] = useState(false);\nconst [isDraggingFile, setIsDraggingFile] = useState(false);\nconst [uploadStatus, setUploadStatus] = useState(null);\nconst [uploadStatusLink, setUploadStatusLink] = useState(null);\nconst [linkUrl, setLinkUrl] = useState('');\nconst [links, setLinks] = useState([]);\nconst [isLoadingLinks, setIsLoadingLinks] = useState(false);\nconst [linkDescription, setLinkDescription] = useState(''); \n\nconst [isUploadSuccess, setIsUploadSuccess] = useState(false);\nconst [originalPhotoURL, setOriginalPhotoURL] = useState(null);\n\nuseEffect(() => {\n  const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n    if (authUser) {\n      setUser(authUser);\n\n      const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        setPhotoURL(userData.photoURL || authUser.photoURL);\n        setOriginalPhotoURL(userData.originalPhotoURL || null);\n        setFirstName(userData.first_name || (authUser.displayName ? authUser.displayName.split(' ')[0] : ''));\n        setLastName(userData.last_name || (authUser.displayName ? authUser.displayName.split(' ')[1] : ''));\n        setAddress(userData.address || '');\n        setCity(userData.city || '');\n        setCounty(userData.county || '');\n        setPostcode(userData.postcode || '');\n        setMobileNumber(userData.mobileNumber || '');\n        setRole(userData.occupation || '');\n        setEmail(authUser.email); // Set email from authUser\n        setDescription(userData.description || '');\n        setSelectedLabel(userData.labels || '');\n      } else {\n        setPhotoURL(authUser.photoURL);\n        setOriginalPhotoURL(null);\n      }\n\n      const userImagesCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/files`);\n\n      const unsubscribeSnapshot = onSnapshot(userImagesCollectionRef, (querySnapshot) => {\n        const galleryList = querySnapshot.docs.map((doc) => {\n          const data = doc.data();\n          const isImage = /\\.(jpeg|jpg|gif|png|webp|svg)$/i.test(data.url.split('?')[0]);\n          return { id: doc.id, url: data.url, description: data.description || '', title: data.title || '', isImage };\n        });\n\n        console.log('Gallery List:', galleryList); // Log galleryList to verify the data structure\n        setGallery(galleryList);\n      });\n\n      // Fetch links data from Firestore\n      const userLinksCollectionRef = collection(firestore, `expertApplications/${authUser.uid}/links`);\n      const linksSnapshot = await getDocs(userLinksCollectionRef);\n\n      const linksData = linksSnapshot.docs.map((doc) => {\n        const data = doc.data();\n        return { id: doc.id, url: data.url, description: data.description };\n      });\n\n      setLinks(linksData);\n\n      return () => {\n        unsubscribeSnapshot();\n      };\n    } else {\n      setAddress('');\n      setCity('');\n      setCounty('');\n      setPostcode('');\n      setMobileNumber('');\n      setPhotoURL(null);\n      setEmail(''); // Clear email\n      setRole('');\n      setDescription('');\n      setLinks([]); // Clear links if not authenticated\n    }\n  });\n\n  return unsubscribe;\n}, []);\n\n\nconst handleFileUpload = async (files, title) => {\n  const file = files[0];\n  const description = \"\"; // Replace with actual description or user input\n  const fileName = title || file.name; // Use title as filename if provided, otherwise use the original filename\n  const userFilesCollectionRef = collection(firestore, `expertApplications/${user.uid}/files`);\n  // Check if file size exceeds the limit (1MB)\n  if (file.size > 1 * 1024 * 1024) {\n    setUploadStatus({ type: 'error', message: 'File size exceeds the limit (1MB).' });\n    return; // Abort file upload\n  }\n  try {\n    const scaledFile = file.size > 1 * 1024 * 1024 ? await scaledFile(file) : file;\n    const downloadURL = await uploadFile(scaledFile, description, fileName, userFilesCollectionRef); // Pass title and file name\n    console.log('Download URL:', downloadURL);\n    setUploadStatus({ type: 'success', message: 'File uploaded successfully!' });\n  } catch (error) {\n    console.error('Error processing file:', error);\n    setUploadStatus({ type: 'error', message: 'Error uploading file. Please try again.' });\n  }\n\n  // Clear upload status message after 3 seconds\n  setTimeout(() => {\n    setUploadStatus(null);\n  }, 3000);\n};\n\nconst uploadFile = async (file, description, fileName, collectionRef) => {\n  const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n\n  try {\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    const snapshot = await uploadTask;\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    const uploadedFiles = { id: fileName, url: downloadURL, description, title: '' }; // Set title to empty string\n    setGallery(prevGallery => [...prevGallery, uploadedFiles]);\n    const docRef = doc(collectionRef, fileName);\n    await setDoc(docRef, { url: downloadURL, description, title: '' }); // Set title to empty string\n\n    console.log(\"Files uploaded and stored successfully\");\n    return downloadURL;\n  } catch (error) {\n    console.error('Error uploading Files:', error);\n  }\n};\n\n\nconst handleRemovePhoto = async (index, event) => {\n  try {\n    console.log('Gallery before removal:', gallery); // Log entire gallery array\n    const files = gallery[index];\n    console.log(' object:', files); \n    if (!files) {\n      console.error('Error removing photo:  not found in gallery');\n      return;\n    }\n    const fileName = files.id;\n    console.log(' name:', fileName); \n    const storageRef = ref(storage, `expertFiles/${user.uid}/${fileName}`);\n    await deleteObject(storageRef);\n    console.log(' removed successfully from Storage');\n    const docPath = `expertApplications/${user.uid}/files/${fileName}`;\n    console.log('Firestore document path:', docPath); // Log Firestore document path\n    const docRef = doc(firestore, docPath);\n    await deleteDoc(docRef);\n    console.log('Document removed successfully from Firestore');\n    const updatedGallery = gallery.filter((_, i) => i !== index);\n    console.log('Updated gallery:', updatedGallery); // Log updated gallery\n    setGallery(updatedGallery);\n  } catch (error) {\n    console.error('Error removing photo:', error);\n  }\n};\n\nconst handleTitleChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, title: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n\nconst handleDescriptionChange = (value, photoId) => {\n  const updatedGallery = gallery.map(photo => {\n    if (photo.id === photoId) {\n      return { ...photo, description: value };\n    }\n    return photo;\n  });\n  setGallery(updatedGallery);\n};\n \nconst handleUploadDescription = async (index) => {\n  const photo = gallery[index];\n  const docRef = doc(collection(firestore, `expertApplications/${user.uid}/files`), photo.id); // Use photo.id (image name) as document ID\n  try {\n    await Promise.all([\n      updateDoc(docRef, { description: photo.description, title: photo.title }), // Update both description and title\n    ]);\n    console.log(\"Description and title updated successfully in Firestore\");\n  } catch (error) {\n    console.error('Error updating description and title:', error);\n  }\n};\n\nconst getFileIcon = (fileName) => {\n if (!fileName) return null;\n\n  const fileNameWithoutParams = fileName.split('?')[0];\n  const extension = fileNameWithoutParams.split('.').pop().toLowerCase();\n\n  switch (extension) {\n    case 'pdf':\n      return <svg style={{ color: \"red\" }}xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 14 16\"> <path d=\"M5.523 12.424c.14-.082.293-.162.459-.238a7.878 7.878 0 0 1-.45.606c-.28.337-.498.516-.635.572a.266.266 0 0 1-.035.012.282.282 0 0 1-.026-.044c-.056-.11-.054-.216.04-.36.106-.165.319-.354.647-.548zm2.455-1.647c-.119.025-.237.05-.356.078a21.148 21.148 0 0 0 .5-1.05 12.045 12.045 0 0 0 .51.858c-.217.032-.436.07-.654.114zm2.525.939a3.881 3.881 0 0 1-.435-.41c.228.005.434.022.612.054.317.057.466.147.518.209a.095.095 0 0 1 .026.064.436.436 0 0 1-.06.2.307.307 0 0 1-.094.124.107.107 0 0 1-.069.015c-.09-.003-.258-.066-.498-.256zM8.278 6.97c-.04.244-.108.524-.2.829a4.86 4.86 0 0 1-.089-.346c-.076-.353-.087-.63-.046-.822.038-.177.11-.248.196-.283a.517.517 0 0 1 .145-.04c.013.03.028.092.032.198.005.122-.007.277-.038.465z\" fill=\"red\"></path> <path fill-rule=\"evenodd\" d=\"M4 0h5.293A1 1 0 0 1 10 .293L13.707 4a1 1 0 0 1 .293.707V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm5.5 1.5v2a1 1 0 0 0 1 1h2l-3-3zM4.165 13.668c.09.18.23.343.438.419.207.075.412.04.58-.03.318-.13.635-.436.926-.786.333-.401.683-.927 1.021-1.51a11.651 11.651 0 0 1 1.997-.406c.3.383.61.713.91.95.28.22.603.403.934.417a.856.856 0 0 0 .51-.138c.155-.101.27-.247.354-.416.09-.181.145-.37.138-.563a.844.844 0 0 0-.2-.518c-.226-.27-.596-.4-.96-.465a5.76 5.76 0 0 0-1.335-.05 10.954 10.954 0 0 1-.98-1.686c.25-.66.437-1.284.52-1.794.036-.218.055-.426.048-.614a1.238 1.238 0 0 0-.127-.538.7.7 0 0 0-.477-.365c-.202-.043-.41 0-.601.077-.377.15-.576.47-.651.823-.073.34-.04.736.046 1.136.088.406.238.848.43 1.295a19.697 19.697 0 0 1-1.062 2.227 7.662 7.662 0 0 0-1.482.645c-.37.22-.699.48-.897.787-.21.326-.275.714-.08 1.103z\" fill=\"red\"></path> </svg>\n          case 'doc':\n    case 'docx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\"viewBox=\"0 0 110.031 107.5\"><path d=\"M57.505 0h7.475v10c13.375.075 26.738-.138 40.101.075 2.85-.288 5.087 1.925 4.825 4.775.212 24.625-.05 49.262.125 73.887-.125 2.525.25 5.325-1.213 7.562-1.825 1.3-4.188 1.138-6.312 1.237-12.514-.061-25.014-.036-37.526-.036v10h-7.812c-19.024-3.475-38.1-6.662-57.162-10-.013-29.162 0-58.325 0-87.475C19.167 6.675 38.343 3.413 57.506 0z\" fill=\"#2a5699\"/><path d=\"M64.98 13.75h41.25v80H64.98v-10h32.5v-5h-32.5V72.5h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V50h32.5v-5h-32.5v-6.25h32.5v-5h-32.5V27.5h32.5v-5h-32.5v-8.75zM25.83 35.837c2.375-.137 4.75-.237 7.125-.362 1.662 8.438 3.362 16.862 5.162 25.262 1.413-8.675 2.976-17.325 4.487-25.987 2.5-.087 5-.225 7.488-.375-2.825 12.112-5.3 24.325-8.388 36.362-2.088 1.088-5.213-.05-7.688.125-1.663-8.274-3.6-16.5-5.088-24.812-1.462 8.075-3.362 16.075-5.037 24.101-2.4-.125-4.812-.275-7.226-.438-2.074-11-4.512-21.925-6.449-32.95 2.137-.1 4.287-.188 6.425-.263 1.287 7.962 2.75 15.888 3.875 23.862 1.765-8.174 3.564-16.349 5.314-24.525z\" fill=\"#fff\"/></svg>;\n    case 'xls':\n    case 'xlsx':\n      return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.037 107.5\"><path d=\"M57.55 0h7.425v10c12.513 0 25.025.025 37.537-.038 2.113.087 4.438-.062 6.275 1.2 1.287 1.85 1.138 4.2 1.225 6.325-.062 21.7-.037 43.388-.024 65.075-.062 3.638.337 7.35-.425 10.938-.5 2.6-3.625 2.662-5.713 2.75-12.95.037-25.912-.025-38.875 0v11.25h-7.763c-19.05-3.463-38.138-6.662-57.212-10V10.013C19.188 6.675 38.375 3.388 57.55 0z\" fill=\"#207245\"/><path d=\"M64.975 13.75h41.25V92.5h-41.25V85h10v-8.75h-10v-5h10V62.5h-10v-5h10v-8.75h-10v-5h10V35h-10v-5h10v-8.75h-10v-7.5z\" fill=\"#fff\"/><path d=\"M79.975 21.25h17.5V30h-17.5v-8.75z\" fill=\"#207245\"/><path d=\"M37.025 32.962c2.825-.2 5.663-.375 8.5-.512a2607.344 2607.344 0 0 1-10.087 20.487c3.438 7 6.949 13.95 10.399 20.95a716.28 716.28 0 0 1-9.024-.575c-2.125-5.213-4.713-10.25-6.238-15.7-1.699 5.075-4.125 9.862-6.074 14.838-2.738-.038-5.476-.15-8.213-.263C19.5 65.9 22.6 59.562 25.912 53.312c-2.812-6.438-5.9-12.75-8.8-19.15 2.75-.163 5.5-.325 8.25-.475 1.862 4.888 3.899 9.712 5.438 14.725 1.649-5.312 4.112-10.312 6.225-15.45z\" fill=\"#fff\"/><path d=\"M79.975 35h17.5v8.75h-17.5V35zM79.975 48.75h17.5v8.75h-17.5v-8.75zM79.975 62.5h17.5v8.75h-17.5V62.5zM79.975 76.25h17.5V85h-17.5v-8.75z\" fill=\"#207245\"/></svg>;\n    case 'ppt':\n    case 'pptx':\n      return<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 110.031 107.5\"><path d=\"M57.893 0h7.087v11.25c13.363.075 26.738-.138 40.088.062 2.875-.275 5.125 1.962 4.838 4.837.212 23.35-.05 46.712.125 70.075-.125 2.525.25 5.325-1.2 7.562-1.825 1.325-4.2 1.15-6.338 1.25-12.5-.062-25-.037-37.513-.037v12.5h-7.774c-19.05-3.475-38.138-6.65-57.2-10-.013-29.162 0-58.325 0-87.475C19.292 6.688 38.58 3.288 57.893 0z\" fill=\"#d24625\"/><path d=\"M64.98 15h41.25v76.25H64.98v-10h30v-5h-30V70h30v-5H64.993c-.013-2.45-.013-4.9-.024-7.35 4.95 1.537 10.587 1.5 15.012-1.476 4.788-2.837 7.288-8.25 7.7-13.65-5.487-.038-10.975-.025-16.45-.025-.012-5.438.062-10.875-.112-16.3-2.05.4-4.1.825-6.138 1.262V15z\" fill=\"#fff\"/><path d=\"M73.743 23.587c8.688.4 15.987 7.712 16.45 16.375-5.488.063-10.975.038-16.463.038 0-5.475-.012-10.95.013-16.413z\" fill=\"#d24625\"/><path d=\"M20.055 33.025c6.788.325 15.013-2.688 20.638 2.4 5.388 6.538 3.963 18.562-4.025 22.476-2.837 1.449-6.087 1.25-9.175 1.149-.013 4.888-.024 9.775-.013 14.663a1323.27 1323.27 0 0 0-7.438-.625c-.112-13.351-.136-26.713.013-40.063z\" fill=\"#fff\"/><path d=\"M27.48 39.788c2.463-.113 5.513-.562 7.176 1.75 1.425 2.45 1.35 5.675.162 8.2-1.425 2.575-4.65 2.325-7.138 2.625-.263-4.188-.237-8.376-.2-12.575z\" fill=\"#d24625\"/></svg>;\n    default:\n      return null; \n  }\n};\n\nuseEffect(() => {\n  const isGalleryLoading = gallery.length === 0 || gallery.some(photo => !photo.description || (photo.description && photo.description !== '' && photo.isUploadingDescription));\n  setIsLoadingGallery(isGalleryLoading);\n\n  const isCarouselLoading = gallery.filter(photo => photo.isImage).length === 0 || gallery.some(photo => photo.isUploading);\n  setIsLoadingCarousel(isCarouselLoading);\n}, [gallery]);\n\n\n\nconst handleImageUpload = async (downloadURL) => {\n  setPhotoURL(downloadURL);\n  const userDocRef = doc(firestore, 'expertApplications', user.uid);\n  await updateDoc(userDocRef, { photoURL: downloadURL });\n  updateProfile(user, { photoURL: downloadURL })\n    .then(() => {\n      console.log('Profile photo updated successfully');\n    })\n    .catch((error) => {\n      console.error('Error updating profile photo:', error);\n    });\n};\n\nconst clearUpdateMessage = () => {\n    setUpdateMessage({ text: '', type: '' });\n  };\n  const updateProfileInfo = async () => {\n    if (!user) {\n      return;\n    }\n    try {\n      const userDocRef = doc(firestore, 'expertApplications', user.uid);\n      const userDocSnapshot = await getDoc(userDocRef);\n      if (userDocSnapshot.exists()) {\n        const userData = userDocSnapshot.data();\n        const approvedStatus = userData.approved || false; \n        const customURLStatus = userData.customURL || false;\n        const existingPoints = userData.points || 0;\n        const userProfileRef = doc(firestore, 'userProfiles', user.uid);\n        await deleteDoc(userProfileRef);\n        const updatedUser = auth.currentUser;\n        const newPhotoURL = updatedUser.photoURL;\n        await setDoc(userDocRef, {\n          displayName: `${firstName} ${lastName}`,\n          email: user.email,\n          mobileNumber: document.getElementById('inputMobileNumber').value,\n          occupation: document.getElementById('inputExpertise').value,\n          address: document.getElementById('inputAddress').value,\n          city: document.getElementById('inputCity').value,\n          county: document.getElementById('inputCounty').value,\n          postcode: document.getElementById('inputPostcode').value,\n          description: document.getElementById('inputDescription').value,\n          photoURL: newPhotoURL,\n          approved: approvedStatus,\n          customURL: customURLStatus,\n          keywords: currentKeywords,\n          points: existingPoints,\n          labels: selectedLabel, \n        });\n        setPreviousPhotoRef(null);\n        setUpdateMessage({ text: 'Profile updated successfully', type: 'success' });\n        setTimeout(() => clearUpdateMessage(), 3000);\n      }\n    } catch (error) {\n      setUpdateMessage({ text: `Error updating profile: ${error.message}`, type: 'error' });\n      setTimeout(() => clearUpdateMessage(), 3000);\n    }\n  };\n  \n\nuseEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\n      if (authUser) {\n        setUser(authUser);\n        const userDocRef = doc(firestore, 'expertApplications', authUser.uid);\n        const userDocSnapshot = await getDoc(userDocRef);\n        if (userDocSnapshot.exists()) {\n          const userData = userDocSnapshot.data();\n          setKeywords(userData.keywords || []);\n          setSelectedLabel(userData.labels || '');\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  \n    const handleAddKeyword = () => {\n    if (currentKeyword.trim() !== '') {\n    if (currentKeywords.length < 6  ) {\n    const updatedKeywords = [...currentKeywords, currentKeyword.trim()];\n    setCurrentKeywords(updatedKeywords);\n    setCurrentKeyword('');\n    }\n    }\n    };\n    const handleRemoveKeyword = (index) => {\n      const updatedKeywords = [...currentKeywords];\n      updatedKeywords.splice(index, 1);\n      setCurrentKeywords(updatedKeywords);\n    };\n    const removeKeyword = (index) => {\n      const updatedKeywords = [...keywords];\n      updatedKeywords.splice(index, 1);\n      setKeywords(updatedKeywords);\n    };\n    const MAX_KEYWORDS_LIMIT = 5; \n    \n    const handleImageClick = () => {\n      console.log('Image clicked');\n      setIsModalOpen(true);\n    };\n\n    const handleImageError = () => {\n      setImageLoadError(true);\n    };\n    \n    const closeModal = () => {\n      setIsModalOpen(false);\n      enableScroll(); // Enable scrolling when the modal is closed\n    };\n\n    const enableScroll = () => {\n      document.body.style.overflow = '';\n    };\n  \n    const handleDragEnter = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(true);\n    };\n  \n    const handleDragLeave = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n    };\n  \n    const handleDrop = (e) => {\n      e.preventDefault();\n      setIsDraggingFile(false);\n      const files = e.dataTransfer.files;\n      handleFileUpload(files);\n    };\n\n    const handleAddLink = async (e) => {\n      e.preventDefault(); // Prevent default form submission behavior\n      if (!linkUrl.trim() || !linkDescription.trim()) {\n        return;\n      }\n      try {\n        setIsLoadingLinks(true);\n        const formattedUrl = linkUrl.startsWith('http://') || linkUrl.startsWith('https://') ? linkUrl : `https://${linkUrl}`;\n        const userLinksCollectionRef = collection(firestore, `expertApplications/${user.uid}/links`);\n        const docRef = await addDoc(userLinksCollectionRef, { url: formattedUrl, description: linkDescription });\n        const newLink = { id: docRef.id, url: formattedUrl, description: linkDescription };\n        setLinks([...links, newLink]); // Update links state with the new link\n        setLinkUrl('');\n        setLinkDescription(''); // Clear the description field after adding the link\n        setUploadStatusLink({ type: 'success', message: 'Link added successfully!', context: 'links' });\n      } catch (error) {\n        console.error('Error adding link:', error);\n        setUploadStatusLink({ type: 'error', message: 'Error adding link. Please try again.' });\n      } finally {\n        setIsLoadingLinks(false);\n      }\n      // Clear upload status message after 3 seconds\n      setTimeout(() => {\n        setUploadStatusLink(null);\n      }, 3000);\n    };\n    \n    \n    \n    const handleRemoveLink = async (e, index) => {\n      e.preventDefault(); // Prevent default form submission behavior\n      try {\n        setIsLoadingLinks(true);\n        const linkId = links[index].id;\n        const linkDocRef = doc(firestore, `expertApplications/${user.uid}/links`, linkId);\n        await deleteDoc(linkDocRef);\n        const updatedLinks = links.filter((_, i) => i !== index);\n        setLinks(updatedLinks);\n        setUploadStatusLink({ type: 'success', message: 'Link removed successfully!', context: 'links' });\n      } catch (error) {\n        console.error('Error removing link:', error);\n        setUploadStatusLink({ type: 'error', message: 'Error removing link. Please try again.' });\n      } finally {\n        setIsLoadingLinks(false);\n      }\n      // Clear upload status message after 3 seconds\n      setTimeout(() => {\n        setUploadStatusLink(null);\n      }, 3000);\n    };\n    \n    \n    \n    \n    \n    \n    \n\n\nreturn (\n<div className=\"profile-container\">\n<div className=\"container\">\n</div>\n<div className=\"profile-section\">\n<div className=\"content profile-content \">\n<div className=\"row g-3\">\n<div className=\"card-profile\">\n</div>\n<div className=\"card-body\">\n<div className=\"Profile-image position-relative\">\n  {!imageLoadError && photoURL && (\n    <div className=\"position-relative\">\n      <img\n        src={photoURL}\n        alt=\"User Profile\"\n        className=\"user-avatar large-avatar mb-3\"\n        onError={() => setImageLoadError(true)}\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"svg-icon\" onClick={handleImageClick}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"white\" className=\"w-6 h-6\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n</svg>\n      </div>\n    </div>\n  )}\n  {imageLoadError && (\n    <div className=\"position-relative\">\n      <img\n        src={`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Custom 404 Image\"\n        className=\"user-avatar large-avatar rounded-circle mb-3\"\n        onClick={handleImageClick}\n        style={{ cursor: 'pointer' }}\n      />\n      <div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"fw-normal card-subtitle mb-4 h6\">{occupation}</div>\n      </div>\n    </div>\n  )}\n</div>\n<div className=\"px-3\">\n        <div className=\"card-title\">{`${firstName} ${lastName}`}</div>\n        <div className=\"text-muted card-subtitle h6\">{occupation}</div>\n      </div>\n      <div>\n        {message.type === 'error' && (\n          <p className=\"fw-light\" style={{ color: 'red' }}>{message.text}</p>\n        )}\n        {message.type === 'success' && (\n          <p className=\"fw-light\" style={{ color: 'green' }}>{message.text}</p>\n        )}\n        {message.type === 'progress' && (\n          <p className=\"fw-light\" style={{ color: 'gray' }}>{message.text}</p>\n        )}\n      </div>\n    </div>\n    <h3>My Profile</h3>\n    <hr />\n    <form className=\"file-upload\">\n    <div className=\"row mb-4 gx-4\">\n    <div className=\"col-xl-12 col-12\">\n\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    <div className=\"col-md-8\">\n        <h4 className=\"mb-4\">General information</h4>\n        <div className=\"col-md-12\">\n    <div className=\"row g-3\">\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">First Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"First name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Last Name *</label>\n            <input\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"\"\n                aria-label=\"Last name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label htmlFor=\"inputEmail4\" className=\"form-label\">Email *</label>\n            <input\n                type=\"email\"\n                className=\"form-control form-control-lg\"\n                id=\"inputEmail4\"\n                value={user ? user.email : ''}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-6\">\n            <label className=\"form-label\">Mobile number *</label>\n            <input\n                id=\"inputMobileNumber\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your Phone number\"\n                aria-label=\"Phone number\"\n                value={mobileNumber}\n                onChange={(e) => setMobileNumber(e.target.value)}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Role/Expertise *</label>\n            <input\n                id=\"inputExpertise\"\n                type=\"text\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter your role/expertise\"\n                aria-label=\"your Role\"\n                value={occupation}\n                onChange={(e) => setRole(e.target.value)}\n                readOnly\n                style={{ pointerEvents: 'none' }}\n            />\n        </div>\n        <div className=\"col-md-12\">\n            <label className=\"form-label\">Description of Expertise</label>\n            <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                className=\"form-control\"\n                rows=\"4\"\n                placeholder=\"Enter a brief description of your expertise or how you can help\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                style={{ resize: 'none' }}\n            />\n        </div>\n\n        \n \n  \n\n\n\n\n\n\n\n\n\n    </div>\n</div>\n</div>\n<div className=\"col-md-4\">\n<div className=\"form-group\">\n<label className=\"form-label\">Categories</label>\n  <ul className=\"listcard expert-listcard\">\n  <li className=\"form-check expert-form-check \">\n      <input type=\"radio\" className=\"form-check-input listboxes \" id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Computer')}\n         checked={selectedLabel === 'Computer'} \n      />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Computer\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Sport'}   onChange={() => setSelectedLabel('Sport')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Sport\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" name=\"jobSuccess\"      checked={selectedLabel === 'Food'} \n         onChange={() => setSelectedLabel('Food')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Food\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Health'} \n      name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Health')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Health\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\" id=\"jobSuccess90\" \n          checked={selectedLabel === 'Work'} \n      name=\"jobSuccess\"\n         onChange={() => setSelectedLabel('Work')} />\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Work\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n    <li className=\"form-check expert-form-check\">\n      <input type=\"radio\" className=\"form-check-input listboxes\"\n          checked={selectedLabel === 'Hobbies'} \n      id=\"jobSuccess90\" name=\"jobSuccess\" \n         onChange={() => setSelectedLabel('Hobbies')}/>\n      <label className=\"expert-form-check-label expert-label-with-svg\" htmlFor=\"anyJobSuccess\">\n      Hobbies\n       <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#FF5733\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" height=\"25\" width=\"25\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z\" />\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z\" />\n    </svg>\n      </label>\n    </li>\n  </ul>\n</div>\n    </div>\n</div>\n    \n    </div>\n    </div>\n\n\n    <div className=\"card-body card-profile\">\n    <div className=\"link-section\">\n  <h4>Links</h4>\n\n  <div className=\"link-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter link URL\"\n      className=\"form-control\"\n      value={linkUrl}\n      onChange={(e) => setLinkUrl(e.target.value)}\n    />\n    <input\n      type=\"text\"\n      placeholder=\"Enter link description\"\n      className=\"form-control\"\n      value={linkDescription}\n      onChange={(e) => setLinkDescription(e.target.value)}\n    />\n    <button className=\"btn btn-primary mt-2 mb-2\" onClick={(e) => handleAddLink(e)}>Add Link</button>\n  </div>\n\n  <div className=\"links-list\">\n  {links.map((link, index) => (\n    <div key={index} className=\"link-item\">\n      <div className=\"links-container\">\n        <div className=\"url-container\">\n          <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.url.replace(/^https?:\\/\\//, '')}</a>\n        </div>\n        {link.description && <div className=\"description-container\">{link.description}</div>}\n      </div>\n      <button className=\"btn remove-link\" onClick={(e) => handleRemoveLink(e, index)}>❌</button>\n    </div>\n  ))}\n</div>\n\n  {/* Upload status message for links */}\n  {uploadStatusLink && (\n    <div className={`alert alert-${uploadStatusLink.type}`} role=\"alert\">\n      {uploadStatusLink.message}\n    </div>\n  )}\n</div>\n\n<h4>File Gallery</h4>\n  <div\n    className={`upload-container-profile ${isDraggingFile ? 'drag-over-profile' : ''}`}\n    onDragEnter={handleDragEnter}\n    onDragOver={handleDragEnter} // This line is crucial for triggering the drag enter event\n    onDragLeave={handleDragLeave}\n    onDrop={handleDrop}\n  >\n    <label htmlFor=\"file-upload-profile\" className=\"upload-label-profile\">\n      <input\n        id=\"file-upload-profile\"\n        type=\"file\"\n        className=\"upload-field-profile\"\n        onChange={(e) => handleFileUpload(e.target.files)}\n        multiple\n      />\n      <div className=\"upload-wrapper\">\n        <div className=\"upload-icon-profile\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" color=\"#7EA0D6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"75\" width=\"75\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\" />\n          </svg>\n        </div>\n        <div className=\"upload-text-profile\">\n      <div>\n      <div className=\"choosefile mt-2\">\n        Choose file \n      </div>\n      {' '}\n      or{' '}\n      </div>\n      <div className=\"draghere\">\n        drag here\n      </div>\n    </div>\n      </div>\n    </label>\n  </div>\n  {uploadStatus && (\n    <div className={`alert alert-${uploadStatus.type}`} role=\"alert\">\n      {uploadStatus.message}\n    </div>\n  )}\n</div>\n\n\n \n          {gallery.some(photo => !photo.isImage && photo.url) && (\n            <div className=\"carousel-container mb-4\">\n              <div className=\"gallery-container\">\n                {gallery.map((photo, index) => {\n                  // Render the gallery item only if there is a file and it's not an image\n                  if (!photo.isImage && photo.url) {\n                    return (\n                      <div key={index} className=\"gallery-item\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Enter title\"\n                          className=\"form-control form-control-lg borderradius\"\n                          value={photo.title || ''}\n                          onChange={(e) => handleTitleChange(e.target.value, index)}\n                          onKeyDown={(e) => {\n                            if (e.key === 'Enter') {\n                              e.preventDefault();\n                              handleUploadDescription(index);\n                            }\n                          }}\n                        />\n\n                        {/* Render the file-container only if there is a file */}\n                        {photo.url && (\n                          <div className=\"file-container\">\n                            <div className=\"file-icon\">{getFileIcon(photo.url)}</div>\n                          </div>\n                        )}\n\n                        <textarea\n                          type=\"text\"\n                          placeholder=\"Enter description\"\n                          className=\"form-control form-control-lg borderradius\"\n                          value={photo.description}\n                          onChange={(e) => handleDescriptionChange(e.target.value, index)}\n                        />\n                        <div className='button-container-profile mt-2'>\n                          <button className=\"btn btn-primary\" onClick={(e) => { \n                            e.preventDefault(); // Prevent default form submission behavior\n                            handleUploadDescription(index); // Call the function to handle description upload\n                          }}>Upload Description</button>\n                          <button className=\"btn btn-secondary\" onClick={(e) => { e.preventDefault(); handleRemovePhoto(index); }}>❌ Remove</button>\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return null; // Don't render anything if there is no file or it's an image\n                  }\n                })}\n              </div>\n            </div>\n          )}\n    \n\n    {gallery.some(photo => photo.isImage) && (\n  <div className=\"carousel-container\">\n    {isLoadingCarousel ? (\n      <div className=\"image-loading-container\">\n        <LoadingCircle />\n      </div>\n    ) : (\n      <Carousel data-bs-theme=\"dark\">\n        {gallery.filter(photo => photo.isImage).map((photo, index) => (\n          <Carousel.Item key={photo.id}>\n            <div className=\"image-loading-container\">\n              {photo.isUploading ? ( // Check if the photo is being uploaded\n                <LoadingCircle />\n              ) : (\n                <img\n                  className=\"carousel-image\"\n                  src={photo.url}\n                  alt={`Gallery ${index + 1}`}\n                />\n              )}\n            </div>\n            <Carousel.Caption>\n              <input\n                type=\"text\"\n                placeholder=\"Enter title\"\n                className=\"form-control form-control-lg\"\n                value={photo.title || ''}\n                onChange={(e) => handleTitleChange(e.target.value, photo.id)}\n              />\n              <textarea\n                type=\"text\"\n                placeholder=\"Enter description\"\n                className=\"form-control form-control-lg mb-2\"\n                value={photo.description}\n                onChange={(e) => handleDescriptionChange(e.target.value, photo.id)}\n              />\n              <div className='button-container-profile mt-2'>\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={(e) => {\n                    e.preventDefault(); // Prevent default form submission behavior\n                    handleUploadDescription(index);\n                  }}\n                >\n                  Upload Changes\n                </button>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={(e) => {\n                    e.preventDefault(); // Prevent default form submission behavior\n                    handleRemovePhoto(index);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </Carousel.Caption>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    )}\n  </div>\n)}\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n    <div className=\"col-xl-12 col-12\">\n   \n    <div className=\"pt-5 rounded\">\n    <div className=\"card-body card-profile\">\n    <div className=\"row g-3\">\n    \n    <h4 className=\"mb-4 mt-0\">Address</h4>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Address</label>\n    <input\n    id=\"inputAddress\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter your home address\"\n    value={address} // Display user's address here\n    onChange={(e) => setAddress(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">City</label>\n    <input\n    id=\"inputCity\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Enter City\"\n    value={city} // Display user's city here\n    onChange={(e) => setCity(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">County</label>\n    <input\n    id=\"inputCounty\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"County\"\n    value={county} // Display user's county here\n    onChange={(e) => setCounty(e.target.value)}\n    />\n    </div>\n    <div className=\"col-md-6\">\n    <label className=\"form-label\">Postcode</label>\n    <input\n    id=\"inputPostcode\"\n    type=\"text\"\n    className=\"form-control form-control-lg\"\n    placeholder=\"Postcode\"\n    value={postcode} // Display user's postcode here\n    onChange={(e) => setPostcode(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n    <div className=\"bg-white shadow-sm mb-4 card border-light\">\n   \n    <div className=\"row g-3\">\n    <h5 className=\"mb-2\">Choose 5 Keywords</h5>\n    <p>we recommend choosing keywords that you think will get you highest in the search results</p>\n    <div className=\"me-3\">\n    <input\n  type=\"text\"\n  className='form-control form-control-lg'\n  placeholder={window.innerWidth <= 600 ? \"Add keywords here\" : \"Type a keyword and press Space or Enter to add\"}\n  value={currentKeyword}\n  onChange={(e) => setCurrentKeyword(e.target.value)}\n  onKeyDown={(e) => {\n    if ((e.key === ' ' || e.key === 'Enter') && currentKeyword.trim() !== '') {\n      e.preventDefault(); // Prevent the Space or Enter character from being entered into the input\n      handleAddKeyword(); // Call the handleAddKeyword function\n    }\n  }}\n  disabled={currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT}\n/>\n    </div>\n    <div className=\"keywords-list\">\n  {currentKeywords.map((keyword, index) => (\n    <div key={index} onClick={() => handleRemoveKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => handleRemoveKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\"   cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n  {keywords.map((keyword, index) => (\n    <div key={index} onClick={() => removeKeyword(index)} className=\"keyword-container btn mx-1  d-inline-flex align-items-center  mb-2\">\n      {keyword}\n      <svg onClick={() => removeKeyword(index)} xmlns=\"http://www.w3.org/2000/svg\" cursor=\"pointer\" color='#000000' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n  ))}\n{currentKeywords.length + keywords.length >= MAX_KEYWORDS_LIMIT && (\n  <p className=\"message\">Keyword limit reached. You cannot add more keywords.</p>\n)}\n</div>\n    </div>\n    </div>\n    </div>\n    <div className='mt-3'>\n    <button\n    type=\"button\"\n    className=\"btn btn-primary  mb-4\"\n    onClick={updateProfileInfo}\n    >\n    Update profile\n    </button>\n    <div>\n  {updateMessage.type === 'error' && (\n    <p className=\"fw-light\" style={{ color: 'red' }}>{updateMessage.text}</p>\n  )}\n  {updateMessage.type === 'success' && (\n    <p className=\"fw-light\" style={{ color: 'green' }}>{updateMessage.text}</p>\n  )}\n</div>\n    </div>\n    </div>\n   \n    </div>\n    </form>\n    </div>\n    </div>\n    </div>\n    {isModalOpen && (\n  <ImageCropper\n    setPhotoURL={setPhotoURL}\n    setImageLoadError={setImageLoadError}\n    closeModal={closeModal}\n    photoURL={photoURL}\n    originalPhotoURL={originalPhotoURL}\n    handleImageUpload={handleImageUpload}\n    handleImageError={handleImageError}\n    user={user}\n    collectionName=\"expertApplications\"\n    setIsUploadSuccess={setIsUploadSuccess}\n  />\n)}\n{isUploadSuccess && <FlashMessage />}\n    </div>\n    );\n    }\nexport default ExpertProfile;\n","import React, { useState, useEffect } from 'react';\n\nfunction FlashMessage() {\n  const [showFlash, setShowFlash] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowFlash(false);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className={showFlash ? 'flash' : ''}>\n      {/* ... flash message content ... */}\n    </div>\n  );\n}\n\nexport default FlashMessage;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Cropper from 'react-easy-crop';\nimport imageCompression from 'browser-image-compression';\n\n\nimport {\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject\n} from 'firebase/storage';\nimport { doc, onSnapshot, updateDoc, getDoc } from 'firebase/firestore';\nimport { storage, firestore } from '../firebase';\n\nfunction ImageCropper({\n  closeModal,\n  originalPhotoURL,\n  handleImageUpload,\n  setPhotoURL,\n  user,\n  collectionName,\n  setIsUploadSuccess,\n}) {\n  const [image, setImage] = useState(originalPhotoURL);\n  const [selectedFileName, setSelectedFileName] = useState(null);\n  const [docRef, setDocRef] = useState(null);\n  const fileInputRef = useRef(null);\n  const [cropperRef, setCropperRef] = useState(null);\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const [showFlash, setShowFlash] = useState(false); // State for flash effect\n  const defaultImageURL = `${process.env.PUBLIC_URL}/images/arts/user.webp`;\n  const [originalImage, setOriginalImage] = useState(null);\n\n\n  useEffect(() => {\n    document.body.classList.add('modal-open');\n\n    return () => {\n      document.body.classList.remove('modal-open');\n    };\n  }, []);\n\n\n\n  const handleUpload = async () => {\n    if (!croppedAreaPixels) {\n      return;\n    }\n  \n    // Get a reference to the current user's document in Firestore\n    const userDocRef = doc(firestore, collectionName, user.uid);\n  \n    // Get the current photoURL from the user's document\n    const docSnap = await getDoc(userDocRef);\n    const currentPhotoURL = docSnap.data()?.photoURL;\n  \n    // If there's a current photoURL, delete the old cropped image from Firebase Storage\n    if (currentPhotoURL) {\n      const oldCroppedImageStorageRef = ref(storage, currentPhotoURL);\n      try {\n        await deleteObject(oldCroppedImageStorageRef);\n      } catch (error) {\n        console.error('Error deleting old cropped image from storage:', error);\n      }\n    }\n  \n    try {\n      const originalImageBlob = await fetch(image).then((res) => res.blob());\n      const croppedImageBlob = await new Promise((resolve) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const imageToCrop = new Image();\n  \n        imageToCrop.onload = async () => {\n          canvas.width = croppedAreaPixels.width;\n          canvas.height = croppedAreaPixels.height;\n  \n          ctx.drawImage(\n            imageToCrop,\n            croppedAreaPixels.x,\n            croppedAreaPixels.y,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height,\n            0,\n            0,\n            croppedAreaPixels.width,\n            croppedAreaPixels.height\n          );\n  \n          canvas.toBlob(resolve, 'image/jpeg');\n        };\n  \n        imageToCrop.src = URL.createObjectURL(originalImageBlob);\n      });\n  \n      // Log the size of the original cropped image\n      console.log('Original cropped image size:', croppedImageBlob.size, 'bytes');\n  \n      // Convert croppedImageBlob to a File object\n      const croppedImageFile = new File([croppedImageBlob], selectedFileName, { type: 'image/jpeg' });\n  \n      // Compress the cropped image file\n      const options = {\n        maxSizeMB: 0.5,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true,\n      };\n      const compressedFile = await imageCompression(croppedImageFile, options);\n  \n      // Log the size of the compressed image\n      console.log('Compressed image size:', compressedFile.size, 'bytes');\n  \n      // Convert compressedFile back to Blob\n      const compressedBlob = await compressedFile.arrayBuffer().then(arrayBuffer => new Blob([arrayBuffer]));\n  \n      // Upload original image\n      const originalImageStorageRef = ref(storage, `originalImages/${selectedFileName}`);\n      const originalImageMetadata = { contentType: 'image/jpeg' };\n      const originalImageUploadTask = uploadBytesResumable(originalImageStorageRef, originalImageBlob, originalImageMetadata);\n  \n      originalImageUploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle upload progress here\n        },\n        (error) => {\n        },\n        async () => {\n          const originalImageDownloadURL = await getDownloadURL(originalImageUploadTask.snapshot.ref);\n          if (originalImageDownloadURL) {\n            await updateDoc(userDocRef, { originalPhotoURL: originalImageDownloadURL });\n          }\n        }\n      );\n  \n      // Upload compressed cropped image\n      const croppedImageStorageRef = ref(storage, `profileImages/${selectedFileName}`);\n      const croppedImageUploadTask = uploadBytesResumable(croppedImageStorageRef, compressedBlob);\n  \n      croppedImageUploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle upload progress here\n        },\n        (error) => {\n        },\n        async () => {\n          const croppedImageDownloadURL = await getDownloadURL(croppedImageUploadTask.snapshot.ref);\n          if (croppedImageDownloadURL) {\n            // Update the Firestore document immediately before handling the upload success\n            await updateDoc(userDocRef, { photoURL: croppedImageDownloadURL });\n            handleImageUpload(croppedImageDownloadURL);\n            setIsUploadSuccess(true); // add this line\n            closeModal();\n            // Set the original image as the new image in the Cropper\n            if (originalImageBlob) {\n              const reader = new FileReader();\n              reader.onload = (event) => {\n                setImage(event.target.result);\n              };\n              reader.readAsDataURL(originalImageBlob);\n            }\n            setCroppedAreaPixels(null); // Reset cropped area\n            setZoom(1); // Reset zoom level\n            setCrop({ x: 0, y: 0 }); // Reset crop position\n          }\n        }\n      );\n    } catch (error) {\n    }\n  };\n  \n  \n\n  \n  \n\nconst handleDeletePhoto = async () => {\n  if (user && user.uid && docRef) {\n    // Get storage references for both images\n    const originalImageStorageRef = ref(storage, `originalImages/${selectedFileName}`);\n    const croppedImageStorageRef = ref(storage, `profileImages/${selectedFileName}`);\n\n    // Delete images from Firebase Storage\n    try {\n      await deleteObject(originalImageStorageRef);\n      await deleteObject(croppedImageStorageRef);\n    } catch (error) {\n      console.error('Error deleting images from storage:', error);\n    }\n\n    // Update the Firestore document to remove URLs\n    await updateDoc(docRef, {\n      photoURL: null,\n      originalPhotoURL: null,\n    });\n\n    // Update local state\n    setPhotoURL(defaultImageURL);\n    setImage(defaultImageURL);\n  }\n};\n\n\n\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n\n    useEffect(() => {\n        fileInputRef.current = document.createElement('input');\n        fileInputRef.current.type = 'file';\n        fileInputRef.current.accept = 'image/*,capture=camera'; \n      \n        // Add an event listener for file changes\n        fileInputRef.current.addEventListener('change', (event) => {\n          const file = event.target.files[0];\n          if (file) {\n            setSelectedFileName(file.name);\n            setOriginalImage(file);\n            const reader = new FileReader();\n            reader.onload = (event) => {\n              setImage(event.target.result);\n            };\n            reader.readAsDataURL(file);\n          }\n        });\n\n    const userDocRef = doc(firestore, collectionName, user.uid);\n    setDocRef(userDocRef);\n\n    const handlePhotoURLChange = (newPhotoURL) => {\n      setImage(newPhotoURL);\n    };\n\n    const unsubscribe = onSnapshot(userDocRef, (doc) => {\n      const newPhotoURL = doc.data()?.originalPhotoURL;\n      handlePhotoURLChange(newPhotoURL);\n    });\n\n    return () => unsubscribe();\n  }, [user.uid, collectionName]);\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modalcrop\">\n        <div className=\"top-section\">\n          <div style={{ marginRight: '10px' }}>Profile image</div>\n          <button className=\"btn-crop\" onClick={closeModal}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"white\"\n              strokeWidth=\"1.5\"\n              className={`w-6 h-6 smaller-svg`}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className={showFlash ? 'flash' : ''}></div> {/* Flash effect */}\n        <div className='centerimage'>\n\n          {image && (\n            <Cropper\n              ref={setCropperRef}\n              image={image}\n              crop={crop}\n              zoom={zoom}\n              onCropChange={setCrop}\n              onZoomChange={setZoom}\n              onCropComplete={onCropComplete}\n              cropShape=\"round\"\n              aspect={4 / 4}\n            />\n\n          )}\n\n        </div>\n        <div className=\"button-section\">\n          <button\n            className=\"btn-crop\"\n            onClick={() => fileInputRef.current.click()}\n          >\n            <div className=\"button-content\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                className={`w-6 h-6 smaller-svg`}\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\"\n                />\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\"\n                />\n              </svg>\n              New Photo\n            </div>\n          </button>\n          <div className=\"success\">\n            <div className=\"button-container\">\n              <button className=\"btn-crop\" onClick={handleUpload}>\n                <div className=\"button-content\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.5\"\n                    className={`w-6 h-6 smaller-svg`}\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5\"\n                    />\n                  </svg>\n                  Upload Photo\n                </div>\n              </button>\n            </div>\n         \n\n          </div>\n\n          <button className=\"btn-crop\" onClick={handleDeletePhoto}>\n            <div className=\"button-content\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"white\"\n                strokeWidth=\"1.5\"\n                className={`w-6 h-6 smaller-svg`}\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                />\n              </svg>\n              Delete Photo\n            </div>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCropper;"],"names":["useParams","customURL","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","photoURL","setPhotoURL","_useState9","_useState10","setPreviousPhotoRef","_useState11","text","type","_useState12","message","_useState13","_useState14","updateMessage","setUpdateMessage","_useState15","_useState16","imageLoadError","setImageLoadError","_useState17","_useState18","address","setAddress","_useState19","_useState20","city","setCity","_useState21","_useState22","county","setCounty","_useState23","_useState24","postcode","setPostcode","_useState25","_useState26","mobileNumber","setMobileNumber","_useState27","_useState28","occupation","setRole","_useState29","_useState30","setEmail","_useState31","_useState32","description","setDescription","_useState33","_useState34","currentKeyword","setCurrentKeyword","_useState35","_useState36","keywords","setKeywords","_useState37","_useState38","selectedLabel","setSelectedLabel","_useState39","_useState40","isModalOpen","setIsModalOpen","_useState41","_useState42","currentKeywords","setCurrentKeywords","_useState43","_useState44","gallery","setGallery","_useState45","_useState46","setIsLoadingGallery","_useState47","_useState48","isLoadingCarousel","setIsLoadingCarousel","_useState49","_useState50","isDraggingFile","setIsDraggingFile","_useState51","_useState52","uploadStatus","setUploadStatus","_useState53","_useState54","uploadStatusLink","setUploadStatusLink","_useState55","_useState56","linkUrl","setLinkUrl","_useState57","_useState58","links","setLinks","_useState59","_useState60","setIsLoadingLinks","_useState61","_useState62","linkDescription","setLinkDescription","_useState63","_useState64","isUploadSuccess","setIsUploadSuccess","_useState65","_useState66","originalPhotoURL","setOriginalPhotoURL","useEffect","unsubscribe","auth","onAuthStateChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authUser","userDocRef","userDocSnapshot","userData","userImagesCollectionRef","unsubscribeSnapshot","userLinksCollectionRef","linksSnapshot","linksData","wrap","_context","prev","next","doc","firestore","uid","getDoc","sent","exists","data","first_name","displayName","split","last_name","email","labels","collection","concat","onSnapshot","querySnapshot","galleryList","docs","map","isImage","test","url","id","title","console","log","getDocs","abrupt","stop","_x","apply","arguments","handleFileUpload","_ref2","_callee2","files","file","fileName","userFilesCollectionRef","scaledFile","downloadURL","_context2","name","size","t0","uploadFile","t1","error","setTimeout","_x2","_x3","_ref3","_callee3","collectionRef","storageRef","uploadTask","snapshot","uploadedFiles","docRef","_context3","ref","storage","uploadBytesResumable","getDownloadURL","prevGallery","_toConsumableArray","setDoc","_x4","_x5","_x6","_x7","handleRemovePhoto","_ref4","_callee4","index","event","docPath","updatedGallery","_context4","deleteObject","deleteDoc","filter","_","i","_x8","_x9","handleTitleChange","value","photoId","photo","_objectSpread","handleDescriptionChange","handleUploadDescription","_ref5","_callee5","_context5","Promise","all","updateDoc","_x10","getFileIcon","pop","toLowerCase","_jsxs","style","color","xmlns","width","height","viewBox","children","_jsx","d","fill","isGalleryLoading","length","some","isUploadingDescription","isCarouselLoading","isUploading","handleImageUpload","_ref6","_callee6","_context6","updateProfile","then","catch","_x11","clearUpdateMessage","updateProfileInfo","_ref7","_callee7","approvedStatus","customURLStatus","existingPoints","userProfileRef","updatedUser","newPhotoURL","_context7","approved","points","currentUser","document","getElementById","_ref8","_callee8","_context8","_x12","handleRemoveKeyword","updatedKeywords","splice","removeKeyword","handleImageClick","enableScroll","body","overflow","handleDragEnter","e","preventDefault","handleAddLink","_ref9","_callee9","formattedUrl","newLink","_context9","trim","startsWith","addDoc","context","finish","_x13","handleRemoveLink","_ref10","_callee10","linkId","linkDocRef","updatedLinks","_context10","_x14","_x15","className","src","alt","onError","onClick","cursor","strokeWidth","stroke","strokeLinecap","strokeLinejoin","process","placeholder","onChange","target","readOnly","pointerEvents","htmlFor","rows","resize","checked","link","href","rel","replace","role","onDragEnter","onDragOver","onDragLeave","onDrop","dataTransfer","multiple","onKeyDown","key","LoadingCircle","Carousel","Item","Caption","window","innerWidth","handleAddKeyword","disabled","keyword","marginLeft","ImageCropper","closeModal","handleImageError","collectionName","FlashMessage","showFlash","setShowFlash","timer","clearTimeout","image","setImage","selectedFileName","setSelectedFileName","setDocRef","fileInputRef","useRef","setCropperRef","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","defaultImageURL","setOriginalImage","classList","add","remove","handleUpload","_docSnap$data","docSnap","currentPhotoURL","oldCroppedImageStorageRef","originalImageBlob","croppedImageBlob","croppedImageFile","options","compressedFile","compressedBlob","originalImageStorageRef","originalImageMetadata","originalImageUploadTask","croppedImageStorageRef","croppedImageUploadTask","fetch","res","blob","resolve","canvas","createElement","ctx","getContext","imageToCrop","Image","onload","drawImage","toBlob","URL","createObjectURL","File","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","arrayBuffer","Blob","contentType","on","originalImageDownloadURL","croppedImageDownloadURL","reader","FileReader","result","readAsDataURL","handleDeletePhoto","current","accept","addEventListener","_doc$data","handlePhotoURLChange","marginRight","Cropper","onCropChange","onZoomChange","onCropComplete","croppedArea","cropShape","aspect","click"],"sourceRoot":""}