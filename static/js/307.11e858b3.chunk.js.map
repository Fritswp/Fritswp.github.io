{"version":3,"file":"static/js/307.11e858b3.chunk.js","mappings":"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","sources":["ChatBot/ChatHistory.js","ChatBot/ChatExperts.js","ChatBot/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst ChatHistory = ({ isOpen, toggleOpen }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatHistoryRef = useRef(null);\n\n  const toggleDropdown = () => {\n    toggleOpen();\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatHistoryRef.current && !chatHistoryRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  return (\n    <div ref={chatHistoryRef} className={`chatbot-history ${isOpen ? 'chatbot-history-open' : ''}`}>\n      <span className={`svg-chatbot-history ${isOpen ? 'svg-chatbot-history-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n        <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n          <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n        </svg>\n      </span>\n      {isDropdownOpen && (\n      <div className='chatbot-previous'>\n  <button className=\"chat-history-btn\">\n  <div style={{ display: 'flex', alignItems: 'center' }} >\n    <img src={`${process.env.PUBLIC_URL}/images/arts/TIO.webp`} alt=\"TIO illustration\" className=\"me-1 very-small-avatar rounded-circle\" />\n    <p className=\"font-weight-bold mb-0\" style={{ color: 'white', marginLeft: '5px' }}>Let's Chat</p>\n  </div>\n  <div className='ms-auto '>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"white\" width=\"18\" height=\"18\"> \n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\" />\n    </svg>\n  </div>\n</button>\n<p className=\"text-sm text-muted\">Today</p>\n      </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatHistory;","import React, { useState, useEffect, useRef } from 'react';\n\nconst ChatExperts = ({ isOpen, toggleOpen }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const chatExpertsRef = useRef(null);\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n    toggleOpen(); // Toggle ChatExperts\n  };\n\n  const handleClickOutside = (event) => {\n    if (chatExpertsRef.current && !chatExpertsRef.current.contains(event.target)) {\n      toggleOpen();\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    const isMobile = window.innerWidth <= 768; // Set your mobile width threshold\n    if (isOpen && isMobile) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  return (\n    <div ref={chatExpertsRef} className={`chatbot-expert ${isOpen ? 'chatbot-expert-open' : ''}`}>\n      <span className={`svg-chatbot-expert ${isOpen ? 'svg-chatbot-expert-rotate-icon' : ''}`} aria-hidden=\"true\" onClick={toggleDropdown}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" style={{ marginLeft: 'auto' }}>\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\" />\n      </svg>\n      </span>\n      <div>\n        <h4 >Experts</h4>\n      </div>\n      <button\n      className=\"chat-btn d-flex \"\n    >\n      <img\n        src= {`${process.env.PUBLIC_URL}/images/arts/user.webp`}\n        alt=\"Avatar\"\n        className=\"very-small-avatar rounded-circle\"\n      />\n\n  <div>\n    <p className=\"font-weight-bold mb-0 text-start\">name</p>\n    {/* Add other data like time */}\n    <p className=\"text-sm text-muted text-start\"></p>\n  </div>\n\n    </button>\n    </div>\n  );\n};\n\nexport default ChatExperts;\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport ChatHistory from './ChatHistory';\nimport ChatExperts from './ChatExperts';\n\nconst ChatInterface = () => {\n  const [message, setMessage] = useState('');\n  const [textareaHeight, setTextareaHeight] = useState('52px');\n  const textareaRef = useRef(null);\n  const maxTextareaHeight = 200;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isIconRotated, setIsIconRotated] = useState(false);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [isExpertsOpen, setIsExpertsOpen] = useState(false);\n\n  const dropdownRef = useRef(null);\n\n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n    setIsExpertsOpen(false);\n  };\n\n  const toggleExperts = () => {\n    setIsExpertsOpen(!isExpertsOpen);\n    setIsHistoryOpen(false);\n  };\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setIsIconRotated(!isIconRotated);\n  };\n\n  const handleTextareaResize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      // Temporarily set height to auto to get accurate scrollHeight\n      textarea.style.height = '52px';\n      const newHeight = Math.min(textarea.scrollHeight, maxTextareaHeight);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    handleTextareaResize();\n  };\n\n  const handleClickOutside = (event) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsDropdownOpen(false);\n      setIsIconRotated(false);\n    }\n  };\n\n  useEffect(() => {\n    handleTextareaResize();\n  }, []);\n\n  useEffect(() => {\n    if (message === '') {\n      setTextareaHeight('52px');\n    }\n  }, [message]);\n\n  useEffect(() => {\n    window.addEventListener('click', handleClickOutside);\n\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"Chatcontainer-model\">\n\n\n<ChatHistory isOpen={isHistoryOpen} toggleOpen={toggleHistory} />\n\n<div className='chat-display'>\n  <div className=\"pick-model\">\n    <h4>Pick a Model</h4>\n    <span\n      className={`svg-chatbot-model ${isIconRotated ? 'svg-chatbot-model-rotate-icon' : ''}`}\n      aria-hidden=\"true\"\n      onClick={toggleDropdown}\n    >\n      <svg width=\"8\" height=\"16\" viewBox=\"0 0 8 16\">\n        <path d=\"M0.772126 1.19065L0.153407 1.80934C0.00696973 1.95578 0.00696973 2.19322 0.153407 2.33969L5.80025 8L0.153407 13.6603C0.00696973 13.8067 0.00696973 14.0442 0.153407 14.1907L0.772126 14.8094C0.918563 14.9558 1.156 14.9558 1.30247 14.8094L7.84666 8.26519C7.99309 8.11875 7.99309 7.88131 7.84666 7.73484L1.30247 1.19065C1.156 1.04419 0.918563 1.04419 0.772126 1.19065Z\"></path>\n      </svg>\n    </span>\n    {/* Dropdown Box */}\n    <div className={`chat-dropdown-model no-scroll  ${isDropdownOpen ? 'show' : ''}`}>\n    <button className=\"chat-dropdown-model-button\">\n  <div className=\"d-flex align-items-center\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" color='#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m3.75 13.5 10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75Z\" />\n    </svg>\n    <div className='d-flex flex-column align-items-start'>\n      <h5 className=\"m-0\">GPT #</h5>\n      <h6 className=\"text-muted text-start m-0\">Our most familiar model</h6>\n    </div>\n  </div>\n  <div className=\"flex-grow-1 d-flex justify-content-end\">\n    <input type=\"radio\" className=\"form-check-input listboxes\" id=\"anyJobSuccess\" name=\"jobSuccess\" />\n    <label className=\"form-check-label label-with-svg\" htmlFor=\"anyJobSuccess\"></label>\n  </div>\n</button>\n\n<button className=\"chat-dropdown-model-button\">\n  <div className=\"d-flex align-items-center\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" >\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z\" />\n</svg>\n<div className='d-flex flex-column align-items-start '>\n  <h5 className=\" m-0 \">Bard</h5>\n  <h6 className=\"text-muted text-start m-0 \">Google's AI Solution</h6>\n</div>\n</div>\n  <input type=\"radio\" className=\"form-check-input listboxes\" id=\"anyJobSuccess\" name=\"jobSuccess\" />\n  <label className=\"form-check-label label-with-svg\" htmlFor=\"anyJobSuccess\">\n  </label>\n</button>\n\n<button className=\"chat-dropdown-model-button\">\n  <div className=\"d-flex align-items-center\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" color= '#212529' fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" height=\"25\" width=\"25\" >\n<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z\" />\n</svg>\n<div className='d-flex flex-column align-items-start '>\n  <h5 className=\" m-0 \">Claude-2</h5>\n  <h6 className=\"text-muted text-start m-0 \">Focused on Ethics</h6>\n</div>\n</div>\n  <input type=\"radio\" className=\"form-check-input listboxes\" id=\"anyJobSuccess\" name=\"jobSuccess\" />\n  <label className=\"form-check-label label-with-svg\" htmlFor=\"anyJobSuccess\">\n  </label>\n</button>\n\n\n\n\n    </div>\n  </div>\n  <div className='chat-column'>\n      <div className=\"chat-box \">\n\n      <div className=\"chatui-container\">\n        <div className=\"userui-input\" >\n        <textarea\n        value={message}\n        onChange={handleMessageChange}\n        className=\"scroll-col textarea-chat\"\n        style={{ height: textareaHeight }} // Set the height dynamically\n        ref={textareaRef}\n        placeholder=\"Type a message...\"\n        autoComplete=\"off\"\n        inputMode=\"text\"\n      />\n          <button\n            aria-label=\"Send Message\"\n            className=\"svg-container send-btn\"\n          >\n            <i className=\"fas fa-paper-plane\"></i>\n          </button>\n        </div>\n        </div>\n        </div>\n        </div>\n      </div>\n      <ChatExperts isOpen={isExpertsOpen} toggleOpen={toggleExperts} />\n      </div>\n  \n\n  );\n};\n\nexport default ChatInterface;\n"],"names":["_ref","isOpen","toggleOpen","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","_useState3","_useState4","isIconRotated","setIsIconRotated","chatHistoryRef","useRef","handleClickOutside","event","current","contains","target","useEffect","isMobile","window","innerWidth","document","addEventListener","removeEventListener","_jsxs","ref","className","concat","children","_jsx","onClick","width","height","viewBox","d","style","display","alignItems","src","process","alt","color","marginLeft","xmlns","fill","strokeWidth","stroke","strokeLinecap","strokeLinejoin","chatExpertsRef","message","setMessage","textareaHeight","setTextareaHeight","textareaRef","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","isHistoryOpen","setIsHistoryOpen","_useState11","_useState12","isExpertsOpen","setIsExpertsOpen","dropdownRef","handleTextareaResize","textarea","newHeight","Math","min","scrollHeight","ChatHistory","type","id","name","htmlFor","value","onChange","e","placeholder","autoComplete","inputMode","ChatExperts"],"sourceRoot":""}